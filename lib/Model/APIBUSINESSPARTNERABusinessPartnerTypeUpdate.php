<?php
/**
 * APIBUSINESSPARTNERABusinessPartnerTypeUpdate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\BusinessPartner\Model;

use \ArrayAccess;
use \BeLenka\SAP\BusinessPartner\ObjectSerializer;

/**
 * APIBUSINESSPARTNERABusinessPartnerTypeUpdate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class APIBUSINESSPARTNERABusinessPartnerTypeUpdate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'API_BUSINESS_PARTNER.A_BusinessPartnerType-update';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'academic_title' => 'string',
        'authorization_group' => 'string',
        'business_partner_category' => 'string',
        'business_partner_grouping' => 'string',
        'correspondence_language' => 'string',
        'first_name' => 'string',
        'form_of_address' => 'string',
        'industry' => 'string',
        'international_location_number1' => 'string',
        'international_location_number2' => 'string',
        'is_female' => 'bool',
        'is_male' => 'bool',
        'is_natural_person' => 'string',
        'is_sex_unknown' => 'bool',
        'gender_code_name' => 'string',
        'language' => 'string',
        'last_name' => 'string',
        'legal_form' => 'string',
        'organization_bp_name1' => 'string',
        'organization_bp_name2' => 'string',
        'organization_bp_name3' => 'string',
        'organization_bp_name4' => 'string',
        'organization_foundation_date' => 'string',
        'organization_liquidation_date' => 'string',
        'search_term1' => 'string',
        'search_term2' => 'string',
        'additional_last_name' => 'string',
        'birth_date' => 'string',
        'business_partner_birth_date_status' => 'string',
        'business_partner_birthplace_name' => 'string',
        'business_partner_death_date' => 'string',
        'business_partner_is_blocked' => 'bool',
        'business_partner_type' => 'string',
        'group_business_partner_name1' => 'string',
        'group_business_partner_name2' => 'string',
        'international_location_number3' => 'string',
        'middle_name' => 'string',
        'name_country' => 'string',
        'name_format' => 'string',
        'person_full_name' => 'string',
        'is_marked_for_archiving' => 'bool',
        'business_partner_idby_ext_system' => 'string',
        'business_partner_print_format' => 'string',
        'business_partner_occupation' => 'string',
        'bus_part_marital_status' => 'string',
        'bus_part_nationality' => 'string',
        'business_partner_birth_name' => 'string',
        'business_partner_supplement_name' => 'string',
        'natural_person_employer_name' => 'string',
        'last_name_prefix' => 'string',
        'last_name_second_prefix' => 'string',
        'initials' => 'string',
        'bp_data_controller_is_not_required' => 'bool',
        'trading_partner' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'academic_title' => null,
        'authorization_group' => null,
        'business_partner_category' => null,
        'business_partner_grouping' => null,
        'correspondence_language' => null,
        'first_name' => null,
        'form_of_address' => null,
        'industry' => null,
        'international_location_number1' => null,
        'international_location_number2' => null,
        'is_female' => null,
        'is_male' => null,
        'is_natural_person' => null,
        'is_sex_unknown' => null,
        'gender_code_name' => null,
        'language' => null,
        'last_name' => null,
        'legal_form' => null,
        'organization_bp_name1' => null,
        'organization_bp_name2' => null,
        'organization_bp_name3' => null,
        'organization_bp_name4' => null,
        'organization_foundation_date' => null,
        'organization_liquidation_date' => null,
        'search_term1' => null,
        'search_term2' => null,
        'additional_last_name' => null,
        'birth_date' => null,
        'business_partner_birth_date_status' => null,
        'business_partner_birthplace_name' => null,
        'business_partner_death_date' => null,
        'business_partner_is_blocked' => null,
        'business_partner_type' => null,
        'group_business_partner_name1' => null,
        'group_business_partner_name2' => null,
        'international_location_number3' => null,
        'middle_name' => null,
        'name_country' => null,
        'name_format' => null,
        'person_full_name' => null,
        'is_marked_for_archiving' => null,
        'business_partner_idby_ext_system' => null,
        'business_partner_print_format' => null,
        'business_partner_occupation' => null,
        'bus_part_marital_status' => null,
        'bus_part_nationality' => null,
        'business_partner_birth_name' => null,
        'business_partner_supplement_name' => null,
        'natural_person_employer_name' => null,
        'last_name_prefix' => null,
        'last_name_second_prefix' => null,
        'initials' => null,
        'bp_data_controller_is_not_required' => null,
        'trading_partner' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'academic_title' => true,
		'authorization_group' => true,
		'business_partner_category' => true,
		'business_partner_grouping' => true,
		'correspondence_language' => true,
		'first_name' => true,
		'form_of_address' => true,
		'industry' => true,
		'international_location_number1' => true,
		'international_location_number2' => true,
		'is_female' => true,
		'is_male' => true,
		'is_natural_person' => true,
		'is_sex_unknown' => true,
		'gender_code_name' => true,
		'language' => true,
		'last_name' => true,
		'legal_form' => true,
		'organization_bp_name1' => true,
		'organization_bp_name2' => true,
		'organization_bp_name3' => true,
		'organization_bp_name4' => true,
		'organization_foundation_date' => true,
		'organization_liquidation_date' => true,
		'search_term1' => true,
		'search_term2' => true,
		'additional_last_name' => true,
		'birth_date' => true,
		'business_partner_birth_date_status' => true,
		'business_partner_birthplace_name' => true,
		'business_partner_death_date' => true,
		'business_partner_is_blocked' => true,
		'business_partner_type' => true,
		'group_business_partner_name1' => true,
		'group_business_partner_name2' => true,
		'international_location_number3' => true,
		'middle_name' => true,
		'name_country' => true,
		'name_format' => true,
		'person_full_name' => true,
		'is_marked_for_archiving' => true,
		'business_partner_idby_ext_system' => true,
		'business_partner_print_format' => true,
		'business_partner_occupation' => true,
		'bus_part_marital_status' => true,
		'bus_part_nationality' => true,
		'business_partner_birth_name' => true,
		'business_partner_supplement_name' => true,
		'natural_person_employer_name' => true,
		'last_name_prefix' => true,
		'last_name_second_prefix' => true,
		'initials' => true,
		'bp_data_controller_is_not_required' => true,
		'trading_partner' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'academic_title' => 'AcademicTitle',
        'authorization_group' => 'AuthorizationGroup',
        'business_partner_category' => 'BusinessPartnerCategory',
        'business_partner_grouping' => 'BusinessPartnerGrouping',
        'correspondence_language' => 'CorrespondenceLanguage',
        'first_name' => 'FirstName',
        'form_of_address' => 'FormOfAddress',
        'industry' => 'Industry',
        'international_location_number1' => 'InternationalLocationNumber1',
        'international_location_number2' => 'InternationalLocationNumber2',
        'is_female' => 'IsFemale',
        'is_male' => 'IsMale',
        'is_natural_person' => 'IsNaturalPerson',
        'is_sex_unknown' => 'IsSexUnknown',
        'gender_code_name' => 'GenderCodeName',
        'language' => 'Language',
        'last_name' => 'LastName',
        'legal_form' => 'LegalForm',
        'organization_bp_name1' => 'OrganizationBPName1',
        'organization_bp_name2' => 'OrganizationBPName2',
        'organization_bp_name3' => 'OrganizationBPName3',
        'organization_bp_name4' => 'OrganizationBPName4',
        'organization_foundation_date' => 'OrganizationFoundationDate',
        'organization_liquidation_date' => 'OrganizationLiquidationDate',
        'search_term1' => 'SearchTerm1',
        'search_term2' => 'SearchTerm2',
        'additional_last_name' => 'AdditionalLastName',
        'birth_date' => 'BirthDate',
        'business_partner_birth_date_status' => 'BusinessPartnerBirthDateStatus',
        'business_partner_birthplace_name' => 'BusinessPartnerBirthplaceName',
        'business_partner_death_date' => 'BusinessPartnerDeathDate',
        'business_partner_is_blocked' => 'BusinessPartnerIsBlocked',
        'business_partner_type' => 'BusinessPartnerType',
        'group_business_partner_name1' => 'GroupBusinessPartnerName1',
        'group_business_partner_name2' => 'GroupBusinessPartnerName2',
        'international_location_number3' => 'InternationalLocationNumber3',
        'middle_name' => 'MiddleName',
        'name_country' => 'NameCountry',
        'name_format' => 'NameFormat',
        'person_full_name' => 'PersonFullName',
        'is_marked_for_archiving' => 'IsMarkedForArchiving',
        'business_partner_idby_ext_system' => 'BusinessPartnerIDByExtSystem',
        'business_partner_print_format' => 'BusinessPartnerPrintFormat',
        'business_partner_occupation' => 'BusinessPartnerOccupation',
        'bus_part_marital_status' => 'BusPartMaritalStatus',
        'bus_part_nationality' => 'BusPartNationality',
        'business_partner_birth_name' => 'BusinessPartnerBirthName',
        'business_partner_supplement_name' => 'BusinessPartnerSupplementName',
        'natural_person_employer_name' => 'NaturalPersonEmployerName',
        'last_name_prefix' => 'LastNamePrefix',
        'last_name_second_prefix' => 'LastNameSecondPrefix',
        'initials' => 'Initials',
        'bp_data_controller_is_not_required' => 'BPDataControllerIsNotRequired',
        'trading_partner' => 'TradingPartner'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'academic_title' => 'setAcademicTitle',
        'authorization_group' => 'setAuthorizationGroup',
        'business_partner_category' => 'setBusinessPartnerCategory',
        'business_partner_grouping' => 'setBusinessPartnerGrouping',
        'correspondence_language' => 'setCorrespondenceLanguage',
        'first_name' => 'setFirstName',
        'form_of_address' => 'setFormOfAddress',
        'industry' => 'setIndustry',
        'international_location_number1' => 'setInternationalLocationNumber1',
        'international_location_number2' => 'setInternationalLocationNumber2',
        'is_female' => 'setIsFemale',
        'is_male' => 'setIsMale',
        'is_natural_person' => 'setIsNaturalPerson',
        'is_sex_unknown' => 'setIsSexUnknown',
        'gender_code_name' => 'setGenderCodeName',
        'language' => 'setLanguage',
        'last_name' => 'setLastName',
        'legal_form' => 'setLegalForm',
        'organization_bp_name1' => 'setOrganizationBpName1',
        'organization_bp_name2' => 'setOrganizationBpName2',
        'organization_bp_name3' => 'setOrganizationBpName3',
        'organization_bp_name4' => 'setOrganizationBpName4',
        'organization_foundation_date' => 'setOrganizationFoundationDate',
        'organization_liquidation_date' => 'setOrganizationLiquidationDate',
        'search_term1' => 'setSearchTerm1',
        'search_term2' => 'setSearchTerm2',
        'additional_last_name' => 'setAdditionalLastName',
        'birth_date' => 'setBirthDate',
        'business_partner_birth_date_status' => 'setBusinessPartnerBirthDateStatus',
        'business_partner_birthplace_name' => 'setBusinessPartnerBirthplaceName',
        'business_partner_death_date' => 'setBusinessPartnerDeathDate',
        'business_partner_is_blocked' => 'setBusinessPartnerIsBlocked',
        'business_partner_type' => 'setBusinessPartnerType',
        'group_business_partner_name1' => 'setGroupBusinessPartnerName1',
        'group_business_partner_name2' => 'setGroupBusinessPartnerName2',
        'international_location_number3' => 'setInternationalLocationNumber3',
        'middle_name' => 'setMiddleName',
        'name_country' => 'setNameCountry',
        'name_format' => 'setNameFormat',
        'person_full_name' => 'setPersonFullName',
        'is_marked_for_archiving' => 'setIsMarkedForArchiving',
        'business_partner_idby_ext_system' => 'setBusinessPartnerIdbyExtSystem',
        'business_partner_print_format' => 'setBusinessPartnerPrintFormat',
        'business_partner_occupation' => 'setBusinessPartnerOccupation',
        'bus_part_marital_status' => 'setBusPartMaritalStatus',
        'bus_part_nationality' => 'setBusPartNationality',
        'business_partner_birth_name' => 'setBusinessPartnerBirthName',
        'business_partner_supplement_name' => 'setBusinessPartnerSupplementName',
        'natural_person_employer_name' => 'setNaturalPersonEmployerName',
        'last_name_prefix' => 'setLastNamePrefix',
        'last_name_second_prefix' => 'setLastNameSecondPrefix',
        'initials' => 'setInitials',
        'bp_data_controller_is_not_required' => 'setBpDataControllerIsNotRequired',
        'trading_partner' => 'setTradingPartner'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'academic_title' => 'getAcademicTitle',
        'authorization_group' => 'getAuthorizationGroup',
        'business_partner_category' => 'getBusinessPartnerCategory',
        'business_partner_grouping' => 'getBusinessPartnerGrouping',
        'correspondence_language' => 'getCorrespondenceLanguage',
        'first_name' => 'getFirstName',
        'form_of_address' => 'getFormOfAddress',
        'industry' => 'getIndustry',
        'international_location_number1' => 'getInternationalLocationNumber1',
        'international_location_number2' => 'getInternationalLocationNumber2',
        'is_female' => 'getIsFemale',
        'is_male' => 'getIsMale',
        'is_natural_person' => 'getIsNaturalPerson',
        'is_sex_unknown' => 'getIsSexUnknown',
        'gender_code_name' => 'getGenderCodeName',
        'language' => 'getLanguage',
        'last_name' => 'getLastName',
        'legal_form' => 'getLegalForm',
        'organization_bp_name1' => 'getOrganizationBpName1',
        'organization_bp_name2' => 'getOrganizationBpName2',
        'organization_bp_name3' => 'getOrganizationBpName3',
        'organization_bp_name4' => 'getOrganizationBpName4',
        'organization_foundation_date' => 'getOrganizationFoundationDate',
        'organization_liquidation_date' => 'getOrganizationLiquidationDate',
        'search_term1' => 'getSearchTerm1',
        'search_term2' => 'getSearchTerm2',
        'additional_last_name' => 'getAdditionalLastName',
        'birth_date' => 'getBirthDate',
        'business_partner_birth_date_status' => 'getBusinessPartnerBirthDateStatus',
        'business_partner_birthplace_name' => 'getBusinessPartnerBirthplaceName',
        'business_partner_death_date' => 'getBusinessPartnerDeathDate',
        'business_partner_is_blocked' => 'getBusinessPartnerIsBlocked',
        'business_partner_type' => 'getBusinessPartnerType',
        'group_business_partner_name1' => 'getGroupBusinessPartnerName1',
        'group_business_partner_name2' => 'getGroupBusinessPartnerName2',
        'international_location_number3' => 'getInternationalLocationNumber3',
        'middle_name' => 'getMiddleName',
        'name_country' => 'getNameCountry',
        'name_format' => 'getNameFormat',
        'person_full_name' => 'getPersonFullName',
        'is_marked_for_archiving' => 'getIsMarkedForArchiving',
        'business_partner_idby_ext_system' => 'getBusinessPartnerIdbyExtSystem',
        'business_partner_print_format' => 'getBusinessPartnerPrintFormat',
        'business_partner_occupation' => 'getBusinessPartnerOccupation',
        'bus_part_marital_status' => 'getBusPartMaritalStatus',
        'bus_part_nationality' => 'getBusPartNationality',
        'business_partner_birth_name' => 'getBusinessPartnerBirthName',
        'business_partner_supplement_name' => 'getBusinessPartnerSupplementName',
        'natural_person_employer_name' => 'getNaturalPersonEmployerName',
        'last_name_prefix' => 'getLastNamePrefix',
        'last_name_second_prefix' => 'getLastNameSecondPrefix',
        'initials' => 'getInitials',
        'bp_data_controller_is_not_required' => 'getBpDataControllerIsNotRequired',
        'trading_partner' => 'getTradingPartner'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('academic_title', $data ?? [], null);
        $this->setIfExists('authorization_group', $data ?? [], null);
        $this->setIfExists('business_partner_category', $data ?? [], null);
        $this->setIfExists('business_partner_grouping', $data ?? [], null);
        $this->setIfExists('correspondence_language', $data ?? [], null);
        $this->setIfExists('first_name', $data ?? [], null);
        $this->setIfExists('form_of_address', $data ?? [], null);
        $this->setIfExists('industry', $data ?? [], null);
        $this->setIfExists('international_location_number1', $data ?? [], null);
        $this->setIfExists('international_location_number2', $data ?? [], null);
        $this->setIfExists('is_female', $data ?? [], null);
        $this->setIfExists('is_male', $data ?? [], null);
        $this->setIfExists('is_natural_person', $data ?? [], null);
        $this->setIfExists('is_sex_unknown', $data ?? [], null);
        $this->setIfExists('gender_code_name', $data ?? [], null);
        $this->setIfExists('language', $data ?? [], null);
        $this->setIfExists('last_name', $data ?? [], null);
        $this->setIfExists('legal_form', $data ?? [], null);
        $this->setIfExists('organization_bp_name1', $data ?? [], null);
        $this->setIfExists('organization_bp_name2', $data ?? [], null);
        $this->setIfExists('organization_bp_name3', $data ?? [], null);
        $this->setIfExists('organization_bp_name4', $data ?? [], null);
        $this->setIfExists('organization_foundation_date', $data ?? [], null);
        $this->setIfExists('organization_liquidation_date', $data ?? [], null);
        $this->setIfExists('search_term1', $data ?? [], null);
        $this->setIfExists('search_term2', $data ?? [], null);
        $this->setIfExists('additional_last_name', $data ?? [], null);
        $this->setIfExists('birth_date', $data ?? [], null);
        $this->setIfExists('business_partner_birth_date_status', $data ?? [], null);
        $this->setIfExists('business_partner_birthplace_name', $data ?? [], null);
        $this->setIfExists('business_partner_death_date', $data ?? [], null);
        $this->setIfExists('business_partner_is_blocked', $data ?? [], null);
        $this->setIfExists('business_partner_type', $data ?? [], null);
        $this->setIfExists('group_business_partner_name1', $data ?? [], null);
        $this->setIfExists('group_business_partner_name2', $data ?? [], null);
        $this->setIfExists('international_location_number3', $data ?? [], null);
        $this->setIfExists('middle_name', $data ?? [], null);
        $this->setIfExists('name_country', $data ?? [], null);
        $this->setIfExists('name_format', $data ?? [], null);
        $this->setIfExists('person_full_name', $data ?? [], null);
        $this->setIfExists('is_marked_for_archiving', $data ?? [], null);
        $this->setIfExists('business_partner_idby_ext_system', $data ?? [], null);
        $this->setIfExists('business_partner_print_format', $data ?? [], null);
        $this->setIfExists('business_partner_occupation', $data ?? [], null);
        $this->setIfExists('bus_part_marital_status', $data ?? [], null);
        $this->setIfExists('bus_part_nationality', $data ?? [], null);
        $this->setIfExists('business_partner_birth_name', $data ?? [], null);
        $this->setIfExists('business_partner_supplement_name', $data ?? [], null);
        $this->setIfExists('natural_person_employer_name', $data ?? [], null);
        $this->setIfExists('last_name_prefix', $data ?? [], null);
        $this->setIfExists('last_name_second_prefix', $data ?? [], null);
        $this->setIfExists('initials', $data ?? [], null);
        $this->setIfExists('bp_data_controller_is_not_required', $data ?? [], null);
        $this->setIfExists('trading_partner', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['academic_title']) && (mb_strlen($this->container['academic_title']) > 4)) {
            $invalidProperties[] = "invalid value for 'academic_title', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['authorization_group']) && (mb_strlen($this->container['authorization_group']) > 4)) {
            $invalidProperties[] = "invalid value for 'authorization_group', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['business_partner_category']) && (mb_strlen($this->container['business_partner_category']) > 1)) {
            $invalidProperties[] = "invalid value for 'business_partner_category', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['business_partner_grouping']) && (mb_strlen($this->container['business_partner_grouping']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_grouping', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['correspondence_language']) && (mb_strlen($this->container['correspondence_language']) > 2)) {
            $invalidProperties[] = "invalid value for 'correspondence_language', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['first_name']) && (mb_strlen($this->container['first_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'first_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['form_of_address']) && (mb_strlen($this->container['form_of_address']) > 4)) {
            $invalidProperties[] = "invalid value for 'form_of_address', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['industry']) && (mb_strlen($this->container['industry']) > 10)) {
            $invalidProperties[] = "invalid value for 'industry', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['international_location_number1']) && (mb_strlen($this->container['international_location_number1']) > 7)) {
            $invalidProperties[] = "invalid value for 'international_location_number1', the character length must be smaller than or equal to 7.";
        }

        if (!is_null($this->container['international_location_number2']) && (mb_strlen($this->container['international_location_number2']) > 5)) {
            $invalidProperties[] = "invalid value for 'international_location_number2', the character length must be smaller than or equal to 5.";
        }

        if (!is_null($this->container['is_natural_person']) && (mb_strlen($this->container['is_natural_person']) > 1)) {
            $invalidProperties[] = "invalid value for 'is_natural_person', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['gender_code_name']) && (mb_strlen($this->container['gender_code_name']) > 1)) {
            $invalidProperties[] = "invalid value for 'gender_code_name', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['language']) && (mb_strlen($this->container['language']) > 2)) {
            $invalidProperties[] = "invalid value for 'language', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['last_name']) && (mb_strlen($this->container['last_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'last_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['legal_form']) && (mb_strlen($this->container['legal_form']) > 2)) {
            $invalidProperties[] = "invalid value for 'legal_form', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['organization_bp_name1']) && (mb_strlen($this->container['organization_bp_name1']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name1', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['organization_bp_name2']) && (mb_strlen($this->container['organization_bp_name2']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name2', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['organization_bp_name3']) && (mb_strlen($this->container['organization_bp_name3']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name3', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['organization_bp_name4']) && (mb_strlen($this->container['organization_bp_name4']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name4', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['search_term1']) && (mb_strlen($this->container['search_term1']) > 20)) {
            $invalidProperties[] = "invalid value for 'search_term1', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['search_term2']) && (mb_strlen($this->container['search_term2']) > 20)) {
            $invalidProperties[] = "invalid value for 'search_term2', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['additional_last_name']) && (mb_strlen($this->container['additional_last_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'additional_last_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['business_partner_birth_date_status']) && (mb_strlen($this->container['business_partner_birth_date_status']) > 1)) {
            $invalidProperties[] = "invalid value for 'business_partner_birth_date_status', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['business_partner_birthplace_name']) && (mb_strlen($this->container['business_partner_birthplace_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'business_partner_birthplace_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['business_partner_type']) && (mb_strlen($this->container['business_partner_type']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_type', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['group_business_partner_name1']) && (mb_strlen($this->container['group_business_partner_name1']) > 40)) {
            $invalidProperties[] = "invalid value for 'group_business_partner_name1', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['group_business_partner_name2']) && (mb_strlen($this->container['group_business_partner_name2']) > 40)) {
            $invalidProperties[] = "invalid value for 'group_business_partner_name2', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['international_location_number3']) && (mb_strlen($this->container['international_location_number3']) > 1)) {
            $invalidProperties[] = "invalid value for 'international_location_number3', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['middle_name']) && (mb_strlen($this->container['middle_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'middle_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['name_country']) && (mb_strlen($this->container['name_country']) > 3)) {
            $invalidProperties[] = "invalid value for 'name_country', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['name_format']) && (mb_strlen($this->container['name_format']) > 2)) {
            $invalidProperties[] = "invalid value for 'name_format', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['person_full_name']) && (mb_strlen($this->container['person_full_name']) > 80)) {
            $invalidProperties[] = "invalid value for 'person_full_name', the character length must be smaller than or equal to 80.";
        }

        if (!is_null($this->container['business_partner_idby_ext_system']) && (mb_strlen($this->container['business_partner_idby_ext_system']) > 20)) {
            $invalidProperties[] = "invalid value for 'business_partner_idby_ext_system', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['business_partner_print_format']) && (mb_strlen($this->container['business_partner_print_format']) > 1)) {
            $invalidProperties[] = "invalid value for 'business_partner_print_format', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['business_partner_occupation']) && (mb_strlen($this->container['business_partner_occupation']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_occupation', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['bus_part_marital_status']) && (mb_strlen($this->container['bus_part_marital_status']) > 1)) {
            $invalidProperties[] = "invalid value for 'bus_part_marital_status', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['bus_part_nationality']) && (mb_strlen($this->container['bus_part_nationality']) > 3)) {
            $invalidProperties[] = "invalid value for 'bus_part_nationality', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['business_partner_birth_name']) && (mb_strlen($this->container['business_partner_birth_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'business_partner_birth_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['business_partner_supplement_name']) && (mb_strlen($this->container['business_partner_supplement_name']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_supplement_name', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['natural_person_employer_name']) && (mb_strlen($this->container['natural_person_employer_name']) > 35)) {
            $invalidProperties[] = "invalid value for 'natural_person_employer_name', the character length must be smaller than or equal to 35.";
        }

        if (!is_null($this->container['last_name_prefix']) && (mb_strlen($this->container['last_name_prefix']) > 4)) {
            $invalidProperties[] = "invalid value for 'last_name_prefix', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['last_name_second_prefix']) && (mb_strlen($this->container['last_name_second_prefix']) > 4)) {
            $invalidProperties[] = "invalid value for 'last_name_second_prefix', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['initials']) && (mb_strlen($this->container['initials']) > 10)) {
            $invalidProperties[] = "invalid value for 'initials', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['trading_partner']) && (mb_strlen($this->container['trading_partner']) > 6)) {
            $invalidProperties[] = "invalid value for 'trading_partner', the character length must be smaller than or equal to 6.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets academic_title
     *
     * @return string|null
     */
    public function getAcademicTitle()
    {
        return $this->container['academic_title'];
    }

    /**
     * Sets academic_title
     *
     * @param string|null $academic_title Academic Title: Key
     *
     * @return self
     */
    public function setAcademicTitle($academic_title)
    {
        if (is_null($academic_title)) {
            array_push($this->openAPINullablesSetToNull, 'academic_title');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('academic_title', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($academic_title) && (mb_strlen($academic_title) > 4)) {
            throw new \InvalidArgumentException('invalid length for $academic_title when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['academic_title'] = $academic_title;

        return $this;
    }

    /**
     * Gets authorization_group
     *
     * @return string|null
     */
    public function getAuthorizationGroup()
    {
        return $this->container['authorization_group'];
    }

    /**
     * Sets authorization_group
     *
     * @param string|null $authorization_group authorization_group
     *
     * @return self
     */
    public function setAuthorizationGroup($authorization_group)
    {
        if (is_null($authorization_group)) {
            array_push($this->openAPINullablesSetToNull, 'authorization_group');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('authorization_group', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($authorization_group) && (mb_strlen($authorization_group) > 4)) {
            throw new \InvalidArgumentException('invalid length for $authorization_group when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['authorization_group'] = $authorization_group;

        return $this;
    }

    /**
     * Gets business_partner_category
     *
     * @return string|null
     */
    public function getBusinessPartnerCategory()
    {
        return $this->container['business_partner_category'];
    }

    /**
     * Sets business_partner_category
     *
     * @param string|null $business_partner_category Business Partner Category
     *
     * @return self
     */
    public function setBusinessPartnerCategory($business_partner_category)
    {
        if (is_null($business_partner_category)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_category');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_category', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_category) && (mb_strlen($business_partner_category) > 1)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_category when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['business_partner_category'] = $business_partner_category;

        return $this;
    }

    /**
     * Gets business_partner_grouping
     *
     * @return string|null
     */
    public function getBusinessPartnerGrouping()
    {
        return $this->container['business_partner_grouping'];
    }

    /**
     * Sets business_partner_grouping
     *
     * @param string|null $business_partner_grouping Business Partner Grouping
     *
     * @return self
     */
    public function setBusinessPartnerGrouping($business_partner_grouping)
    {
        if (is_null($business_partner_grouping)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_grouping');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_grouping', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_grouping) && (mb_strlen($business_partner_grouping) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_grouping when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_grouping'] = $business_partner_grouping;

        return $this;
    }

    /**
     * Gets correspondence_language
     *
     * @return string|null
     */
    public function getCorrespondenceLanguage()
    {
        return $this->container['correspondence_language'];
    }

    /**
     * Sets correspondence_language
     *
     * @param string|null $correspondence_language Business Partner: Correspondence Language
     *
     * @return self
     */
    public function setCorrespondenceLanguage($correspondence_language)
    {
        if (is_null($correspondence_language)) {
            array_push($this->openAPINullablesSetToNull, 'correspondence_language');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('correspondence_language', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($correspondence_language) && (mb_strlen($correspondence_language) > 2)) {
            throw new \InvalidArgumentException('invalid length for $correspondence_language when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 2.');
        }

        $this->container['correspondence_language'] = $correspondence_language;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name First Name of Business Partner (Person)
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        if (is_null($first_name)) {
            array_push($this->openAPINullablesSetToNull, 'first_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('first_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($first_name) && (mb_strlen($first_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $first_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets form_of_address
     *
     * @return string|null
     */
    public function getFormOfAddress()
    {
        return $this->container['form_of_address'];
    }

    /**
     * Sets form_of_address
     *
     * @param string|null $form_of_address Form-of-Address Key
     *
     * @return self
     */
    public function setFormOfAddress($form_of_address)
    {
        if (is_null($form_of_address)) {
            array_push($this->openAPINullablesSetToNull, 'form_of_address');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('form_of_address', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($form_of_address) && (mb_strlen($form_of_address) > 4)) {
            throw new \InvalidArgumentException('invalid length for $form_of_address when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['form_of_address'] = $form_of_address;

        return $this;
    }

    /**
     * Gets industry
     *
     * @return string|null
     */
    public function getIndustry()
    {
        return $this->container['industry'];
    }

    /**
     * Sets industry
     *
     * @param string|null $industry industry
     *
     * @return self
     */
    public function setIndustry($industry)
    {
        if (is_null($industry)) {
            array_push($this->openAPINullablesSetToNull, 'industry');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('industry', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($industry) && (mb_strlen($industry) > 10)) {
            throw new \InvalidArgumentException('invalid length for $industry when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 10.');
        }

        $this->container['industry'] = $industry;

        return $this;
    }

    /**
     * Gets international_location_number1
     *
     * @return string|null
     */
    public function getInternationalLocationNumber1()
    {
        return $this->container['international_location_number1'];
    }

    /**
     * Sets international_location_number1
     *
     * @param string|null $international_location_number1 International location number  (part 1)
     *
     * @return self
     */
    public function setInternationalLocationNumber1($international_location_number1)
    {
        if (is_null($international_location_number1)) {
            array_push($this->openAPINullablesSetToNull, 'international_location_number1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('international_location_number1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($international_location_number1) && (mb_strlen($international_location_number1) > 7)) {
            throw new \InvalidArgumentException('invalid length for $international_location_number1 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 7.');
        }

        $this->container['international_location_number1'] = $international_location_number1;

        return $this;
    }

    /**
     * Gets international_location_number2
     *
     * @return string|null
     */
    public function getInternationalLocationNumber2()
    {
        return $this->container['international_location_number2'];
    }

    /**
     * Sets international_location_number2
     *
     * @param string|null $international_location_number2 International location number (Part 2)
     *
     * @return self
     */
    public function setInternationalLocationNumber2($international_location_number2)
    {
        if (is_null($international_location_number2)) {
            array_push($this->openAPINullablesSetToNull, 'international_location_number2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('international_location_number2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($international_location_number2) && (mb_strlen($international_location_number2) > 5)) {
            throw new \InvalidArgumentException('invalid length for $international_location_number2 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 5.');
        }

        $this->container['international_location_number2'] = $international_location_number2;

        return $this;
    }

    /**
     * Gets is_female
     *
     * @return bool|null
     */
    public function getIsFemale()
    {
        return $this->container['is_female'];
    }

    /**
     * Sets is_female
     *
     * @param bool|null $is_female Selection: Business partner is female
     *
     * @return self
     */
    public function setIsFemale($is_female)
    {
        if (is_null($is_female)) {
            array_push($this->openAPINullablesSetToNull, 'is_female');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_female', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_female'] = $is_female;

        return $this;
    }

    /**
     * Gets is_male
     *
     * @return bool|null
     */
    public function getIsMale()
    {
        return $this->container['is_male'];
    }

    /**
     * Sets is_male
     *
     * @param bool|null $is_male Selection: Business partner is male
     *
     * @return self
     */
    public function setIsMale($is_male)
    {
        if (is_null($is_male)) {
            array_push($this->openAPINullablesSetToNull, 'is_male');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_male', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_male'] = $is_male;

        return $this;
    }

    /**
     * Gets is_natural_person
     *
     * @return string|null
     */
    public function getIsNaturalPerson()
    {
        return $this->container['is_natural_person'];
    }

    /**
     * Sets is_natural_person
     *
     * @param string|null $is_natural_person Business Partner Is a Natural Person Under the Tax Laws
     *
     * @return self
     */
    public function setIsNaturalPerson($is_natural_person)
    {
        if (is_null($is_natural_person)) {
            array_push($this->openAPINullablesSetToNull, 'is_natural_person');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_natural_person', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($is_natural_person) && (mb_strlen($is_natural_person) > 1)) {
            throw new \InvalidArgumentException('invalid length for $is_natural_person when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['is_natural_person'] = $is_natural_person;

        return $this;
    }

    /**
     * Gets is_sex_unknown
     *
     * @return bool|null
     */
    public function getIsSexUnknown()
    {
        return $this->container['is_sex_unknown'];
    }

    /**
     * Sets is_sex_unknown
     *
     * @param bool|null $is_sex_unknown Selection: Sex of business partner is not known
     *
     * @return self
     */
    public function setIsSexUnknown($is_sex_unknown)
    {
        if (is_null($is_sex_unknown)) {
            array_push($this->openAPINullablesSetToNull, 'is_sex_unknown');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_sex_unknown', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_sex_unknown'] = $is_sex_unknown;

        return $this;
    }

    /**
     * Gets gender_code_name
     *
     * @return string|null
     */
    public function getGenderCodeName()
    {
        return $this->container['gender_code_name'];
    }

    /**
     * Sets gender_code_name
     *
     * @param string|null $gender_code_name Gender of Business Partner (Person)
     *
     * @return self
     */
    public function setGenderCodeName($gender_code_name)
    {
        if (is_null($gender_code_name)) {
            array_push($this->openAPINullablesSetToNull, 'gender_code_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('gender_code_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($gender_code_name) && (mb_strlen($gender_code_name) > 1)) {
            throw new \InvalidArgumentException('invalid length for $gender_code_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['gender_code_name'] = $gender_code_name;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string|null $language Business partner: Language
     *
     * @return self
     */
    public function setLanguage($language)
    {
        if (is_null($language)) {
            array_push($this->openAPINullablesSetToNull, 'language');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('language', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($language) && (mb_strlen($language) > 2)) {
            throw new \InvalidArgumentException('invalid length for $language when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 2.');
        }

        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name Last Name of Business Partner (Person)
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        if (is_null($last_name)) {
            array_push($this->openAPINullablesSetToNull, 'last_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_name) && (mb_strlen($last_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $last_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets legal_form
     *
     * @return string|null
     */
    public function getLegalForm()
    {
        return $this->container['legal_form'];
    }

    /**
     * Sets legal_form
     *
     * @param string|null $legal_form BP: Legal form of organization
     *
     * @return self
     */
    public function setLegalForm($legal_form)
    {
        if (is_null($legal_form)) {
            array_push($this->openAPINullablesSetToNull, 'legal_form');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('legal_form', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($legal_form) && (mb_strlen($legal_form) > 2)) {
            throw new \InvalidArgumentException('invalid length for $legal_form when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 2.');
        }

        $this->container['legal_form'] = $legal_form;

        return $this;
    }

    /**
     * Gets organization_bp_name1
     *
     * @return string|null
     */
    public function getOrganizationBpName1()
    {
        return $this->container['organization_bp_name1'];
    }

    /**
     * Sets organization_bp_name1
     *
     * @param string|null $organization_bp_name1 Name 1 of organization
     *
     * @return self
     */
    public function setOrganizationBpName1($organization_bp_name1)
    {
        if (is_null($organization_bp_name1)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name1) && (mb_strlen($organization_bp_name1) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name1 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name1'] = $organization_bp_name1;

        return $this;
    }

    /**
     * Gets organization_bp_name2
     *
     * @return string|null
     */
    public function getOrganizationBpName2()
    {
        return $this->container['organization_bp_name2'];
    }

    /**
     * Sets organization_bp_name2
     *
     * @param string|null $organization_bp_name2 Name 2 of organization
     *
     * @return self
     */
    public function setOrganizationBpName2($organization_bp_name2)
    {
        if (is_null($organization_bp_name2)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name2) && (mb_strlen($organization_bp_name2) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name2 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name2'] = $organization_bp_name2;

        return $this;
    }

    /**
     * Gets organization_bp_name3
     *
     * @return string|null
     */
    public function getOrganizationBpName3()
    {
        return $this->container['organization_bp_name3'];
    }

    /**
     * Sets organization_bp_name3
     *
     * @param string|null $organization_bp_name3 Name 3 of organization
     *
     * @return self
     */
    public function setOrganizationBpName3($organization_bp_name3)
    {
        if (is_null($organization_bp_name3)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name3');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name3', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name3) && (mb_strlen($organization_bp_name3) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name3 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name3'] = $organization_bp_name3;

        return $this;
    }

    /**
     * Gets organization_bp_name4
     *
     * @return string|null
     */
    public function getOrganizationBpName4()
    {
        return $this->container['organization_bp_name4'];
    }

    /**
     * Sets organization_bp_name4
     *
     * @param string|null $organization_bp_name4 Name 4 of organization
     *
     * @return self
     */
    public function setOrganizationBpName4($organization_bp_name4)
    {
        if (is_null($organization_bp_name4)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name4');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name4', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name4) && (mb_strlen($organization_bp_name4) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name4 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name4'] = $organization_bp_name4;

        return $this;
    }

    /**
     * Gets organization_foundation_date
     *
     * @return string|null
     */
    public function getOrganizationFoundationDate()
    {
        return $this->container['organization_foundation_date'];
    }

    /**
     * Sets organization_foundation_date
     *
     * @param string|null $organization_foundation_date Date organization founded
     *
     * @return self
     */
    public function setOrganizationFoundationDate($organization_foundation_date)
    {
        if (is_null($organization_foundation_date)) {
            array_push($this->openAPINullablesSetToNull, 'organization_foundation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_foundation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['organization_foundation_date'] = $organization_foundation_date;

        return $this;
    }

    /**
     * Gets organization_liquidation_date
     *
     * @return string|null
     */
    public function getOrganizationLiquidationDate()
    {
        return $this->container['organization_liquidation_date'];
    }

    /**
     * Sets organization_liquidation_date
     *
     * @param string|null $organization_liquidation_date Liquidation date of organization
     *
     * @return self
     */
    public function setOrganizationLiquidationDate($organization_liquidation_date)
    {
        if (is_null($organization_liquidation_date)) {
            array_push($this->openAPINullablesSetToNull, 'organization_liquidation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_liquidation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['organization_liquidation_date'] = $organization_liquidation_date;

        return $this;
    }

    /**
     * Gets search_term1
     *
     * @return string|null
     */
    public function getSearchTerm1()
    {
        return $this->container['search_term1'];
    }

    /**
     * Sets search_term1
     *
     * @param string|null $search_term1 Search Term 1 for Business Partner
     *
     * @return self
     */
    public function setSearchTerm1($search_term1)
    {
        if (is_null($search_term1)) {
            array_push($this->openAPINullablesSetToNull, 'search_term1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('search_term1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($search_term1) && (mb_strlen($search_term1) > 20)) {
            throw new \InvalidArgumentException('invalid length for $search_term1 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 20.');
        }

        $this->container['search_term1'] = $search_term1;

        return $this;
    }

    /**
     * Gets search_term2
     *
     * @return string|null
     */
    public function getSearchTerm2()
    {
        return $this->container['search_term2'];
    }

    /**
     * Sets search_term2
     *
     * @param string|null $search_term2 Search Term 2 for Business Partner
     *
     * @return self
     */
    public function setSearchTerm2($search_term2)
    {
        if (is_null($search_term2)) {
            array_push($this->openAPINullablesSetToNull, 'search_term2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('search_term2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($search_term2) && (mb_strlen($search_term2) > 20)) {
            throw new \InvalidArgumentException('invalid length for $search_term2 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 20.');
        }

        $this->container['search_term2'] = $search_term2;

        return $this;
    }

    /**
     * Gets additional_last_name
     *
     * @return string|null
     */
    public function getAdditionalLastName()
    {
        return $this->container['additional_last_name'];
    }

    /**
     * Sets additional_last_name
     *
     * @param string|null $additional_last_name Other Last Name of a Person
     *
     * @return self
     */
    public function setAdditionalLastName($additional_last_name)
    {
        if (is_null($additional_last_name)) {
            array_push($this->openAPINullablesSetToNull, 'additional_last_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('additional_last_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($additional_last_name) && (mb_strlen($additional_last_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $additional_last_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['additional_last_name'] = $additional_last_name;

        return $this;
    }

    /**
     * Gets birth_date
     *
     * @return string|null
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     *
     * @param string|null $birth_date Date of Birth of Business Partner
     *
     * @return self
     */
    public function setBirthDate($birth_date)
    {
        if (is_null($birth_date)) {
            array_push($this->openAPINullablesSetToNull, 'birth_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('birth_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets business_partner_birth_date_status
     *
     * @return string|null
     */
    public function getBusinessPartnerBirthDateStatus()
    {
        return $this->container['business_partner_birth_date_status'];
    }

    /**
     * Sets business_partner_birth_date_status
     *
     * @param string|null $business_partner_birth_date_status Date of Birth: Status
     *
     * @return self
     */
    public function setBusinessPartnerBirthDateStatus($business_partner_birth_date_status)
    {
        if (is_null($business_partner_birth_date_status)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_birth_date_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_birth_date_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_birth_date_status) && (mb_strlen($business_partner_birth_date_status) > 1)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_birth_date_status when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['business_partner_birth_date_status'] = $business_partner_birth_date_status;

        return $this;
    }

    /**
     * Gets business_partner_birthplace_name
     *
     * @return string|null
     */
    public function getBusinessPartnerBirthplaceName()
    {
        return $this->container['business_partner_birthplace_name'];
    }

    /**
     * Sets business_partner_birthplace_name
     *
     * @param string|null $business_partner_birthplace_name Birthplace of business partner
     *
     * @return self
     */
    public function setBusinessPartnerBirthplaceName($business_partner_birthplace_name)
    {
        if (is_null($business_partner_birthplace_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_birthplace_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_birthplace_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_birthplace_name) && (mb_strlen($business_partner_birthplace_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_birthplace_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['business_partner_birthplace_name'] = $business_partner_birthplace_name;

        return $this;
    }

    /**
     * Gets business_partner_death_date
     *
     * @return string|null
     */
    public function getBusinessPartnerDeathDate()
    {
        return $this->container['business_partner_death_date'];
    }

    /**
     * Sets business_partner_death_date
     *
     * @param string|null $business_partner_death_date Date of death of business partner
     *
     * @return self
     */
    public function setBusinessPartnerDeathDate($business_partner_death_date)
    {
        if (is_null($business_partner_death_date)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_death_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_death_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_partner_death_date'] = $business_partner_death_date;

        return $this;
    }

    /**
     * Gets business_partner_is_blocked
     *
     * @return bool|null
     */
    public function getBusinessPartnerIsBlocked()
    {
        return $this->container['business_partner_is_blocked'];
    }

    /**
     * Sets business_partner_is_blocked
     *
     * @param bool|null $business_partner_is_blocked Central Block for Business Partner
     *
     * @return self
     */
    public function setBusinessPartnerIsBlocked($business_partner_is_blocked)
    {
        if (is_null($business_partner_is_blocked)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_is_blocked');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_is_blocked', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_partner_is_blocked'] = $business_partner_is_blocked;

        return $this;
    }

    /**
     * Gets business_partner_type
     *
     * @return string|null
     */
    public function getBusinessPartnerType()
    {
        return $this->container['business_partner_type'];
    }

    /**
     * Sets business_partner_type
     *
     * @param string|null $business_partner_type Business Partner Type
     *
     * @return self
     */
    public function setBusinessPartnerType($business_partner_type)
    {
        if (is_null($business_partner_type)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_type) && (mb_strlen($business_partner_type) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_type when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_type'] = $business_partner_type;

        return $this;
    }

    /**
     * Gets group_business_partner_name1
     *
     * @return string|null
     */
    public function getGroupBusinessPartnerName1()
    {
        return $this->container['group_business_partner_name1'];
    }

    /**
     * Sets group_business_partner_name1
     *
     * @param string|null $group_business_partner_name1 Name 1 (group)
     *
     * @return self
     */
    public function setGroupBusinessPartnerName1($group_business_partner_name1)
    {
        if (is_null($group_business_partner_name1)) {
            array_push($this->openAPINullablesSetToNull, 'group_business_partner_name1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('group_business_partner_name1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($group_business_partner_name1) && (mb_strlen($group_business_partner_name1) > 40)) {
            throw new \InvalidArgumentException('invalid length for $group_business_partner_name1 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['group_business_partner_name1'] = $group_business_partner_name1;

        return $this;
    }

    /**
     * Gets group_business_partner_name2
     *
     * @return string|null
     */
    public function getGroupBusinessPartnerName2()
    {
        return $this->container['group_business_partner_name2'];
    }

    /**
     * Sets group_business_partner_name2
     *
     * @param string|null $group_business_partner_name2 Name 2 (group)
     *
     * @return self
     */
    public function setGroupBusinessPartnerName2($group_business_partner_name2)
    {
        if (is_null($group_business_partner_name2)) {
            array_push($this->openAPINullablesSetToNull, 'group_business_partner_name2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('group_business_partner_name2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($group_business_partner_name2) && (mb_strlen($group_business_partner_name2) > 40)) {
            throw new \InvalidArgumentException('invalid length for $group_business_partner_name2 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['group_business_partner_name2'] = $group_business_partner_name2;

        return $this;
    }

    /**
     * Gets international_location_number3
     *
     * @return string|null
     */
    public function getInternationalLocationNumber3()
    {
        return $this->container['international_location_number3'];
    }

    /**
     * Sets international_location_number3
     *
     * @param string|null $international_location_number3 Check digit for the international location number
     *
     * @return self
     */
    public function setInternationalLocationNumber3($international_location_number3)
    {
        if (is_null($international_location_number3)) {
            array_push($this->openAPINullablesSetToNull, 'international_location_number3');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('international_location_number3', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($international_location_number3) && (mb_strlen($international_location_number3) > 1)) {
            throw new \InvalidArgumentException('invalid length for $international_location_number3 when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['international_location_number3'] = $international_location_number3;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string|null
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string|null $middle_name Middle Name or Second Forename of a Person
     *
     * @return self
     */
    public function setMiddleName($middle_name)
    {
        if (is_null($middle_name)) {
            array_push($this->openAPINullablesSetToNull, 'middle_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('middle_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($middle_name) && (mb_strlen($middle_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $middle_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets name_country
     *
     * @return string|null
     */
    public function getNameCountry()
    {
        return $this->container['name_country'];
    }

    /**
     * Sets name_country
     *
     * @param string|null $name_country Country/Region for Name Format Rule
     *
     * @return self
     */
    public function setNameCountry($name_country)
    {
        if (is_null($name_country)) {
            array_push($this->openAPINullablesSetToNull, 'name_country');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('name_country', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($name_country) && (mb_strlen($name_country) > 3)) {
            throw new \InvalidArgumentException('invalid length for $name_country when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 3.');
        }

        $this->container['name_country'] = $name_country;

        return $this;
    }

    /**
     * Gets name_format
     *
     * @return string|null
     */
    public function getNameFormat()
    {
        return $this->container['name_format'];
    }

    /**
     * Sets name_format
     *
     * @param string|null $name_format Name format
     *
     * @return self
     */
    public function setNameFormat($name_format)
    {
        if (is_null($name_format)) {
            array_push($this->openAPINullablesSetToNull, 'name_format');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('name_format', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($name_format) && (mb_strlen($name_format) > 2)) {
            throw new \InvalidArgumentException('invalid length for $name_format when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 2.');
        }

        $this->container['name_format'] = $name_format;

        return $this;
    }

    /**
     * Gets person_full_name
     *
     * @return string|null
     */
    public function getPersonFullName()
    {
        return $this->container['person_full_name'];
    }

    /**
     * Sets person_full_name
     *
     * @param string|null $person_full_name person_full_name
     *
     * @return self
     */
    public function setPersonFullName($person_full_name)
    {
        if (is_null($person_full_name)) {
            array_push($this->openAPINullablesSetToNull, 'person_full_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('person_full_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($person_full_name) && (mb_strlen($person_full_name) > 80)) {
            throw new \InvalidArgumentException('invalid length for $person_full_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 80.');
        }

        $this->container['person_full_name'] = $person_full_name;

        return $this;
    }

    /**
     * Gets is_marked_for_archiving
     *
     * @return bool|null
     */
    public function getIsMarkedForArchiving()
    {
        return $this->container['is_marked_for_archiving'];
    }

    /**
     * Sets is_marked_for_archiving
     *
     * @param bool|null $is_marked_for_archiving Central Archiving Flag
     *
     * @return self
     */
    public function setIsMarkedForArchiving($is_marked_for_archiving)
    {
        if (is_null($is_marked_for_archiving)) {
            array_push($this->openAPINullablesSetToNull, 'is_marked_for_archiving');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_marked_for_archiving', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_marked_for_archiving'] = $is_marked_for_archiving;

        return $this;
    }

    /**
     * Gets business_partner_idby_ext_system
     *
     * @return string|null
     */
    public function getBusinessPartnerIdbyExtSystem()
    {
        return $this->container['business_partner_idby_ext_system'];
    }

    /**
     * Sets business_partner_idby_ext_system
     *
     * @param string|null $business_partner_idby_ext_system Business Partner Number in External System
     *
     * @return self
     */
    public function setBusinessPartnerIdbyExtSystem($business_partner_idby_ext_system)
    {
        if (is_null($business_partner_idby_ext_system)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_idby_ext_system');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_idby_ext_system', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_idby_ext_system) && (mb_strlen($business_partner_idby_ext_system) > 20)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_idby_ext_system when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 20.');
        }

        $this->container['business_partner_idby_ext_system'] = $business_partner_idby_ext_system;

        return $this;
    }

    /**
     * Gets business_partner_print_format
     *
     * @return string|null
     */
    public function getBusinessPartnerPrintFormat()
    {
        return $this->container['business_partner_print_format'];
    }

    /**
     * Sets business_partner_print_format
     *
     * @param string|null $business_partner_print_format Business Partner Print Format
     *
     * @return self
     */
    public function setBusinessPartnerPrintFormat($business_partner_print_format)
    {
        if (is_null($business_partner_print_format)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_print_format');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_print_format', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_print_format) && (mb_strlen($business_partner_print_format) > 1)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_print_format when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['business_partner_print_format'] = $business_partner_print_format;

        return $this;
    }

    /**
     * Gets business_partner_occupation
     *
     * @return string|null
     */
    public function getBusinessPartnerOccupation()
    {
        return $this->container['business_partner_occupation'];
    }

    /**
     * Sets business_partner_occupation
     *
     * @param string|null $business_partner_occupation Occupation/group
     *
     * @return self
     */
    public function setBusinessPartnerOccupation($business_partner_occupation)
    {
        if (is_null($business_partner_occupation)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_occupation');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_occupation', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_occupation) && (mb_strlen($business_partner_occupation) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_occupation when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_occupation'] = $business_partner_occupation;

        return $this;
    }

    /**
     * Gets bus_part_marital_status
     *
     * @return string|null
     */
    public function getBusPartMaritalStatus()
    {
        return $this->container['bus_part_marital_status'];
    }

    /**
     * Sets bus_part_marital_status
     *
     * @param string|null $bus_part_marital_status Marital Status of Business Partner
     *
     * @return self
     */
    public function setBusPartMaritalStatus($bus_part_marital_status)
    {
        if (is_null($bus_part_marital_status)) {
            array_push($this->openAPINullablesSetToNull, 'bus_part_marital_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bus_part_marital_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bus_part_marital_status) && (mb_strlen($bus_part_marital_status) > 1)) {
            throw new \InvalidArgumentException('invalid length for $bus_part_marital_status when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 1.');
        }

        $this->container['bus_part_marital_status'] = $bus_part_marital_status;

        return $this;
    }

    /**
     * Gets bus_part_nationality
     *
     * @return string|null
     */
    public function getBusPartNationality()
    {
        return $this->container['bus_part_nationality'];
    }

    /**
     * Sets bus_part_nationality
     *
     * @param string|null $bus_part_nationality bus_part_nationality
     *
     * @return self
     */
    public function setBusPartNationality($bus_part_nationality)
    {
        if (is_null($bus_part_nationality)) {
            array_push($this->openAPINullablesSetToNull, 'bus_part_nationality');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bus_part_nationality', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bus_part_nationality) && (mb_strlen($bus_part_nationality) > 3)) {
            throw new \InvalidArgumentException('invalid length for $bus_part_nationality when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 3.');
        }

        $this->container['bus_part_nationality'] = $bus_part_nationality;

        return $this;
    }

    /**
     * Gets business_partner_birth_name
     *
     * @return string|null
     */
    public function getBusinessPartnerBirthName()
    {
        return $this->container['business_partner_birth_name'];
    }

    /**
     * Sets business_partner_birth_name
     *
     * @param string|null $business_partner_birth_name Name at birth of business partner
     *
     * @return self
     */
    public function setBusinessPartnerBirthName($business_partner_birth_name)
    {
        if (is_null($business_partner_birth_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_birth_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_birth_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_birth_name) && (mb_strlen($business_partner_birth_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_birth_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 40.');
        }

        $this->container['business_partner_birth_name'] = $business_partner_birth_name;

        return $this;
    }

    /**
     * Gets business_partner_supplement_name
     *
     * @return string|null
     */
    public function getBusinessPartnerSupplementName()
    {
        return $this->container['business_partner_supplement_name'];
    }

    /**
     * Sets business_partner_supplement_name
     *
     * @param string|null $business_partner_supplement_name Name supplement, e.g. noble title (key)
     *
     * @return self
     */
    public function setBusinessPartnerSupplementName($business_partner_supplement_name)
    {
        if (is_null($business_partner_supplement_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_supplement_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_supplement_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_supplement_name) && (mb_strlen($business_partner_supplement_name) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_supplement_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_supplement_name'] = $business_partner_supplement_name;

        return $this;
    }

    /**
     * Gets natural_person_employer_name
     *
     * @return string|null
     */
    public function getNaturalPersonEmployerName()
    {
        return $this->container['natural_person_employer_name'];
    }

    /**
     * Sets natural_person_employer_name
     *
     * @param string|null $natural_person_employer_name Name of Employer of a Natural Person
     *
     * @return self
     */
    public function setNaturalPersonEmployerName($natural_person_employer_name)
    {
        if (is_null($natural_person_employer_name)) {
            array_push($this->openAPINullablesSetToNull, 'natural_person_employer_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('natural_person_employer_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($natural_person_employer_name) && (mb_strlen($natural_person_employer_name) > 35)) {
            throw new \InvalidArgumentException('invalid length for $natural_person_employer_name when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 35.');
        }

        $this->container['natural_person_employer_name'] = $natural_person_employer_name;

        return $this;
    }

    /**
     * Gets last_name_prefix
     *
     * @return string|null
     */
    public function getLastNamePrefix()
    {
        return $this->container['last_name_prefix'];
    }

    /**
     * Sets last_name_prefix
     *
     * @param string|null $last_name_prefix Name Prefix (Key)
     *
     * @return self
     */
    public function setLastNamePrefix($last_name_prefix)
    {
        if (is_null($last_name_prefix)) {
            array_push($this->openAPINullablesSetToNull, 'last_name_prefix');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_name_prefix', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_name_prefix) && (mb_strlen($last_name_prefix) > 4)) {
            throw new \InvalidArgumentException('invalid length for $last_name_prefix when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['last_name_prefix'] = $last_name_prefix;

        return $this;
    }

    /**
     * Gets last_name_second_prefix
     *
     * @return string|null
     */
    public function getLastNameSecondPrefix()
    {
        return $this->container['last_name_second_prefix'];
    }

    /**
     * Sets last_name_second_prefix
     *
     * @param string|null $last_name_second_prefix 2nd name prefix (key)
     *
     * @return self
     */
    public function setLastNameSecondPrefix($last_name_second_prefix)
    {
        if (is_null($last_name_second_prefix)) {
            array_push($this->openAPINullablesSetToNull, 'last_name_second_prefix');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_name_second_prefix', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_name_second_prefix) && (mb_strlen($last_name_second_prefix) > 4)) {
            throw new \InvalidArgumentException('invalid length for $last_name_second_prefix when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 4.');
        }

        $this->container['last_name_second_prefix'] = $last_name_second_prefix;

        return $this;
    }

    /**
     * Gets initials
     *
     * @return string|null
     */
    public function getInitials()
    {
        return $this->container['initials'];
    }

    /**
     * Sets initials
     *
     * @param string|null $initials \"Middle Initial\" or personal initials
     *
     * @return self
     */
    public function setInitials($initials)
    {
        if (is_null($initials)) {
            array_push($this->openAPINullablesSetToNull, 'initials');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('initials', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($initials) && (mb_strlen($initials) > 10)) {
            throw new \InvalidArgumentException('invalid length for $initials when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 10.');
        }

        $this->container['initials'] = $initials;

        return $this;
    }

    /**
     * Gets bp_data_controller_is_not_required
     *
     * @return bool|null
     */
    public function getBpDataControllerIsNotRequired()
    {
        return $this->container['bp_data_controller_is_not_required'];
    }

    /**
     * Sets bp_data_controller_is_not_required
     *
     * @param bool|null $bp_data_controller_is_not_required BP: Data Controller Not Required
     *
     * @return self
     */
    public function setBpDataControllerIsNotRequired($bp_data_controller_is_not_required)
    {
        if (is_null($bp_data_controller_is_not_required)) {
            array_push($this->openAPINullablesSetToNull, 'bp_data_controller_is_not_required');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_data_controller_is_not_required', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_data_controller_is_not_required'] = $bp_data_controller_is_not_required;

        return $this;
    }

    /**
     * Gets trading_partner
     *
     * @return string|null
     */
    public function getTradingPartner()
    {
        return $this->container['trading_partner'];
    }

    /**
     * Sets trading_partner
     *
     * @param string|null $trading_partner Company ID of Trading Partner
     *
     * @return self
     */
    public function setTradingPartner($trading_partner)
    {
        if (is_null($trading_partner)) {
            array_push($this->openAPINullablesSetToNull, 'trading_partner');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('trading_partner', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($trading_partner) && (mb_strlen($trading_partner) > 6)) {
            throw new \InvalidArgumentException('invalid length for $trading_partner when calling APIBUSINESSPARTNERABusinessPartnerTypeUpdate., must be smaller than or equal to 6.');
        }

        $this->container['trading_partner'] = $trading_partner;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


