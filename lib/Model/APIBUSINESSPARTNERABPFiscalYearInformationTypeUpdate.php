<?php
/**
 * APIBUSINESSPARTNERABPFiscalYearInformationTypeUpdate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\BusinessPartner\Model;

use \ArrayAccess;
use \BeLenka\SAP\BusinessPartner\ObjectSerializer;

/**
 * APIBUSINESSPARTNERABPFiscalYearInformationTypeUpdate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class APIBUSINESSPARTNERABPFiscalYearInformationTypeUpdate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'API_BUSINESS_PARTNER.A_BPFiscalYearInformationType-update';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bp_balance_sheet_currency' => 'string',
        'bp_annual_stockholder_meeting_date' => 'string',
        'bp_fiscal_year_start_date' => 'string',
        'bp_fiscal_year_end_date' => 'string',
        'bp_fiscal_year_is_closed' => 'bool',
        'bp_fiscal_year_closing_date' => 'string',
        'bp_fscl_yr_cnsldtd_fin_statement_dte' => 'string',
        'bp_capital_stock_amt_in_bal_sht_crcy' => 'float',
        'bp_issd_stock_cptl_amt_in_bal_sht_crcy' => 'float',
        'bp_partcipn_cert_amt_in_bal_sht_crcy' => 'float',
        'bp_equity_capital_amt_in_bal_sht_crcy' => 'float',
        'bp_gross_premium_amt_in_bal_sht_crcy' => 'float',
        'bp_net_premium_amt_in_bal_sht_crcy' => 'float',
        'bp_annual_sales_amt_in_bal_sht_crcy' => 'float',
        'bp_annual_net_inc_amt_in_bal_sht_crcy' => 'float',
        'bp_dividend_distr_amt_in_bal_sht_crcy' => 'float',
        'bp_debt_ratio_in_years' => 'float',
        'bp_annual_pn_l_amt_in_bal_sht_crcy' => 'float',
        'bp_bal_sheet_total_amt_in_bal_sht_crcy' => 'float',
        'bp_number_of_employees' => 'string',
        'bp_cptl_reserve_amt_in_bal_sht_crcy' => 'float',
        'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy' => 'float',
        'revn_rsrv_own_stk_amt_in_bal_sht_crcy' => 'float',
        'bp_statry_reserve_amt_in_bal_sht_crcy' => 'float',
        'bp_oth_revn_rsrv_amt_in_bal_sht_crcy' => 'float',
        'bppn_l_carryfwd_amt_in_bal_sht_crcy' => 'float',
        'bp_subordd_lblty_amt_in_bal_sht_crcy' => 'float',
        'bp_ret_on_total_cptl_empld_in_percent' => 'float',
        'bp_debt_clearance_period_in_years' => 'float',
        'bp_financing_coeff_in_percent' => 'float',
        'bp_equity_ratio_in_percent' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'bp_balance_sheet_currency' => null,
        'bp_annual_stockholder_meeting_date' => null,
        'bp_fiscal_year_start_date' => null,
        'bp_fiscal_year_end_date' => null,
        'bp_fiscal_year_is_closed' => null,
        'bp_fiscal_year_closing_date' => null,
        'bp_fscl_yr_cnsldtd_fin_statement_dte' => null,
        'bp_capital_stock_amt_in_bal_sht_crcy' => 'decimal',
        'bp_issd_stock_cptl_amt_in_bal_sht_crcy' => 'decimal',
        'bp_partcipn_cert_amt_in_bal_sht_crcy' => 'decimal',
        'bp_equity_capital_amt_in_bal_sht_crcy' => 'decimal',
        'bp_gross_premium_amt_in_bal_sht_crcy' => 'decimal',
        'bp_net_premium_amt_in_bal_sht_crcy' => 'decimal',
        'bp_annual_sales_amt_in_bal_sht_crcy' => 'decimal',
        'bp_annual_net_inc_amt_in_bal_sht_crcy' => 'decimal',
        'bp_dividend_distr_amt_in_bal_sht_crcy' => 'decimal',
        'bp_debt_ratio_in_years' => 'decimal',
        'bp_annual_pn_l_amt_in_bal_sht_crcy' => 'decimal',
        'bp_bal_sheet_total_amt_in_bal_sht_crcy' => 'decimal',
        'bp_number_of_employees' => null,
        'bp_cptl_reserve_amt_in_bal_sht_crcy' => 'decimal',
        'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy' => 'decimal',
        'revn_rsrv_own_stk_amt_in_bal_sht_crcy' => 'decimal',
        'bp_statry_reserve_amt_in_bal_sht_crcy' => 'decimal',
        'bp_oth_revn_rsrv_amt_in_bal_sht_crcy' => 'decimal',
        'bppn_l_carryfwd_amt_in_bal_sht_crcy' => 'decimal',
        'bp_subordd_lblty_amt_in_bal_sht_crcy' => 'decimal',
        'bp_ret_on_total_cptl_empld_in_percent' => 'decimal',
        'bp_debt_clearance_period_in_years' => 'decimal',
        'bp_financing_coeff_in_percent' => 'decimal',
        'bp_equity_ratio_in_percent' => 'decimal'
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'bp_balance_sheet_currency' => true,
		'bp_annual_stockholder_meeting_date' => true,
		'bp_fiscal_year_start_date' => true,
		'bp_fiscal_year_end_date' => true,
		'bp_fiscal_year_is_closed' => true,
		'bp_fiscal_year_closing_date' => true,
		'bp_fscl_yr_cnsldtd_fin_statement_dte' => true,
		'bp_capital_stock_amt_in_bal_sht_crcy' => true,
		'bp_issd_stock_cptl_amt_in_bal_sht_crcy' => true,
		'bp_partcipn_cert_amt_in_bal_sht_crcy' => true,
		'bp_equity_capital_amt_in_bal_sht_crcy' => true,
		'bp_gross_premium_amt_in_bal_sht_crcy' => true,
		'bp_net_premium_amt_in_bal_sht_crcy' => true,
		'bp_annual_sales_amt_in_bal_sht_crcy' => true,
		'bp_annual_net_inc_amt_in_bal_sht_crcy' => true,
		'bp_dividend_distr_amt_in_bal_sht_crcy' => true,
		'bp_debt_ratio_in_years' => true,
		'bp_annual_pn_l_amt_in_bal_sht_crcy' => true,
		'bp_bal_sheet_total_amt_in_bal_sht_crcy' => true,
		'bp_number_of_employees' => true,
		'bp_cptl_reserve_amt_in_bal_sht_crcy' => true,
		'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy' => true,
		'revn_rsrv_own_stk_amt_in_bal_sht_crcy' => true,
		'bp_statry_reserve_amt_in_bal_sht_crcy' => true,
		'bp_oth_revn_rsrv_amt_in_bal_sht_crcy' => true,
		'bppn_l_carryfwd_amt_in_bal_sht_crcy' => true,
		'bp_subordd_lblty_amt_in_bal_sht_crcy' => true,
		'bp_ret_on_total_cptl_empld_in_percent' => true,
		'bp_debt_clearance_period_in_years' => true,
		'bp_financing_coeff_in_percent' => true,
		'bp_equity_ratio_in_percent' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bp_balance_sheet_currency' => 'BPBalanceSheetCurrency',
        'bp_annual_stockholder_meeting_date' => 'BPAnnualStockholderMeetingDate',
        'bp_fiscal_year_start_date' => 'BPFiscalYearStartDate',
        'bp_fiscal_year_end_date' => 'BPFiscalYearEndDate',
        'bp_fiscal_year_is_closed' => 'BPFiscalYearIsClosed',
        'bp_fiscal_year_closing_date' => 'BPFiscalYearClosingDate',
        'bp_fscl_yr_cnsldtd_fin_statement_dte' => 'BPFsclYrCnsldtdFinStatementDte',
        'bp_capital_stock_amt_in_bal_sht_crcy' => 'BPCapitalStockAmtInBalShtCrcy',
        'bp_issd_stock_cptl_amt_in_bal_sht_crcy' => 'BPIssdStockCptlAmtInBalShtCrcy',
        'bp_partcipn_cert_amt_in_bal_sht_crcy' => 'BPPartcipnCertAmtInBalShtCrcy',
        'bp_equity_capital_amt_in_bal_sht_crcy' => 'BPEquityCapitalAmtInBalShtCrcy',
        'bp_gross_premium_amt_in_bal_sht_crcy' => 'BPGrossPremiumAmtInBalShtCrcy',
        'bp_net_premium_amt_in_bal_sht_crcy' => 'BPNetPremiumAmtInBalShtCrcy',
        'bp_annual_sales_amt_in_bal_sht_crcy' => 'BPAnnualSalesAmtInBalShtCrcy',
        'bp_annual_net_inc_amt_in_bal_sht_crcy' => 'BPAnnualNetIncAmtInBalShtCrcy',
        'bp_dividend_distr_amt_in_bal_sht_crcy' => 'BPDividendDistrAmtInBalShtCrcy',
        'bp_debt_ratio_in_years' => 'BPDebtRatioInYears',
        'bp_annual_pn_l_amt_in_bal_sht_crcy' => 'BPAnnualPnLAmtInBalShtCrcy',
        'bp_bal_sheet_total_amt_in_bal_sht_crcy' => 'BPBalSheetTotalAmtInBalShtCrcy',
        'bp_number_of_employees' => 'BPNumberOfEmployees',
        'bp_cptl_reserve_amt_in_bal_sht_crcy' => 'BPCptlReserveAmtInBalShtCrcy',
        'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy' => 'BPLglRevnRsrvAmtInBalShtCrcy',
        'revn_rsrv_own_stk_amt_in_bal_sht_crcy' => 'RevnRsrvOwnStkAmtInBalShtCrcy',
        'bp_statry_reserve_amt_in_bal_sht_crcy' => 'BPStatryReserveAmtInBalShtCrcy',
        'bp_oth_revn_rsrv_amt_in_bal_sht_crcy' => 'BPOthRevnRsrvAmtInBalShtCrcy',
        'bppn_l_carryfwd_amt_in_bal_sht_crcy' => 'BPPnLCarryfwdAmtInBalShtCrcy',
        'bp_subordd_lblty_amt_in_bal_sht_crcy' => 'BPSuborddLbltyAmtInBalShtCrcy',
        'bp_ret_on_total_cptl_empld_in_percent' => 'BPRetOnTotalCptlEmpldInPercent',
        'bp_debt_clearance_period_in_years' => 'BPDebtClearancePeriodInYears',
        'bp_financing_coeff_in_percent' => 'BPFinancingCoeffInPercent',
        'bp_equity_ratio_in_percent' => 'BPEquityRatioInPercent'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bp_balance_sheet_currency' => 'setBpBalanceSheetCurrency',
        'bp_annual_stockholder_meeting_date' => 'setBpAnnualStockholderMeetingDate',
        'bp_fiscal_year_start_date' => 'setBpFiscalYearStartDate',
        'bp_fiscal_year_end_date' => 'setBpFiscalYearEndDate',
        'bp_fiscal_year_is_closed' => 'setBpFiscalYearIsClosed',
        'bp_fiscal_year_closing_date' => 'setBpFiscalYearClosingDate',
        'bp_fscl_yr_cnsldtd_fin_statement_dte' => 'setBpFsclYrCnsldtdFinStatementDte',
        'bp_capital_stock_amt_in_bal_sht_crcy' => 'setBpCapitalStockAmtInBalShtCrcy',
        'bp_issd_stock_cptl_amt_in_bal_sht_crcy' => 'setBpIssdStockCptlAmtInBalShtCrcy',
        'bp_partcipn_cert_amt_in_bal_sht_crcy' => 'setBpPartcipnCertAmtInBalShtCrcy',
        'bp_equity_capital_amt_in_bal_sht_crcy' => 'setBpEquityCapitalAmtInBalShtCrcy',
        'bp_gross_premium_amt_in_bal_sht_crcy' => 'setBpGrossPremiumAmtInBalShtCrcy',
        'bp_net_premium_amt_in_bal_sht_crcy' => 'setBpNetPremiumAmtInBalShtCrcy',
        'bp_annual_sales_amt_in_bal_sht_crcy' => 'setBpAnnualSalesAmtInBalShtCrcy',
        'bp_annual_net_inc_amt_in_bal_sht_crcy' => 'setBpAnnualNetIncAmtInBalShtCrcy',
        'bp_dividend_distr_amt_in_bal_sht_crcy' => 'setBpDividendDistrAmtInBalShtCrcy',
        'bp_debt_ratio_in_years' => 'setBpDebtRatioInYears',
        'bp_annual_pn_l_amt_in_bal_sht_crcy' => 'setBpAnnualPnLAmtInBalShtCrcy',
        'bp_bal_sheet_total_amt_in_bal_sht_crcy' => 'setBpBalSheetTotalAmtInBalShtCrcy',
        'bp_number_of_employees' => 'setBpNumberOfEmployees',
        'bp_cptl_reserve_amt_in_bal_sht_crcy' => 'setBpCptlReserveAmtInBalShtCrcy',
        'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy' => 'setBpLglRevnRsrvAmtInBalShtCrcy',
        'revn_rsrv_own_stk_amt_in_bal_sht_crcy' => 'setRevnRsrvOwnStkAmtInBalShtCrcy',
        'bp_statry_reserve_amt_in_bal_sht_crcy' => 'setBpStatryReserveAmtInBalShtCrcy',
        'bp_oth_revn_rsrv_amt_in_bal_sht_crcy' => 'setBpOthRevnRsrvAmtInBalShtCrcy',
        'bppn_l_carryfwd_amt_in_bal_sht_crcy' => 'setBppnLCarryfwdAmtInBalShtCrcy',
        'bp_subordd_lblty_amt_in_bal_sht_crcy' => 'setBpSuborddLbltyAmtInBalShtCrcy',
        'bp_ret_on_total_cptl_empld_in_percent' => 'setBpRetOnTotalCptlEmpldInPercent',
        'bp_debt_clearance_period_in_years' => 'setBpDebtClearancePeriodInYears',
        'bp_financing_coeff_in_percent' => 'setBpFinancingCoeffInPercent',
        'bp_equity_ratio_in_percent' => 'setBpEquityRatioInPercent'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bp_balance_sheet_currency' => 'getBpBalanceSheetCurrency',
        'bp_annual_stockholder_meeting_date' => 'getBpAnnualStockholderMeetingDate',
        'bp_fiscal_year_start_date' => 'getBpFiscalYearStartDate',
        'bp_fiscal_year_end_date' => 'getBpFiscalYearEndDate',
        'bp_fiscal_year_is_closed' => 'getBpFiscalYearIsClosed',
        'bp_fiscal_year_closing_date' => 'getBpFiscalYearClosingDate',
        'bp_fscl_yr_cnsldtd_fin_statement_dte' => 'getBpFsclYrCnsldtdFinStatementDte',
        'bp_capital_stock_amt_in_bal_sht_crcy' => 'getBpCapitalStockAmtInBalShtCrcy',
        'bp_issd_stock_cptl_amt_in_bal_sht_crcy' => 'getBpIssdStockCptlAmtInBalShtCrcy',
        'bp_partcipn_cert_amt_in_bal_sht_crcy' => 'getBpPartcipnCertAmtInBalShtCrcy',
        'bp_equity_capital_amt_in_bal_sht_crcy' => 'getBpEquityCapitalAmtInBalShtCrcy',
        'bp_gross_premium_amt_in_bal_sht_crcy' => 'getBpGrossPremiumAmtInBalShtCrcy',
        'bp_net_premium_amt_in_bal_sht_crcy' => 'getBpNetPremiumAmtInBalShtCrcy',
        'bp_annual_sales_amt_in_bal_sht_crcy' => 'getBpAnnualSalesAmtInBalShtCrcy',
        'bp_annual_net_inc_amt_in_bal_sht_crcy' => 'getBpAnnualNetIncAmtInBalShtCrcy',
        'bp_dividend_distr_amt_in_bal_sht_crcy' => 'getBpDividendDistrAmtInBalShtCrcy',
        'bp_debt_ratio_in_years' => 'getBpDebtRatioInYears',
        'bp_annual_pn_l_amt_in_bal_sht_crcy' => 'getBpAnnualPnLAmtInBalShtCrcy',
        'bp_bal_sheet_total_amt_in_bal_sht_crcy' => 'getBpBalSheetTotalAmtInBalShtCrcy',
        'bp_number_of_employees' => 'getBpNumberOfEmployees',
        'bp_cptl_reserve_amt_in_bal_sht_crcy' => 'getBpCptlReserveAmtInBalShtCrcy',
        'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy' => 'getBpLglRevnRsrvAmtInBalShtCrcy',
        'revn_rsrv_own_stk_amt_in_bal_sht_crcy' => 'getRevnRsrvOwnStkAmtInBalShtCrcy',
        'bp_statry_reserve_amt_in_bal_sht_crcy' => 'getBpStatryReserveAmtInBalShtCrcy',
        'bp_oth_revn_rsrv_amt_in_bal_sht_crcy' => 'getBpOthRevnRsrvAmtInBalShtCrcy',
        'bppn_l_carryfwd_amt_in_bal_sht_crcy' => 'getBppnLCarryfwdAmtInBalShtCrcy',
        'bp_subordd_lblty_amt_in_bal_sht_crcy' => 'getBpSuborddLbltyAmtInBalShtCrcy',
        'bp_ret_on_total_cptl_empld_in_percent' => 'getBpRetOnTotalCptlEmpldInPercent',
        'bp_debt_clearance_period_in_years' => 'getBpDebtClearancePeriodInYears',
        'bp_financing_coeff_in_percent' => 'getBpFinancingCoeffInPercent',
        'bp_equity_ratio_in_percent' => 'getBpEquityRatioInPercent'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('bp_balance_sheet_currency', $data ?? [], null);
        $this->setIfExists('bp_annual_stockholder_meeting_date', $data ?? [], null);
        $this->setIfExists('bp_fiscal_year_start_date', $data ?? [], null);
        $this->setIfExists('bp_fiscal_year_end_date', $data ?? [], null);
        $this->setIfExists('bp_fiscal_year_is_closed', $data ?? [], null);
        $this->setIfExists('bp_fiscal_year_closing_date', $data ?? [], null);
        $this->setIfExists('bp_fscl_yr_cnsldtd_fin_statement_dte', $data ?? [], null);
        $this->setIfExists('bp_capital_stock_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_issd_stock_cptl_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_partcipn_cert_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_equity_capital_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_gross_premium_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_net_premium_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_annual_sales_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_annual_net_inc_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_dividend_distr_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_debt_ratio_in_years', $data ?? [], null);
        $this->setIfExists('bp_annual_pn_l_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_bal_sheet_total_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_number_of_employees', $data ?? [], null);
        $this->setIfExists('bp_cptl_reserve_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_lgl_revn_rsrv_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('revn_rsrv_own_stk_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_statry_reserve_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_oth_revn_rsrv_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bppn_l_carryfwd_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_subordd_lblty_amt_in_bal_sht_crcy', $data ?? [], null);
        $this->setIfExists('bp_ret_on_total_cptl_empld_in_percent', $data ?? [], null);
        $this->setIfExists('bp_debt_clearance_period_in_years', $data ?? [], null);
        $this->setIfExists('bp_financing_coeff_in_percent', $data ?? [], null);
        $this->setIfExists('bp_equity_ratio_in_percent', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['bp_balance_sheet_currency']) && (mb_strlen($this->container['bp_balance_sheet_currency']) > 5)) {
            $invalidProperties[] = "invalid value for 'bp_balance_sheet_currency', the character length must be smaller than or equal to 5.";
        }

        if (!is_null($this->container['bp_number_of_employees']) && (mb_strlen($this->container['bp_number_of_employees']) > 7)) {
            $invalidProperties[] = "invalid value for 'bp_number_of_employees', the character length must be smaller than or equal to 7.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bp_balance_sheet_currency
     *
     * @return string|null
     */
    public function getBpBalanceSheetCurrency()
    {
        return $this->container['bp_balance_sheet_currency'];
    }

    /**
     * Sets bp_balance_sheet_currency
     *
     * @param string|null $bp_balance_sheet_currency Balance Sheet Currency
     *
     * @return self
     */
    public function setBpBalanceSheetCurrency($bp_balance_sheet_currency)
    {
        if (is_null($bp_balance_sheet_currency)) {
            array_push($this->openAPINullablesSetToNull, 'bp_balance_sheet_currency');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_balance_sheet_currency', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bp_balance_sheet_currency) && (mb_strlen($bp_balance_sheet_currency) > 5)) {
            throw new \InvalidArgumentException('invalid length for $bp_balance_sheet_currency when calling APIBUSINESSPARTNERABPFiscalYearInformationTypeUpdate., must be smaller than or equal to 5.');
        }

        $this->container['bp_balance_sheet_currency'] = $bp_balance_sheet_currency;

        return $this;
    }

    /**
     * Gets bp_annual_stockholder_meeting_date
     *
     * @return string|null
     */
    public function getBpAnnualStockholderMeetingDate()
    {
        return $this->container['bp_annual_stockholder_meeting_date'];
    }

    /**
     * Sets bp_annual_stockholder_meeting_date
     *
     * @param string|null $bp_annual_stockholder_meeting_date Date of Annual Stockholders Meeting
     *
     * @return self
     */
    public function setBpAnnualStockholderMeetingDate($bp_annual_stockholder_meeting_date)
    {
        if (is_null($bp_annual_stockholder_meeting_date)) {
            array_push($this->openAPINullablesSetToNull, 'bp_annual_stockholder_meeting_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_annual_stockholder_meeting_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_annual_stockholder_meeting_date'] = $bp_annual_stockholder_meeting_date;

        return $this;
    }

    /**
     * Gets bp_fiscal_year_start_date
     *
     * @return string|null
     */
    public function getBpFiscalYearStartDate()
    {
        return $this->container['bp_fiscal_year_start_date'];
    }

    /**
     * Sets bp_fiscal_year_start_date
     *
     * @param string|null $bp_fiscal_year_start_date Fiscal Year Start Date
     *
     * @return self
     */
    public function setBpFiscalYearStartDate($bp_fiscal_year_start_date)
    {
        if (is_null($bp_fiscal_year_start_date)) {
            array_push($this->openAPINullablesSetToNull, 'bp_fiscal_year_start_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_fiscal_year_start_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_fiscal_year_start_date'] = $bp_fiscal_year_start_date;

        return $this;
    }

    /**
     * Gets bp_fiscal_year_end_date
     *
     * @return string|null
     */
    public function getBpFiscalYearEndDate()
    {
        return $this->container['bp_fiscal_year_end_date'];
    }

    /**
     * Sets bp_fiscal_year_end_date
     *
     * @param string|null $bp_fiscal_year_end_date Fiscal Year End Date
     *
     * @return self
     */
    public function setBpFiscalYearEndDate($bp_fiscal_year_end_date)
    {
        if (is_null($bp_fiscal_year_end_date)) {
            array_push($this->openAPINullablesSetToNull, 'bp_fiscal_year_end_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_fiscal_year_end_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_fiscal_year_end_date'] = $bp_fiscal_year_end_date;

        return $this;
    }

    /**
     * Gets bp_fiscal_year_is_closed
     *
     * @return bool|null
     */
    public function getBpFiscalYearIsClosed()
    {
        return $this->container['bp_fiscal_year_is_closed'];
    }

    /**
     * Sets bp_fiscal_year_is_closed
     *
     * @param bool|null $bp_fiscal_year_is_closed bp_fiscal_year_is_closed
     *
     * @return self
     */
    public function setBpFiscalYearIsClosed($bp_fiscal_year_is_closed)
    {
        if (is_null($bp_fiscal_year_is_closed)) {
            array_push($this->openAPINullablesSetToNull, 'bp_fiscal_year_is_closed');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_fiscal_year_is_closed', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_fiscal_year_is_closed'] = $bp_fiscal_year_is_closed;

        return $this;
    }

    /**
     * Gets bp_fiscal_year_closing_date
     *
     * @return string|null
     */
    public function getBpFiscalYearClosingDate()
    {
        return $this->container['bp_fiscal_year_closing_date'];
    }

    /**
     * Sets bp_fiscal_year_closing_date
     *
     * @param string|null $bp_fiscal_year_closing_date Year-End Closing Date for Fiscal Year
     *
     * @return self
     */
    public function setBpFiscalYearClosingDate($bp_fiscal_year_closing_date)
    {
        if (is_null($bp_fiscal_year_closing_date)) {
            array_push($this->openAPINullablesSetToNull, 'bp_fiscal_year_closing_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_fiscal_year_closing_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_fiscal_year_closing_date'] = $bp_fiscal_year_closing_date;

        return $this;
    }

    /**
     * Gets bp_fscl_yr_cnsldtd_fin_statement_dte
     *
     * @return string|null
     */
    public function getBpFsclYrCnsldtdFinStatementDte()
    {
        return $this->container['bp_fscl_yr_cnsldtd_fin_statement_dte'];
    }

    /**
     * Sets bp_fscl_yr_cnsldtd_fin_statement_dte
     *
     * @param string|null $bp_fscl_yr_cnsldtd_fin_statement_dte Date of Consolidated Financial Statements of Group Company
     *
     * @return self
     */
    public function setBpFsclYrCnsldtdFinStatementDte($bp_fscl_yr_cnsldtd_fin_statement_dte)
    {
        if (is_null($bp_fscl_yr_cnsldtd_fin_statement_dte)) {
            array_push($this->openAPINullablesSetToNull, 'bp_fscl_yr_cnsldtd_fin_statement_dte');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_fscl_yr_cnsldtd_fin_statement_dte', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_fscl_yr_cnsldtd_fin_statement_dte'] = $bp_fscl_yr_cnsldtd_fin_statement_dte;

        return $this;
    }

    /**
     * Gets bp_capital_stock_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpCapitalStockAmtInBalShtCrcy()
    {
        return $this->container['bp_capital_stock_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_capital_stock_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_capital_stock_amt_in_bal_sht_crcy Amount of Authorized Capital Stock for Company
     *
     * @return self
     */
    public function setBpCapitalStockAmtInBalShtCrcy($bp_capital_stock_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_capital_stock_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_capital_stock_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_capital_stock_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_capital_stock_amt_in_bal_sht_crcy'] = $bp_capital_stock_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_issd_stock_cptl_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpIssdStockCptlAmtInBalShtCrcy()
    {
        return $this->container['bp_issd_stock_cptl_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_issd_stock_cptl_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_issd_stock_cptl_amt_in_bal_sht_crcy Amount of Issued Stock Capital for Company
     *
     * @return self
     */
    public function setBpIssdStockCptlAmtInBalShtCrcy($bp_issd_stock_cptl_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_issd_stock_cptl_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_issd_stock_cptl_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_issd_stock_cptl_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_issd_stock_cptl_amt_in_bal_sht_crcy'] = $bp_issd_stock_cptl_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_partcipn_cert_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpPartcipnCertAmtInBalShtCrcy()
    {
        return $this->container['bp_partcipn_cert_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_partcipn_cert_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_partcipn_cert_amt_in_bal_sht_crcy Amount of Participation Certificates Outstanding for Company
     *
     * @return self
     */
    public function setBpPartcipnCertAmtInBalShtCrcy($bp_partcipn_cert_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_partcipn_cert_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_partcipn_cert_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_partcipn_cert_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_partcipn_cert_amt_in_bal_sht_crcy'] = $bp_partcipn_cert_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_equity_capital_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpEquityCapitalAmtInBalShtCrcy()
    {
        return $this->container['bp_equity_capital_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_equity_capital_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_equity_capital_amt_in_bal_sht_crcy Amount of Equity Capital for Company
     *
     * @return self
     */
    public function setBpEquityCapitalAmtInBalShtCrcy($bp_equity_capital_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_equity_capital_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_equity_capital_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_equity_capital_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_equity_capital_amt_in_bal_sht_crcy'] = $bp_equity_capital_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_gross_premium_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpGrossPremiumAmtInBalShtCrcy()
    {
        return $this->container['bp_gross_premium_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_gross_premium_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_gross_premium_amt_in_bal_sht_crcy bp_gross_premium_amt_in_bal_sht_crcy
     *
     * @return self
     */
    public function setBpGrossPremiumAmtInBalShtCrcy($bp_gross_premium_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_gross_premium_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_gross_premium_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_gross_premium_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_gross_premium_amt_in_bal_sht_crcy'] = $bp_gross_premium_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_net_premium_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpNetPremiumAmtInBalShtCrcy()
    {
        return $this->container['bp_net_premium_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_net_premium_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_net_premium_amt_in_bal_sht_crcy bp_net_premium_amt_in_bal_sht_crcy
     *
     * @return self
     */
    public function setBpNetPremiumAmtInBalShtCrcy($bp_net_premium_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_net_premium_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_net_premium_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_net_premium_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_net_premium_amt_in_bal_sht_crcy'] = $bp_net_premium_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_annual_sales_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpAnnualSalesAmtInBalShtCrcy()
    {
        return $this->container['bp_annual_sales_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_annual_sales_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_annual_sales_amt_in_bal_sht_crcy Amount of Annual Sales for Company
     *
     * @return self
     */
    public function setBpAnnualSalesAmtInBalShtCrcy($bp_annual_sales_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_annual_sales_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_annual_sales_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_annual_sales_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_annual_sales_amt_in_bal_sht_crcy'] = $bp_annual_sales_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_annual_net_inc_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpAnnualNetIncAmtInBalShtCrcy()
    {
        return $this->container['bp_annual_net_inc_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_annual_net_inc_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_annual_net_inc_amt_in_bal_sht_crcy Amount of Annual Net Income/Net Loss for Company
     *
     * @return self
     */
    public function setBpAnnualNetIncAmtInBalShtCrcy($bp_annual_net_inc_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_annual_net_inc_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_annual_net_inc_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_annual_net_inc_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_annual_net_inc_amt_in_bal_sht_crcy'] = $bp_annual_net_inc_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_dividend_distr_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpDividendDistrAmtInBalShtCrcy()
    {
        return $this->container['bp_dividend_distr_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_dividend_distr_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_dividend_distr_amt_in_bal_sht_crcy Dividend/Profit Distribution Amount for Company
     *
     * @return self
     */
    public function setBpDividendDistrAmtInBalShtCrcy($bp_dividend_distr_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_dividend_distr_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_dividend_distr_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_dividend_distr_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_dividend_distr_amt_in_bal_sht_crcy'] = $bp_dividend_distr_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_debt_ratio_in_years
     *
     * @return float|null
     */
    public function getBpDebtRatioInYears()
    {
        return $this->container['bp_debt_ratio_in_years'];
    }

    /**
     * Sets bp_debt_ratio_in_years
     *
     * @param float|null $bp_debt_ratio_in_years Debt Ratio in Years
     *
     * @return self
     */
    public function setBpDebtRatioInYears($bp_debt_ratio_in_years)
    {
        if (is_null($bp_debt_ratio_in_years)) {
            array_push($this->openAPINullablesSetToNull, 'bp_debt_ratio_in_years');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_debt_ratio_in_years', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_debt_ratio_in_years'] = $bp_debt_ratio_in_years;

        return $this;
    }

    /**
     * Gets bp_annual_pn_l_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpAnnualPnLAmtInBalShtCrcy()
    {
        return $this->container['bp_annual_pn_l_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_annual_pn_l_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_annual_pn_l_amt_in_bal_sht_crcy Amount of Annual Profit/Loss for Organization
     *
     * @return self
     */
    public function setBpAnnualPnLAmtInBalShtCrcy($bp_annual_pn_l_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_annual_pn_l_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_annual_pn_l_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_annual_pn_l_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_annual_pn_l_amt_in_bal_sht_crcy'] = $bp_annual_pn_l_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_bal_sheet_total_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpBalSheetTotalAmtInBalShtCrcy()
    {
        return $this->container['bp_bal_sheet_total_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_bal_sheet_total_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_bal_sheet_total_amt_in_bal_sht_crcy Amount of Balance Sheet Total for Company
     *
     * @return self
     */
    public function setBpBalSheetTotalAmtInBalShtCrcy($bp_bal_sheet_total_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_bal_sheet_total_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_bal_sheet_total_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_bal_sheet_total_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_bal_sheet_total_amt_in_bal_sht_crcy'] = $bp_bal_sheet_total_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_number_of_employees
     *
     * @return string|null
     */
    public function getBpNumberOfEmployees()
    {
        return $this->container['bp_number_of_employees'];
    }

    /**
     * Sets bp_number_of_employees
     *
     * @param string|null $bp_number_of_employees Number of Employees in Company
     *
     * @return self
     */
    public function setBpNumberOfEmployees($bp_number_of_employees)
    {
        if (is_null($bp_number_of_employees)) {
            array_push($this->openAPINullablesSetToNull, 'bp_number_of_employees');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_number_of_employees', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bp_number_of_employees) && (mb_strlen($bp_number_of_employees) > 7)) {
            throw new \InvalidArgumentException('invalid length for $bp_number_of_employees when calling APIBUSINESSPARTNERABPFiscalYearInformationTypeUpdate., must be smaller than or equal to 7.');
        }

        $this->container['bp_number_of_employees'] = $bp_number_of_employees;

        return $this;
    }

    /**
     * Gets bp_cptl_reserve_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpCptlReserveAmtInBalShtCrcy()
    {
        return $this->container['bp_cptl_reserve_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_cptl_reserve_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_cptl_reserve_amt_in_bal_sht_crcy Amount of Capital Reserve for Company
     *
     * @return self
     */
    public function setBpCptlReserveAmtInBalShtCrcy($bp_cptl_reserve_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_cptl_reserve_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_cptl_reserve_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_cptl_reserve_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_cptl_reserve_amt_in_bal_sht_crcy'] = $bp_cptl_reserve_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_lgl_revn_rsrv_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpLglRevnRsrvAmtInBalShtCrcy()
    {
        return $this->container['bp_lgl_revn_rsrv_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_lgl_revn_rsrv_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_lgl_revn_rsrv_amt_in_bal_sht_crcy Amount of Legal Revenue Reserves for Company
     *
     * @return self
     */
    public function setBpLglRevnRsrvAmtInBalShtCrcy($bp_lgl_revn_rsrv_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_lgl_revn_rsrv_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_lgl_revn_rsrv_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_lgl_revn_rsrv_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_lgl_revn_rsrv_amt_in_bal_sht_crcy'] = $bp_lgl_revn_rsrv_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets revn_rsrv_own_stk_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getRevnRsrvOwnStkAmtInBalShtCrcy()
    {
        return $this->container['revn_rsrv_own_stk_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets revn_rsrv_own_stk_amt_in_bal_sht_crcy
     *
     * @param float|null $revn_rsrv_own_stk_amt_in_bal_sht_crcy Revenue Reserves for Own Stock
     *
     * @return self
     */
    public function setRevnRsrvOwnStkAmtInBalShtCrcy($revn_rsrv_own_stk_amt_in_bal_sht_crcy)
    {
        if (is_null($revn_rsrv_own_stk_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'revn_rsrv_own_stk_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('revn_rsrv_own_stk_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['revn_rsrv_own_stk_amt_in_bal_sht_crcy'] = $revn_rsrv_own_stk_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_statry_reserve_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpStatryReserveAmtInBalShtCrcy()
    {
        return $this->container['bp_statry_reserve_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_statry_reserve_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_statry_reserve_amt_in_bal_sht_crcy Amount of Statutory Revenue Reserve for Company
     *
     * @return self
     */
    public function setBpStatryReserveAmtInBalShtCrcy($bp_statry_reserve_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_statry_reserve_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_statry_reserve_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_statry_reserve_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_statry_reserve_amt_in_bal_sht_crcy'] = $bp_statry_reserve_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_oth_revn_rsrv_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpOthRevnRsrvAmtInBalShtCrcy()
    {
        return $this->container['bp_oth_revn_rsrv_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_oth_revn_rsrv_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_oth_revn_rsrv_amt_in_bal_sht_crcy Amount of Other Revenue Reserves for Company
     *
     * @return self
     */
    public function setBpOthRevnRsrvAmtInBalShtCrcy($bp_oth_revn_rsrv_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_oth_revn_rsrv_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_oth_revn_rsrv_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_oth_revn_rsrv_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_oth_revn_rsrv_amt_in_bal_sht_crcy'] = $bp_oth_revn_rsrv_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bppn_l_carryfwd_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBppnLCarryfwdAmtInBalShtCrcy()
    {
        return $this->container['bppn_l_carryfwd_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bppn_l_carryfwd_amt_in_bal_sht_crcy
     *
     * @param float|null $bppn_l_carryfwd_amt_in_bal_sht_crcy Amount of Profit/Loss Carried Forward for Company
     *
     * @return self
     */
    public function setBppnLCarryfwdAmtInBalShtCrcy($bppn_l_carryfwd_amt_in_bal_sht_crcy)
    {
        if (is_null($bppn_l_carryfwd_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bppn_l_carryfwd_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bppn_l_carryfwd_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bppn_l_carryfwd_amt_in_bal_sht_crcy'] = $bppn_l_carryfwd_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_subordd_lblty_amt_in_bal_sht_crcy
     *
     * @return float|null
     */
    public function getBpSuborddLbltyAmtInBalShtCrcy()
    {
        return $this->container['bp_subordd_lblty_amt_in_bal_sht_crcy'];
    }

    /**
     * Sets bp_subordd_lblty_amt_in_bal_sht_crcy
     *
     * @param float|null $bp_subordd_lblty_amt_in_bal_sht_crcy Amount of Subordinated Liabilities for Company
     *
     * @return self
     */
    public function setBpSuborddLbltyAmtInBalShtCrcy($bp_subordd_lblty_amt_in_bal_sht_crcy)
    {
        if (is_null($bp_subordd_lblty_amt_in_bal_sht_crcy)) {
            array_push($this->openAPINullablesSetToNull, 'bp_subordd_lblty_amt_in_bal_sht_crcy');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_subordd_lblty_amt_in_bal_sht_crcy', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_subordd_lblty_amt_in_bal_sht_crcy'] = $bp_subordd_lblty_amt_in_bal_sht_crcy;

        return $this;
    }

    /**
     * Gets bp_ret_on_total_cptl_empld_in_percent
     *
     * @return float|null
     */
    public function getBpRetOnTotalCptlEmpldInPercent()
    {
        return $this->container['bp_ret_on_total_cptl_empld_in_percent'];
    }

    /**
     * Sets bp_ret_on_total_cptl_empld_in_percent
     *
     * @param float|null $bp_ret_on_total_cptl_empld_in_percent Return on Total Capital Employed for Company in Percent
     *
     * @return self
     */
    public function setBpRetOnTotalCptlEmpldInPercent($bp_ret_on_total_cptl_empld_in_percent)
    {
        if (is_null($bp_ret_on_total_cptl_empld_in_percent)) {
            array_push($this->openAPINullablesSetToNull, 'bp_ret_on_total_cptl_empld_in_percent');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_ret_on_total_cptl_empld_in_percent', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_ret_on_total_cptl_empld_in_percent'] = $bp_ret_on_total_cptl_empld_in_percent;

        return $this;
    }

    /**
     * Gets bp_debt_clearance_period_in_years
     *
     * @return float|null
     */
    public function getBpDebtClearancePeriodInYears()
    {
        return $this->container['bp_debt_clearance_period_in_years'];
    }

    /**
     * Sets bp_debt_clearance_period_in_years
     *
     * @param float|null $bp_debt_clearance_period_in_years Debt Clearance Period in Years
     *
     * @return self
     */
    public function setBpDebtClearancePeriodInYears($bp_debt_clearance_period_in_years)
    {
        if (is_null($bp_debt_clearance_period_in_years)) {
            array_push($this->openAPINullablesSetToNull, 'bp_debt_clearance_period_in_years');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_debt_clearance_period_in_years', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_debt_clearance_period_in_years'] = $bp_debt_clearance_period_in_years;

        return $this;
    }

    /**
     * Gets bp_financing_coeff_in_percent
     *
     * @return float|null
     */
    public function getBpFinancingCoeffInPercent()
    {
        return $this->container['bp_financing_coeff_in_percent'];
    }

    /**
     * Sets bp_financing_coeff_in_percent
     *
     * @param float|null $bp_financing_coeff_in_percent Financing Coefficient for Company in Percent
     *
     * @return self
     */
    public function setBpFinancingCoeffInPercent($bp_financing_coeff_in_percent)
    {
        if (is_null($bp_financing_coeff_in_percent)) {
            array_push($this->openAPINullablesSetToNull, 'bp_financing_coeff_in_percent');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_financing_coeff_in_percent', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_financing_coeff_in_percent'] = $bp_financing_coeff_in_percent;

        return $this;
    }

    /**
     * Gets bp_equity_ratio_in_percent
     *
     * @return float|null
     */
    public function getBpEquityRatioInPercent()
    {
        return $this->container['bp_equity_ratio_in_percent'];
    }

    /**
     * Sets bp_equity_ratio_in_percent
     *
     * @param float|null $bp_equity_ratio_in_percent Equity Ratio of Company in Percent
     *
     * @return self
     */
    public function setBpEquityRatioInPercent($bp_equity_ratio_in_percent)
    {
        if (is_null($bp_equity_ratio_in_percent)) {
            array_push($this->openAPINullablesSetToNull, 'bp_equity_ratio_in_percent');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_equity_ratio_in_percent', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }


        $this->container['bp_equity_ratio_in_percent'] = $bp_equity_ratio_in_percent;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


