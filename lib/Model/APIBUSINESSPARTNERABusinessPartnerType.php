<?php
/**
 * APIBUSINESSPARTNERABusinessPartnerType
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\BusinessPartner\Model;

use \ArrayAccess;
use \BeLenka\SAP\BusinessPartner\ObjectSerializer;

/**
 * APIBUSINESSPARTNERABusinessPartnerType Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class APIBUSINESSPARTNERABusinessPartnerType implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'API_BUSINESS_PARTNER.A_BusinessPartnerType';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'business_partner' => 'string',
        'customer' => 'string',
        'supplier' => 'string',
        'academic_title' => 'string',
        'authorization_group' => 'string',
        'business_partner_category' => 'string',
        'business_partner_full_name' => 'string',
        'business_partner_grouping' => 'string',
        'business_partner_name' => 'string',
        'business_partner_uuid' => 'string',
        'correspondence_language' => 'string',
        'created_by_user' => 'string',
        'creation_date' => 'string',
        'creation_time' => 'string',
        'first_name' => 'string',
        'form_of_address' => 'string',
        'industry' => 'string',
        'international_location_number1' => 'string',
        'international_location_number2' => 'string',
        'is_female' => 'bool',
        'is_male' => 'bool',
        'is_natural_person' => 'string',
        'is_sex_unknown' => 'bool',
        'gender_code_name' => 'string',
        'language' => 'string',
        'last_change_date' => 'string',
        'last_change_time' => 'string',
        'last_changed_by_user' => 'string',
        'last_name' => 'string',
        'legal_form' => 'string',
        'organization_bp_name1' => 'string',
        'organization_bp_name2' => 'string',
        'organization_bp_name3' => 'string',
        'organization_bp_name4' => 'string',
        'organization_foundation_date' => 'string',
        'organization_liquidation_date' => 'string',
        'search_term1' => 'string',
        'search_term2' => 'string',
        'additional_last_name' => 'string',
        'birth_date' => 'string',
        'business_partner_birth_date_status' => 'string',
        'business_partner_birthplace_name' => 'string',
        'business_partner_death_date' => 'string',
        'business_partner_is_blocked' => 'bool',
        'business_partner_type' => 'string',
        'e_tag' => 'string',
        'group_business_partner_name1' => 'string',
        'group_business_partner_name2' => 'string',
        'independent_address_id' => 'string',
        'international_location_number3' => 'string',
        'middle_name' => 'string',
        'name_country' => 'string',
        'name_format' => 'string',
        'person_full_name' => 'string',
        'person_number' => 'string',
        'is_marked_for_archiving' => 'bool',
        'business_partner_idby_ext_system' => 'string',
        'business_partner_print_format' => 'string',
        'business_partner_occupation' => 'string',
        'bus_part_marital_status' => 'string',
        'bus_part_nationality' => 'string',
        'business_partner_birth_name' => 'string',
        'business_partner_supplement_name' => 'string',
        'natural_person_employer_name' => 'string',
        'last_name_prefix' => 'string',
        'last_name_second_prefix' => 'string',
        'initials' => 'string',
        'bp_data_controller_is_not_required' => 'bool',
        'trading_partner' => 'string',
        'to_address_independent_email' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentEmail',
        'to_address_independent_fax' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentFax',
        'to_address_independent_mobile' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentMobile',
        'to_address_independent_phone' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentPhone',
        'to_address_independent_website' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentWebsite',
        'to_bp_credit_worthiness' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPCreditWorthinessType',
        'to_bp_data_controller' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPDataController',
        'to_bp_employment' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPEmployment',
        'to_bp_fin_services_reporting' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPFinancialServicesReportingType',
        'to_bp_fiscal_year_information' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPFiscalYearInformation',
        'to_bp_relationship' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPRelationship',
        'to_bu_pa_identification' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBuPaIdentification',
        'to_bu_pa_industry' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBuPaIndustry',
        'to_business_partner' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPFinancialServicesExtnType',
        'to_business_partner_address' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerAddress',
        'to_business_partner_alias' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerAlias',
        'to_business_partner_bank' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerBank',
        'to_business_partner_contact' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerContact',
        'to_business_partner_is_bank' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerIsBankType',
        'to_business_partner_rating' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerRating',
        'to_business_partner_role' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerRole',
        'to_business_partner_tax' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerTax',
        'to_bus_part_addr_depdnt_tax_nmbr' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusPartAddrDepdntTaxNmbr',
        'to_customer' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERACustomerType',
        'to_payment_card' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToPaymentCard',
        'to_supplier' => '\BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERASupplierType'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'business_partner' => null,
        'customer' => null,
        'supplier' => null,
        'academic_title' => null,
        'authorization_group' => null,
        'business_partner_category' => null,
        'business_partner_full_name' => null,
        'business_partner_grouping' => null,
        'business_partner_name' => null,
        'business_partner_uuid' => 'uuid',
        'correspondence_language' => null,
        'created_by_user' => null,
        'creation_date' => null,
        'creation_time' => null,
        'first_name' => null,
        'form_of_address' => null,
        'industry' => null,
        'international_location_number1' => null,
        'international_location_number2' => null,
        'is_female' => null,
        'is_male' => null,
        'is_natural_person' => null,
        'is_sex_unknown' => null,
        'gender_code_name' => null,
        'language' => null,
        'last_change_date' => null,
        'last_change_time' => null,
        'last_changed_by_user' => null,
        'last_name' => null,
        'legal_form' => null,
        'organization_bp_name1' => null,
        'organization_bp_name2' => null,
        'organization_bp_name3' => null,
        'organization_bp_name4' => null,
        'organization_foundation_date' => null,
        'organization_liquidation_date' => null,
        'search_term1' => null,
        'search_term2' => null,
        'additional_last_name' => null,
        'birth_date' => null,
        'business_partner_birth_date_status' => null,
        'business_partner_birthplace_name' => null,
        'business_partner_death_date' => null,
        'business_partner_is_blocked' => null,
        'business_partner_type' => null,
        'e_tag' => null,
        'group_business_partner_name1' => null,
        'group_business_partner_name2' => null,
        'independent_address_id' => null,
        'international_location_number3' => null,
        'middle_name' => null,
        'name_country' => null,
        'name_format' => null,
        'person_full_name' => null,
        'person_number' => null,
        'is_marked_for_archiving' => null,
        'business_partner_idby_ext_system' => null,
        'business_partner_print_format' => null,
        'business_partner_occupation' => null,
        'bus_part_marital_status' => null,
        'bus_part_nationality' => null,
        'business_partner_birth_name' => null,
        'business_partner_supplement_name' => null,
        'natural_person_employer_name' => null,
        'last_name_prefix' => null,
        'last_name_second_prefix' => null,
        'initials' => null,
        'bp_data_controller_is_not_required' => null,
        'trading_partner' => null,
        'to_address_independent_email' => null,
        'to_address_independent_fax' => null,
        'to_address_independent_mobile' => null,
        'to_address_independent_phone' => null,
        'to_address_independent_website' => null,
        'to_bp_credit_worthiness' => null,
        'to_bp_data_controller' => null,
        'to_bp_employment' => null,
        'to_bp_fin_services_reporting' => null,
        'to_bp_fiscal_year_information' => null,
        'to_bp_relationship' => null,
        'to_bu_pa_identification' => null,
        'to_bu_pa_industry' => null,
        'to_business_partner' => null,
        'to_business_partner_address' => null,
        'to_business_partner_alias' => null,
        'to_business_partner_bank' => null,
        'to_business_partner_contact' => null,
        'to_business_partner_is_bank' => null,
        'to_business_partner_rating' => null,
        'to_business_partner_role' => null,
        'to_business_partner_tax' => null,
        'to_bus_part_addr_depdnt_tax_nmbr' => null,
        'to_customer' => null,
        'to_payment_card' => null,
        'to_supplier' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'business_partner' => false,
		'customer' => true,
		'supplier' => true,
		'academic_title' => true,
		'authorization_group' => true,
		'business_partner_category' => true,
		'business_partner_full_name' => true,
		'business_partner_grouping' => true,
		'business_partner_name' => true,
		'business_partner_uuid' => true,
		'correspondence_language' => true,
		'created_by_user' => true,
		'creation_date' => true,
		'creation_time' => true,
		'first_name' => true,
		'form_of_address' => true,
		'industry' => true,
		'international_location_number1' => true,
		'international_location_number2' => true,
		'is_female' => true,
		'is_male' => true,
		'is_natural_person' => true,
		'is_sex_unknown' => true,
		'gender_code_name' => true,
		'language' => true,
		'last_change_date' => true,
		'last_change_time' => true,
		'last_changed_by_user' => true,
		'last_name' => true,
		'legal_form' => true,
		'organization_bp_name1' => true,
		'organization_bp_name2' => true,
		'organization_bp_name3' => true,
		'organization_bp_name4' => true,
		'organization_foundation_date' => true,
		'organization_liquidation_date' => true,
		'search_term1' => true,
		'search_term2' => true,
		'additional_last_name' => true,
		'birth_date' => true,
		'business_partner_birth_date_status' => true,
		'business_partner_birthplace_name' => true,
		'business_partner_death_date' => true,
		'business_partner_is_blocked' => true,
		'business_partner_type' => true,
		'e_tag' => true,
		'group_business_partner_name1' => true,
		'group_business_partner_name2' => true,
		'independent_address_id' => true,
		'international_location_number3' => true,
		'middle_name' => true,
		'name_country' => true,
		'name_format' => true,
		'person_full_name' => true,
		'person_number' => true,
		'is_marked_for_archiving' => true,
		'business_partner_idby_ext_system' => true,
		'business_partner_print_format' => true,
		'business_partner_occupation' => true,
		'bus_part_marital_status' => true,
		'bus_part_nationality' => true,
		'business_partner_birth_name' => true,
		'business_partner_supplement_name' => true,
		'natural_person_employer_name' => true,
		'last_name_prefix' => true,
		'last_name_second_prefix' => true,
		'initials' => true,
		'bp_data_controller_is_not_required' => true,
		'trading_partner' => true,
		'to_address_independent_email' => false,
		'to_address_independent_fax' => false,
		'to_address_independent_mobile' => false,
		'to_address_independent_phone' => false,
		'to_address_independent_website' => false,
		'to_bp_credit_worthiness' => true,
		'to_bp_data_controller' => false,
		'to_bp_employment' => false,
		'to_bp_fin_services_reporting' => true,
		'to_bp_fiscal_year_information' => false,
		'to_bp_relationship' => false,
		'to_bu_pa_identification' => false,
		'to_bu_pa_industry' => false,
		'to_business_partner' => true,
		'to_business_partner_address' => false,
		'to_business_partner_alias' => false,
		'to_business_partner_bank' => false,
		'to_business_partner_contact' => false,
		'to_business_partner_is_bank' => true,
		'to_business_partner_rating' => false,
		'to_business_partner_role' => false,
		'to_business_partner_tax' => false,
		'to_bus_part_addr_depdnt_tax_nmbr' => false,
		'to_customer' => true,
		'to_payment_card' => false,
		'to_supplier' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'business_partner' => 'BusinessPartner',
        'customer' => 'Customer',
        'supplier' => 'Supplier',
        'academic_title' => 'AcademicTitle',
        'authorization_group' => 'AuthorizationGroup',
        'business_partner_category' => 'BusinessPartnerCategory',
        'business_partner_full_name' => 'BusinessPartnerFullName',
        'business_partner_grouping' => 'BusinessPartnerGrouping',
        'business_partner_name' => 'BusinessPartnerName',
        'business_partner_uuid' => 'BusinessPartnerUUID',
        'correspondence_language' => 'CorrespondenceLanguage',
        'created_by_user' => 'CreatedByUser',
        'creation_date' => 'CreationDate',
        'creation_time' => 'CreationTime',
        'first_name' => 'FirstName',
        'form_of_address' => 'FormOfAddress',
        'industry' => 'Industry',
        'international_location_number1' => 'InternationalLocationNumber1',
        'international_location_number2' => 'InternationalLocationNumber2',
        'is_female' => 'IsFemale',
        'is_male' => 'IsMale',
        'is_natural_person' => 'IsNaturalPerson',
        'is_sex_unknown' => 'IsSexUnknown',
        'gender_code_name' => 'GenderCodeName',
        'language' => 'Language',
        'last_change_date' => 'LastChangeDate',
        'last_change_time' => 'LastChangeTime',
        'last_changed_by_user' => 'LastChangedByUser',
        'last_name' => 'LastName',
        'legal_form' => 'LegalForm',
        'organization_bp_name1' => 'OrganizationBPName1',
        'organization_bp_name2' => 'OrganizationBPName2',
        'organization_bp_name3' => 'OrganizationBPName3',
        'organization_bp_name4' => 'OrganizationBPName4',
        'organization_foundation_date' => 'OrganizationFoundationDate',
        'organization_liquidation_date' => 'OrganizationLiquidationDate',
        'search_term1' => 'SearchTerm1',
        'search_term2' => 'SearchTerm2',
        'additional_last_name' => 'AdditionalLastName',
        'birth_date' => 'BirthDate',
        'business_partner_birth_date_status' => 'BusinessPartnerBirthDateStatus',
        'business_partner_birthplace_name' => 'BusinessPartnerBirthplaceName',
        'business_partner_death_date' => 'BusinessPartnerDeathDate',
        'business_partner_is_blocked' => 'BusinessPartnerIsBlocked',
        'business_partner_type' => 'BusinessPartnerType',
        'e_tag' => 'ETag',
        'group_business_partner_name1' => 'GroupBusinessPartnerName1',
        'group_business_partner_name2' => 'GroupBusinessPartnerName2',
        'independent_address_id' => 'IndependentAddressID',
        'international_location_number3' => 'InternationalLocationNumber3',
        'middle_name' => 'MiddleName',
        'name_country' => 'NameCountry',
        'name_format' => 'NameFormat',
        'person_full_name' => 'PersonFullName',
        'person_number' => 'PersonNumber',
        'is_marked_for_archiving' => 'IsMarkedForArchiving',
        'business_partner_idby_ext_system' => 'BusinessPartnerIDByExtSystem',
        'business_partner_print_format' => 'BusinessPartnerPrintFormat',
        'business_partner_occupation' => 'BusinessPartnerOccupation',
        'bus_part_marital_status' => 'BusPartMaritalStatus',
        'bus_part_nationality' => 'BusPartNationality',
        'business_partner_birth_name' => 'BusinessPartnerBirthName',
        'business_partner_supplement_name' => 'BusinessPartnerSupplementName',
        'natural_person_employer_name' => 'NaturalPersonEmployerName',
        'last_name_prefix' => 'LastNamePrefix',
        'last_name_second_prefix' => 'LastNameSecondPrefix',
        'initials' => 'Initials',
        'bp_data_controller_is_not_required' => 'BPDataControllerIsNotRequired',
        'trading_partner' => 'TradingPartner',
        'to_address_independent_email' => 'to_AddressIndependentEmail',
        'to_address_independent_fax' => 'to_AddressIndependentFax',
        'to_address_independent_mobile' => 'to_AddressIndependentMobile',
        'to_address_independent_phone' => 'to_AddressIndependentPhone',
        'to_address_independent_website' => 'to_AddressIndependentWebsite',
        'to_bp_credit_worthiness' => 'to_BPCreditWorthiness',
        'to_bp_data_controller' => 'to_BPDataController',
        'to_bp_employment' => 'to_BPEmployment',
        'to_bp_fin_services_reporting' => 'to_BPFinServicesReporting',
        'to_bp_fiscal_year_information' => 'to_BPFiscalYearInformation',
        'to_bp_relationship' => 'to_BPRelationship',
        'to_bu_pa_identification' => 'to_BuPaIdentification',
        'to_bu_pa_industry' => 'to_BuPaIndustry',
        'to_business_partner' => 'to_BusinessPartner',
        'to_business_partner_address' => 'to_BusinessPartnerAddress',
        'to_business_partner_alias' => 'to_BusinessPartnerAlias',
        'to_business_partner_bank' => 'to_BusinessPartnerBank',
        'to_business_partner_contact' => 'to_BusinessPartnerContact',
        'to_business_partner_is_bank' => 'to_BusinessPartnerIsBank',
        'to_business_partner_rating' => 'to_BusinessPartnerRating',
        'to_business_partner_role' => 'to_BusinessPartnerRole',
        'to_business_partner_tax' => 'to_BusinessPartnerTax',
        'to_bus_part_addr_depdnt_tax_nmbr' => 'to_BusPartAddrDepdntTaxNmbr',
        'to_customer' => 'to_Customer',
        'to_payment_card' => 'to_PaymentCard',
        'to_supplier' => 'to_Supplier'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'business_partner' => 'setBusinessPartner',
        'customer' => 'setCustomer',
        'supplier' => 'setSupplier',
        'academic_title' => 'setAcademicTitle',
        'authorization_group' => 'setAuthorizationGroup',
        'business_partner_category' => 'setBusinessPartnerCategory',
        'business_partner_full_name' => 'setBusinessPartnerFullName',
        'business_partner_grouping' => 'setBusinessPartnerGrouping',
        'business_partner_name' => 'setBusinessPartnerName',
        'business_partner_uuid' => 'setBusinessPartnerUuid',
        'correspondence_language' => 'setCorrespondenceLanguage',
        'created_by_user' => 'setCreatedByUser',
        'creation_date' => 'setCreationDate',
        'creation_time' => 'setCreationTime',
        'first_name' => 'setFirstName',
        'form_of_address' => 'setFormOfAddress',
        'industry' => 'setIndustry',
        'international_location_number1' => 'setInternationalLocationNumber1',
        'international_location_number2' => 'setInternationalLocationNumber2',
        'is_female' => 'setIsFemale',
        'is_male' => 'setIsMale',
        'is_natural_person' => 'setIsNaturalPerson',
        'is_sex_unknown' => 'setIsSexUnknown',
        'gender_code_name' => 'setGenderCodeName',
        'language' => 'setLanguage',
        'last_change_date' => 'setLastChangeDate',
        'last_change_time' => 'setLastChangeTime',
        'last_changed_by_user' => 'setLastChangedByUser',
        'last_name' => 'setLastName',
        'legal_form' => 'setLegalForm',
        'organization_bp_name1' => 'setOrganizationBpName1',
        'organization_bp_name2' => 'setOrganizationBpName2',
        'organization_bp_name3' => 'setOrganizationBpName3',
        'organization_bp_name4' => 'setOrganizationBpName4',
        'organization_foundation_date' => 'setOrganizationFoundationDate',
        'organization_liquidation_date' => 'setOrganizationLiquidationDate',
        'search_term1' => 'setSearchTerm1',
        'search_term2' => 'setSearchTerm2',
        'additional_last_name' => 'setAdditionalLastName',
        'birth_date' => 'setBirthDate',
        'business_partner_birth_date_status' => 'setBusinessPartnerBirthDateStatus',
        'business_partner_birthplace_name' => 'setBusinessPartnerBirthplaceName',
        'business_partner_death_date' => 'setBusinessPartnerDeathDate',
        'business_partner_is_blocked' => 'setBusinessPartnerIsBlocked',
        'business_partner_type' => 'setBusinessPartnerType',
        'e_tag' => 'setETag',
        'group_business_partner_name1' => 'setGroupBusinessPartnerName1',
        'group_business_partner_name2' => 'setGroupBusinessPartnerName2',
        'independent_address_id' => 'setIndependentAddressId',
        'international_location_number3' => 'setInternationalLocationNumber3',
        'middle_name' => 'setMiddleName',
        'name_country' => 'setNameCountry',
        'name_format' => 'setNameFormat',
        'person_full_name' => 'setPersonFullName',
        'person_number' => 'setPersonNumber',
        'is_marked_for_archiving' => 'setIsMarkedForArchiving',
        'business_partner_idby_ext_system' => 'setBusinessPartnerIdbyExtSystem',
        'business_partner_print_format' => 'setBusinessPartnerPrintFormat',
        'business_partner_occupation' => 'setBusinessPartnerOccupation',
        'bus_part_marital_status' => 'setBusPartMaritalStatus',
        'bus_part_nationality' => 'setBusPartNationality',
        'business_partner_birth_name' => 'setBusinessPartnerBirthName',
        'business_partner_supplement_name' => 'setBusinessPartnerSupplementName',
        'natural_person_employer_name' => 'setNaturalPersonEmployerName',
        'last_name_prefix' => 'setLastNamePrefix',
        'last_name_second_prefix' => 'setLastNameSecondPrefix',
        'initials' => 'setInitials',
        'bp_data_controller_is_not_required' => 'setBpDataControllerIsNotRequired',
        'trading_partner' => 'setTradingPartner',
        'to_address_independent_email' => 'setToAddressIndependentEmail',
        'to_address_independent_fax' => 'setToAddressIndependentFax',
        'to_address_independent_mobile' => 'setToAddressIndependentMobile',
        'to_address_independent_phone' => 'setToAddressIndependentPhone',
        'to_address_independent_website' => 'setToAddressIndependentWebsite',
        'to_bp_credit_worthiness' => 'setToBpCreditWorthiness',
        'to_bp_data_controller' => 'setToBpDataController',
        'to_bp_employment' => 'setToBpEmployment',
        'to_bp_fin_services_reporting' => 'setToBpFinServicesReporting',
        'to_bp_fiscal_year_information' => 'setToBpFiscalYearInformation',
        'to_bp_relationship' => 'setToBpRelationship',
        'to_bu_pa_identification' => 'setToBuPaIdentification',
        'to_bu_pa_industry' => 'setToBuPaIndustry',
        'to_business_partner' => 'setToBusinessPartner',
        'to_business_partner_address' => 'setToBusinessPartnerAddress',
        'to_business_partner_alias' => 'setToBusinessPartnerAlias',
        'to_business_partner_bank' => 'setToBusinessPartnerBank',
        'to_business_partner_contact' => 'setToBusinessPartnerContact',
        'to_business_partner_is_bank' => 'setToBusinessPartnerIsBank',
        'to_business_partner_rating' => 'setToBusinessPartnerRating',
        'to_business_partner_role' => 'setToBusinessPartnerRole',
        'to_business_partner_tax' => 'setToBusinessPartnerTax',
        'to_bus_part_addr_depdnt_tax_nmbr' => 'setToBusPartAddrDepdntTaxNmbr',
        'to_customer' => 'setToCustomer',
        'to_payment_card' => 'setToPaymentCard',
        'to_supplier' => 'setToSupplier'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'business_partner' => 'getBusinessPartner',
        'customer' => 'getCustomer',
        'supplier' => 'getSupplier',
        'academic_title' => 'getAcademicTitle',
        'authorization_group' => 'getAuthorizationGroup',
        'business_partner_category' => 'getBusinessPartnerCategory',
        'business_partner_full_name' => 'getBusinessPartnerFullName',
        'business_partner_grouping' => 'getBusinessPartnerGrouping',
        'business_partner_name' => 'getBusinessPartnerName',
        'business_partner_uuid' => 'getBusinessPartnerUuid',
        'correspondence_language' => 'getCorrespondenceLanguage',
        'created_by_user' => 'getCreatedByUser',
        'creation_date' => 'getCreationDate',
        'creation_time' => 'getCreationTime',
        'first_name' => 'getFirstName',
        'form_of_address' => 'getFormOfAddress',
        'industry' => 'getIndustry',
        'international_location_number1' => 'getInternationalLocationNumber1',
        'international_location_number2' => 'getInternationalLocationNumber2',
        'is_female' => 'getIsFemale',
        'is_male' => 'getIsMale',
        'is_natural_person' => 'getIsNaturalPerson',
        'is_sex_unknown' => 'getIsSexUnknown',
        'gender_code_name' => 'getGenderCodeName',
        'language' => 'getLanguage',
        'last_change_date' => 'getLastChangeDate',
        'last_change_time' => 'getLastChangeTime',
        'last_changed_by_user' => 'getLastChangedByUser',
        'last_name' => 'getLastName',
        'legal_form' => 'getLegalForm',
        'organization_bp_name1' => 'getOrganizationBpName1',
        'organization_bp_name2' => 'getOrganizationBpName2',
        'organization_bp_name3' => 'getOrganizationBpName3',
        'organization_bp_name4' => 'getOrganizationBpName4',
        'organization_foundation_date' => 'getOrganizationFoundationDate',
        'organization_liquidation_date' => 'getOrganizationLiquidationDate',
        'search_term1' => 'getSearchTerm1',
        'search_term2' => 'getSearchTerm2',
        'additional_last_name' => 'getAdditionalLastName',
        'birth_date' => 'getBirthDate',
        'business_partner_birth_date_status' => 'getBusinessPartnerBirthDateStatus',
        'business_partner_birthplace_name' => 'getBusinessPartnerBirthplaceName',
        'business_partner_death_date' => 'getBusinessPartnerDeathDate',
        'business_partner_is_blocked' => 'getBusinessPartnerIsBlocked',
        'business_partner_type' => 'getBusinessPartnerType',
        'e_tag' => 'getETag',
        'group_business_partner_name1' => 'getGroupBusinessPartnerName1',
        'group_business_partner_name2' => 'getGroupBusinessPartnerName2',
        'independent_address_id' => 'getIndependentAddressId',
        'international_location_number3' => 'getInternationalLocationNumber3',
        'middle_name' => 'getMiddleName',
        'name_country' => 'getNameCountry',
        'name_format' => 'getNameFormat',
        'person_full_name' => 'getPersonFullName',
        'person_number' => 'getPersonNumber',
        'is_marked_for_archiving' => 'getIsMarkedForArchiving',
        'business_partner_idby_ext_system' => 'getBusinessPartnerIdbyExtSystem',
        'business_partner_print_format' => 'getBusinessPartnerPrintFormat',
        'business_partner_occupation' => 'getBusinessPartnerOccupation',
        'bus_part_marital_status' => 'getBusPartMaritalStatus',
        'bus_part_nationality' => 'getBusPartNationality',
        'business_partner_birth_name' => 'getBusinessPartnerBirthName',
        'business_partner_supplement_name' => 'getBusinessPartnerSupplementName',
        'natural_person_employer_name' => 'getNaturalPersonEmployerName',
        'last_name_prefix' => 'getLastNamePrefix',
        'last_name_second_prefix' => 'getLastNameSecondPrefix',
        'initials' => 'getInitials',
        'bp_data_controller_is_not_required' => 'getBpDataControllerIsNotRequired',
        'trading_partner' => 'getTradingPartner',
        'to_address_independent_email' => 'getToAddressIndependentEmail',
        'to_address_independent_fax' => 'getToAddressIndependentFax',
        'to_address_independent_mobile' => 'getToAddressIndependentMobile',
        'to_address_independent_phone' => 'getToAddressIndependentPhone',
        'to_address_independent_website' => 'getToAddressIndependentWebsite',
        'to_bp_credit_worthiness' => 'getToBpCreditWorthiness',
        'to_bp_data_controller' => 'getToBpDataController',
        'to_bp_employment' => 'getToBpEmployment',
        'to_bp_fin_services_reporting' => 'getToBpFinServicesReporting',
        'to_bp_fiscal_year_information' => 'getToBpFiscalYearInformation',
        'to_bp_relationship' => 'getToBpRelationship',
        'to_bu_pa_identification' => 'getToBuPaIdentification',
        'to_bu_pa_industry' => 'getToBuPaIndustry',
        'to_business_partner' => 'getToBusinessPartner',
        'to_business_partner_address' => 'getToBusinessPartnerAddress',
        'to_business_partner_alias' => 'getToBusinessPartnerAlias',
        'to_business_partner_bank' => 'getToBusinessPartnerBank',
        'to_business_partner_contact' => 'getToBusinessPartnerContact',
        'to_business_partner_is_bank' => 'getToBusinessPartnerIsBank',
        'to_business_partner_rating' => 'getToBusinessPartnerRating',
        'to_business_partner_role' => 'getToBusinessPartnerRole',
        'to_business_partner_tax' => 'getToBusinessPartnerTax',
        'to_bus_part_addr_depdnt_tax_nmbr' => 'getToBusPartAddrDepdntTaxNmbr',
        'to_customer' => 'getToCustomer',
        'to_payment_card' => 'getToPaymentCard',
        'to_supplier' => 'getToSupplier'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('business_partner', $data ?? [], null);
        $this->setIfExists('customer', $data ?? [], null);
        $this->setIfExists('supplier', $data ?? [], null);
        $this->setIfExists('academic_title', $data ?? [], null);
        $this->setIfExists('authorization_group', $data ?? [], null);
        $this->setIfExists('business_partner_category', $data ?? [], null);
        $this->setIfExists('business_partner_full_name', $data ?? [], null);
        $this->setIfExists('business_partner_grouping', $data ?? [], null);
        $this->setIfExists('business_partner_name', $data ?? [], null);
        $this->setIfExists('business_partner_uuid', $data ?? [], null);
        $this->setIfExists('correspondence_language', $data ?? [], null);
        $this->setIfExists('created_by_user', $data ?? [], null);
        $this->setIfExists('creation_date', $data ?? [], null);
        $this->setIfExists('creation_time', $data ?? [], null);
        $this->setIfExists('first_name', $data ?? [], null);
        $this->setIfExists('form_of_address', $data ?? [], null);
        $this->setIfExists('industry', $data ?? [], null);
        $this->setIfExists('international_location_number1', $data ?? [], null);
        $this->setIfExists('international_location_number2', $data ?? [], null);
        $this->setIfExists('is_female', $data ?? [], null);
        $this->setIfExists('is_male', $data ?? [], null);
        $this->setIfExists('is_natural_person', $data ?? [], null);
        $this->setIfExists('is_sex_unknown', $data ?? [], null);
        $this->setIfExists('gender_code_name', $data ?? [], null);
        $this->setIfExists('language', $data ?? [], null);
        $this->setIfExists('last_change_date', $data ?? [], null);
        $this->setIfExists('last_change_time', $data ?? [], null);
        $this->setIfExists('last_changed_by_user', $data ?? [], null);
        $this->setIfExists('last_name', $data ?? [], null);
        $this->setIfExists('legal_form', $data ?? [], null);
        $this->setIfExists('organization_bp_name1', $data ?? [], null);
        $this->setIfExists('organization_bp_name2', $data ?? [], null);
        $this->setIfExists('organization_bp_name3', $data ?? [], null);
        $this->setIfExists('organization_bp_name4', $data ?? [], null);
        $this->setIfExists('organization_foundation_date', $data ?? [], null);
        $this->setIfExists('organization_liquidation_date', $data ?? [], null);
        $this->setIfExists('search_term1', $data ?? [], null);
        $this->setIfExists('search_term2', $data ?? [], null);
        $this->setIfExists('additional_last_name', $data ?? [], null);
        $this->setIfExists('birth_date', $data ?? [], null);
        $this->setIfExists('business_partner_birth_date_status', $data ?? [], null);
        $this->setIfExists('business_partner_birthplace_name', $data ?? [], null);
        $this->setIfExists('business_partner_death_date', $data ?? [], null);
        $this->setIfExists('business_partner_is_blocked', $data ?? [], null);
        $this->setIfExists('business_partner_type', $data ?? [], null);
        $this->setIfExists('e_tag', $data ?? [], null);
        $this->setIfExists('group_business_partner_name1', $data ?? [], null);
        $this->setIfExists('group_business_partner_name2', $data ?? [], null);
        $this->setIfExists('independent_address_id', $data ?? [], null);
        $this->setIfExists('international_location_number3', $data ?? [], null);
        $this->setIfExists('middle_name', $data ?? [], null);
        $this->setIfExists('name_country', $data ?? [], null);
        $this->setIfExists('name_format', $data ?? [], null);
        $this->setIfExists('person_full_name', $data ?? [], null);
        $this->setIfExists('person_number', $data ?? [], null);
        $this->setIfExists('is_marked_for_archiving', $data ?? [], null);
        $this->setIfExists('business_partner_idby_ext_system', $data ?? [], null);
        $this->setIfExists('business_partner_print_format', $data ?? [], null);
        $this->setIfExists('business_partner_occupation', $data ?? [], null);
        $this->setIfExists('bus_part_marital_status', $data ?? [], null);
        $this->setIfExists('bus_part_nationality', $data ?? [], null);
        $this->setIfExists('business_partner_birth_name', $data ?? [], null);
        $this->setIfExists('business_partner_supplement_name', $data ?? [], null);
        $this->setIfExists('natural_person_employer_name', $data ?? [], null);
        $this->setIfExists('last_name_prefix', $data ?? [], null);
        $this->setIfExists('last_name_second_prefix', $data ?? [], null);
        $this->setIfExists('initials', $data ?? [], null);
        $this->setIfExists('bp_data_controller_is_not_required', $data ?? [], null);
        $this->setIfExists('trading_partner', $data ?? [], null);
        $this->setIfExists('to_address_independent_email', $data ?? [], null);
        $this->setIfExists('to_address_independent_fax', $data ?? [], null);
        $this->setIfExists('to_address_independent_mobile', $data ?? [], null);
        $this->setIfExists('to_address_independent_phone', $data ?? [], null);
        $this->setIfExists('to_address_independent_website', $data ?? [], null);
        $this->setIfExists('to_bp_credit_worthiness', $data ?? [], null);
        $this->setIfExists('to_bp_data_controller', $data ?? [], null);
        $this->setIfExists('to_bp_employment', $data ?? [], null);
        $this->setIfExists('to_bp_fin_services_reporting', $data ?? [], null);
        $this->setIfExists('to_bp_fiscal_year_information', $data ?? [], null);
        $this->setIfExists('to_bp_relationship', $data ?? [], null);
        $this->setIfExists('to_bu_pa_identification', $data ?? [], null);
        $this->setIfExists('to_bu_pa_industry', $data ?? [], null);
        $this->setIfExists('to_business_partner', $data ?? [], null);
        $this->setIfExists('to_business_partner_address', $data ?? [], null);
        $this->setIfExists('to_business_partner_alias', $data ?? [], null);
        $this->setIfExists('to_business_partner_bank', $data ?? [], null);
        $this->setIfExists('to_business_partner_contact', $data ?? [], null);
        $this->setIfExists('to_business_partner_is_bank', $data ?? [], null);
        $this->setIfExists('to_business_partner_rating', $data ?? [], null);
        $this->setIfExists('to_business_partner_role', $data ?? [], null);
        $this->setIfExists('to_business_partner_tax', $data ?? [], null);
        $this->setIfExists('to_bus_part_addr_depdnt_tax_nmbr', $data ?? [], null);
        $this->setIfExists('to_customer', $data ?? [], null);
        $this->setIfExists('to_payment_card', $data ?? [], null);
        $this->setIfExists('to_supplier', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['business_partner']) && (mb_strlen($this->container['business_partner']) > 10)) {
            $invalidProperties[] = "invalid value for 'business_partner', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['customer']) && (mb_strlen($this->container['customer']) > 10)) {
            $invalidProperties[] = "invalid value for 'customer', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['supplier']) && (mb_strlen($this->container['supplier']) > 10)) {
            $invalidProperties[] = "invalid value for 'supplier', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['academic_title']) && (mb_strlen($this->container['academic_title']) > 4)) {
            $invalidProperties[] = "invalid value for 'academic_title', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['authorization_group']) && (mb_strlen($this->container['authorization_group']) > 4)) {
            $invalidProperties[] = "invalid value for 'authorization_group', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['business_partner_category']) && (mb_strlen($this->container['business_partner_category']) > 1)) {
            $invalidProperties[] = "invalid value for 'business_partner_category', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['business_partner_full_name']) && (mb_strlen($this->container['business_partner_full_name']) > 81)) {
            $invalidProperties[] = "invalid value for 'business_partner_full_name', the character length must be smaller than or equal to 81.";
        }

        if (!is_null($this->container['business_partner_grouping']) && (mb_strlen($this->container['business_partner_grouping']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_grouping', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['business_partner_name']) && (mb_strlen($this->container['business_partner_name']) > 81)) {
            $invalidProperties[] = "invalid value for 'business_partner_name', the character length must be smaller than or equal to 81.";
        }

        if (!is_null($this->container['correspondence_language']) && (mb_strlen($this->container['correspondence_language']) > 2)) {
            $invalidProperties[] = "invalid value for 'correspondence_language', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['created_by_user']) && (mb_strlen($this->container['created_by_user']) > 12)) {
            $invalidProperties[] = "invalid value for 'created_by_user', the character length must be smaller than or equal to 12.";
        }

        if (!is_null($this->container['first_name']) && (mb_strlen($this->container['first_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'first_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['form_of_address']) && (mb_strlen($this->container['form_of_address']) > 4)) {
            $invalidProperties[] = "invalid value for 'form_of_address', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['industry']) && (mb_strlen($this->container['industry']) > 10)) {
            $invalidProperties[] = "invalid value for 'industry', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['international_location_number1']) && (mb_strlen($this->container['international_location_number1']) > 7)) {
            $invalidProperties[] = "invalid value for 'international_location_number1', the character length must be smaller than or equal to 7.";
        }

        if (!is_null($this->container['international_location_number2']) && (mb_strlen($this->container['international_location_number2']) > 5)) {
            $invalidProperties[] = "invalid value for 'international_location_number2', the character length must be smaller than or equal to 5.";
        }

        if (!is_null($this->container['is_natural_person']) && (mb_strlen($this->container['is_natural_person']) > 1)) {
            $invalidProperties[] = "invalid value for 'is_natural_person', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['gender_code_name']) && (mb_strlen($this->container['gender_code_name']) > 1)) {
            $invalidProperties[] = "invalid value for 'gender_code_name', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['language']) && (mb_strlen($this->container['language']) > 2)) {
            $invalidProperties[] = "invalid value for 'language', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['last_changed_by_user']) && (mb_strlen($this->container['last_changed_by_user']) > 12)) {
            $invalidProperties[] = "invalid value for 'last_changed_by_user', the character length must be smaller than or equal to 12.";
        }

        if (!is_null($this->container['last_name']) && (mb_strlen($this->container['last_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'last_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['legal_form']) && (mb_strlen($this->container['legal_form']) > 2)) {
            $invalidProperties[] = "invalid value for 'legal_form', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['organization_bp_name1']) && (mb_strlen($this->container['organization_bp_name1']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name1', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['organization_bp_name2']) && (mb_strlen($this->container['organization_bp_name2']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name2', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['organization_bp_name3']) && (mb_strlen($this->container['organization_bp_name3']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name3', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['organization_bp_name4']) && (mb_strlen($this->container['organization_bp_name4']) > 40)) {
            $invalidProperties[] = "invalid value for 'organization_bp_name4', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['search_term1']) && (mb_strlen($this->container['search_term1']) > 20)) {
            $invalidProperties[] = "invalid value for 'search_term1', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['search_term2']) && (mb_strlen($this->container['search_term2']) > 20)) {
            $invalidProperties[] = "invalid value for 'search_term2', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['additional_last_name']) && (mb_strlen($this->container['additional_last_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'additional_last_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['business_partner_birth_date_status']) && (mb_strlen($this->container['business_partner_birth_date_status']) > 1)) {
            $invalidProperties[] = "invalid value for 'business_partner_birth_date_status', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['business_partner_birthplace_name']) && (mb_strlen($this->container['business_partner_birthplace_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'business_partner_birthplace_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['business_partner_type']) && (mb_strlen($this->container['business_partner_type']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_type', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['e_tag']) && (mb_strlen($this->container['e_tag']) > 26)) {
            $invalidProperties[] = "invalid value for 'e_tag', the character length must be smaller than or equal to 26.";
        }

        if (!is_null($this->container['group_business_partner_name1']) && (mb_strlen($this->container['group_business_partner_name1']) > 40)) {
            $invalidProperties[] = "invalid value for 'group_business_partner_name1', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['group_business_partner_name2']) && (mb_strlen($this->container['group_business_partner_name2']) > 40)) {
            $invalidProperties[] = "invalid value for 'group_business_partner_name2', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['independent_address_id']) && (mb_strlen($this->container['independent_address_id']) > 10)) {
            $invalidProperties[] = "invalid value for 'independent_address_id', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['international_location_number3']) && (mb_strlen($this->container['international_location_number3']) > 1)) {
            $invalidProperties[] = "invalid value for 'international_location_number3', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['middle_name']) && (mb_strlen($this->container['middle_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'middle_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['name_country']) && (mb_strlen($this->container['name_country']) > 3)) {
            $invalidProperties[] = "invalid value for 'name_country', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['name_format']) && (mb_strlen($this->container['name_format']) > 2)) {
            $invalidProperties[] = "invalid value for 'name_format', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['person_full_name']) && (mb_strlen($this->container['person_full_name']) > 80)) {
            $invalidProperties[] = "invalid value for 'person_full_name', the character length must be smaller than or equal to 80.";
        }

        if (!is_null($this->container['person_number']) && (mb_strlen($this->container['person_number']) > 10)) {
            $invalidProperties[] = "invalid value for 'person_number', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['business_partner_idby_ext_system']) && (mb_strlen($this->container['business_partner_idby_ext_system']) > 20)) {
            $invalidProperties[] = "invalid value for 'business_partner_idby_ext_system', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['business_partner_print_format']) && (mb_strlen($this->container['business_partner_print_format']) > 1)) {
            $invalidProperties[] = "invalid value for 'business_partner_print_format', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['business_partner_occupation']) && (mb_strlen($this->container['business_partner_occupation']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_occupation', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['bus_part_marital_status']) && (mb_strlen($this->container['bus_part_marital_status']) > 1)) {
            $invalidProperties[] = "invalid value for 'bus_part_marital_status', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['bus_part_nationality']) && (mb_strlen($this->container['bus_part_nationality']) > 3)) {
            $invalidProperties[] = "invalid value for 'bus_part_nationality', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['business_partner_birth_name']) && (mb_strlen($this->container['business_partner_birth_name']) > 40)) {
            $invalidProperties[] = "invalid value for 'business_partner_birth_name', the character length must be smaller than or equal to 40.";
        }

        if (!is_null($this->container['business_partner_supplement_name']) && (mb_strlen($this->container['business_partner_supplement_name']) > 4)) {
            $invalidProperties[] = "invalid value for 'business_partner_supplement_name', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['natural_person_employer_name']) && (mb_strlen($this->container['natural_person_employer_name']) > 35)) {
            $invalidProperties[] = "invalid value for 'natural_person_employer_name', the character length must be smaller than or equal to 35.";
        }

        if (!is_null($this->container['last_name_prefix']) && (mb_strlen($this->container['last_name_prefix']) > 4)) {
            $invalidProperties[] = "invalid value for 'last_name_prefix', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['last_name_second_prefix']) && (mb_strlen($this->container['last_name_second_prefix']) > 4)) {
            $invalidProperties[] = "invalid value for 'last_name_second_prefix', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['initials']) && (mb_strlen($this->container['initials']) > 10)) {
            $invalidProperties[] = "invalid value for 'initials', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['trading_partner']) && (mb_strlen($this->container['trading_partner']) > 6)) {
            $invalidProperties[] = "invalid value for 'trading_partner', the character length must be smaller than or equal to 6.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets business_partner
     *
     * @return string|null
     */
    public function getBusinessPartner()
    {
        return $this->container['business_partner'];
    }

    /**
     * Sets business_partner
     *
     * @param string|null $business_partner Business Partner Number
     *
     * @return self
     */
    public function setBusinessPartner($business_partner)
    {
        if (is_null($business_partner)) {
            throw new \InvalidArgumentException('non-nullable business_partner cannot be null');
        }
        if ((mb_strlen($business_partner) > 10)) {
            throw new \InvalidArgumentException('invalid length for $business_partner when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['business_partner'] = $business_partner;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return string|null
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param string|null $customer Customer Number
     *
     * @return self
     */
    public function setCustomer($customer)
    {
        if (is_null($customer)) {
            array_push($this->openAPINullablesSetToNull, 'customer');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('customer', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($customer) && (mb_strlen($customer) > 10)) {
            throw new \InvalidArgumentException('invalid length for $customer when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string|null
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string|null $supplier Account Number of Supplier
     *
     * @return self
     */
    public function setSupplier($supplier)
    {
        if (is_null($supplier)) {
            array_push($this->openAPINullablesSetToNull, 'supplier');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('supplier', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($supplier) && (mb_strlen($supplier) > 10)) {
            throw new \InvalidArgumentException('invalid length for $supplier when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets academic_title
     *
     * @return string|null
     */
    public function getAcademicTitle()
    {
        return $this->container['academic_title'];
    }

    /**
     * Sets academic_title
     *
     * @param string|null $academic_title Academic Title: Key
     *
     * @return self
     */
    public function setAcademicTitle($academic_title)
    {
        if (is_null($academic_title)) {
            array_push($this->openAPINullablesSetToNull, 'academic_title');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('academic_title', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($academic_title) && (mb_strlen($academic_title) > 4)) {
            throw new \InvalidArgumentException('invalid length for $academic_title when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['academic_title'] = $academic_title;

        return $this;
    }

    /**
     * Gets authorization_group
     *
     * @return string|null
     */
    public function getAuthorizationGroup()
    {
        return $this->container['authorization_group'];
    }

    /**
     * Sets authorization_group
     *
     * @param string|null $authorization_group authorization_group
     *
     * @return self
     */
    public function setAuthorizationGroup($authorization_group)
    {
        if (is_null($authorization_group)) {
            array_push($this->openAPINullablesSetToNull, 'authorization_group');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('authorization_group', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($authorization_group) && (mb_strlen($authorization_group) > 4)) {
            throw new \InvalidArgumentException('invalid length for $authorization_group when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['authorization_group'] = $authorization_group;

        return $this;
    }

    /**
     * Gets business_partner_category
     *
     * @return string|null
     */
    public function getBusinessPartnerCategory()
    {
        return $this->container['business_partner_category'];
    }

    /**
     * Sets business_partner_category
     *
     * @param string|null $business_partner_category Business Partner Category
     *
     * @return self
     */
    public function setBusinessPartnerCategory($business_partner_category)
    {
        if (is_null($business_partner_category)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_category');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_category', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_category) && (mb_strlen($business_partner_category) > 1)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_category when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['business_partner_category'] = $business_partner_category;

        return $this;
    }

    /**
     * Gets business_partner_full_name
     *
     * @return string|null
     */
    public function getBusinessPartnerFullName()
    {
        return $this->container['business_partner_full_name'];
    }

    /**
     * Sets business_partner_full_name
     *
     * @param string|null $business_partner_full_name business_partner_full_name
     *
     * @return self
     */
    public function setBusinessPartnerFullName($business_partner_full_name)
    {
        if (is_null($business_partner_full_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_full_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_full_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_full_name) && (mb_strlen($business_partner_full_name) > 81)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_full_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 81.');
        }

        $this->container['business_partner_full_name'] = $business_partner_full_name;

        return $this;
    }

    /**
     * Gets business_partner_grouping
     *
     * @return string|null
     */
    public function getBusinessPartnerGrouping()
    {
        return $this->container['business_partner_grouping'];
    }

    /**
     * Sets business_partner_grouping
     *
     * @param string|null $business_partner_grouping Business Partner Grouping
     *
     * @return self
     */
    public function setBusinessPartnerGrouping($business_partner_grouping)
    {
        if (is_null($business_partner_grouping)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_grouping');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_grouping', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_grouping) && (mb_strlen($business_partner_grouping) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_grouping when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_grouping'] = $business_partner_grouping;

        return $this;
    }

    /**
     * Gets business_partner_name
     *
     * @return string|null
     */
    public function getBusinessPartnerName()
    {
        return $this->container['business_partner_name'];
    }

    /**
     * Sets business_partner_name
     *
     * @param string|null $business_partner_name business_partner_name
     *
     * @return self
     */
    public function setBusinessPartnerName($business_partner_name)
    {
        if (is_null($business_partner_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_name) && (mb_strlen($business_partner_name) > 81)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 81.');
        }

        $this->container['business_partner_name'] = $business_partner_name;

        return $this;
    }

    /**
     * Gets business_partner_uuid
     *
     * @return string|null
     */
    public function getBusinessPartnerUuid()
    {
        return $this->container['business_partner_uuid'];
    }

    /**
     * Sets business_partner_uuid
     *
     * @param string|null $business_partner_uuid Business Partner GUID
     *
     * @return self
     */
    public function setBusinessPartnerUuid($business_partner_uuid)
    {
        if (is_null($business_partner_uuid)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_uuid');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_uuid', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_partner_uuid'] = $business_partner_uuid;

        return $this;
    }

    /**
     * Gets correspondence_language
     *
     * @return string|null
     */
    public function getCorrespondenceLanguage()
    {
        return $this->container['correspondence_language'];
    }

    /**
     * Sets correspondence_language
     *
     * @param string|null $correspondence_language Business Partner: Correspondence Language
     *
     * @return self
     */
    public function setCorrespondenceLanguage($correspondence_language)
    {
        if (is_null($correspondence_language)) {
            array_push($this->openAPINullablesSetToNull, 'correspondence_language');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('correspondence_language', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($correspondence_language) && (mb_strlen($correspondence_language) > 2)) {
            throw new \InvalidArgumentException('invalid length for $correspondence_language when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 2.');
        }

        $this->container['correspondence_language'] = $correspondence_language;

        return $this;
    }

    /**
     * Gets created_by_user
     *
     * @return string|null
     */
    public function getCreatedByUser()
    {
        return $this->container['created_by_user'];
    }

    /**
     * Sets created_by_user
     *
     * @param string|null $created_by_user User who created the object
     *
     * @return self
     */
    public function setCreatedByUser($created_by_user)
    {
        if (is_null($created_by_user)) {
            array_push($this->openAPINullablesSetToNull, 'created_by_user');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('created_by_user', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($created_by_user) && (mb_strlen($created_by_user) > 12)) {
            throw new \InvalidArgumentException('invalid length for $created_by_user when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 12.');
        }

        $this->container['created_by_user'] = $created_by_user;

        return $this;
    }

    /**
     * Gets creation_date
     *
     * @return string|null
     */
    public function getCreationDate()
    {
        return $this->container['creation_date'];
    }

    /**
     * Sets creation_date
     *
     * @param string|null $creation_date Date on which the object was created
     *
     * @return self
     */
    public function setCreationDate($creation_date)
    {
        if (is_null($creation_date)) {
            array_push($this->openAPINullablesSetToNull, 'creation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('creation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['creation_date'] = $creation_date;

        return $this;
    }

    /**
     * Gets creation_time
     *
     * @return string|null
     */
    public function getCreationTime()
    {
        return $this->container['creation_time'];
    }

    /**
     * Sets creation_time
     *
     * @param string|null $creation_time Time at which the object was created
     *
     * @return self
     */
    public function setCreationTime($creation_time)
    {
        if (is_null($creation_time)) {
            array_push($this->openAPINullablesSetToNull, 'creation_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('creation_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['creation_time'] = $creation_time;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name First Name of Business Partner (Person)
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        if (is_null($first_name)) {
            array_push($this->openAPINullablesSetToNull, 'first_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('first_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($first_name) && (mb_strlen($first_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $first_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets form_of_address
     *
     * @return string|null
     */
    public function getFormOfAddress()
    {
        return $this->container['form_of_address'];
    }

    /**
     * Sets form_of_address
     *
     * @param string|null $form_of_address Form-of-Address Key
     *
     * @return self
     */
    public function setFormOfAddress($form_of_address)
    {
        if (is_null($form_of_address)) {
            array_push($this->openAPINullablesSetToNull, 'form_of_address');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('form_of_address', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($form_of_address) && (mb_strlen($form_of_address) > 4)) {
            throw new \InvalidArgumentException('invalid length for $form_of_address when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['form_of_address'] = $form_of_address;

        return $this;
    }

    /**
     * Gets industry
     *
     * @return string|null
     */
    public function getIndustry()
    {
        return $this->container['industry'];
    }

    /**
     * Sets industry
     *
     * @param string|null $industry industry
     *
     * @return self
     */
    public function setIndustry($industry)
    {
        if (is_null($industry)) {
            array_push($this->openAPINullablesSetToNull, 'industry');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('industry', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($industry) && (mb_strlen($industry) > 10)) {
            throw new \InvalidArgumentException('invalid length for $industry when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['industry'] = $industry;

        return $this;
    }

    /**
     * Gets international_location_number1
     *
     * @return string|null
     */
    public function getInternationalLocationNumber1()
    {
        return $this->container['international_location_number1'];
    }

    /**
     * Sets international_location_number1
     *
     * @param string|null $international_location_number1 International location number  (part 1)
     *
     * @return self
     */
    public function setInternationalLocationNumber1($international_location_number1)
    {
        if (is_null($international_location_number1)) {
            array_push($this->openAPINullablesSetToNull, 'international_location_number1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('international_location_number1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($international_location_number1) && (mb_strlen($international_location_number1) > 7)) {
            throw new \InvalidArgumentException('invalid length for $international_location_number1 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 7.');
        }

        $this->container['international_location_number1'] = $international_location_number1;

        return $this;
    }

    /**
     * Gets international_location_number2
     *
     * @return string|null
     */
    public function getInternationalLocationNumber2()
    {
        return $this->container['international_location_number2'];
    }

    /**
     * Sets international_location_number2
     *
     * @param string|null $international_location_number2 International location number (Part 2)
     *
     * @return self
     */
    public function setInternationalLocationNumber2($international_location_number2)
    {
        if (is_null($international_location_number2)) {
            array_push($this->openAPINullablesSetToNull, 'international_location_number2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('international_location_number2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($international_location_number2) && (mb_strlen($international_location_number2) > 5)) {
            throw new \InvalidArgumentException('invalid length for $international_location_number2 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 5.');
        }

        $this->container['international_location_number2'] = $international_location_number2;

        return $this;
    }

    /**
     * Gets is_female
     *
     * @return bool|null
     */
    public function getIsFemale()
    {
        return $this->container['is_female'];
    }

    /**
     * Sets is_female
     *
     * @param bool|null $is_female Selection: Business partner is female
     *
     * @return self
     */
    public function setIsFemale($is_female)
    {
        if (is_null($is_female)) {
            array_push($this->openAPINullablesSetToNull, 'is_female');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_female', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_female'] = $is_female;

        return $this;
    }

    /**
     * Gets is_male
     *
     * @return bool|null
     */
    public function getIsMale()
    {
        return $this->container['is_male'];
    }

    /**
     * Sets is_male
     *
     * @param bool|null $is_male Selection: Business partner is male
     *
     * @return self
     */
    public function setIsMale($is_male)
    {
        if (is_null($is_male)) {
            array_push($this->openAPINullablesSetToNull, 'is_male');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_male', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_male'] = $is_male;

        return $this;
    }

    /**
     * Gets is_natural_person
     *
     * @return string|null
     */
    public function getIsNaturalPerson()
    {
        return $this->container['is_natural_person'];
    }

    /**
     * Sets is_natural_person
     *
     * @param string|null $is_natural_person Business Partner Is a Natural Person Under the Tax Laws
     *
     * @return self
     */
    public function setIsNaturalPerson($is_natural_person)
    {
        if (is_null($is_natural_person)) {
            array_push($this->openAPINullablesSetToNull, 'is_natural_person');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_natural_person', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($is_natural_person) && (mb_strlen($is_natural_person) > 1)) {
            throw new \InvalidArgumentException('invalid length for $is_natural_person when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['is_natural_person'] = $is_natural_person;

        return $this;
    }

    /**
     * Gets is_sex_unknown
     *
     * @return bool|null
     */
    public function getIsSexUnknown()
    {
        return $this->container['is_sex_unknown'];
    }

    /**
     * Sets is_sex_unknown
     *
     * @param bool|null $is_sex_unknown Selection: Sex of business partner is not known
     *
     * @return self
     */
    public function setIsSexUnknown($is_sex_unknown)
    {
        if (is_null($is_sex_unknown)) {
            array_push($this->openAPINullablesSetToNull, 'is_sex_unknown');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_sex_unknown', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_sex_unknown'] = $is_sex_unknown;

        return $this;
    }

    /**
     * Gets gender_code_name
     *
     * @return string|null
     */
    public function getGenderCodeName()
    {
        return $this->container['gender_code_name'];
    }

    /**
     * Sets gender_code_name
     *
     * @param string|null $gender_code_name Gender of Business Partner (Person)
     *
     * @return self
     */
    public function setGenderCodeName($gender_code_name)
    {
        if (is_null($gender_code_name)) {
            array_push($this->openAPINullablesSetToNull, 'gender_code_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('gender_code_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($gender_code_name) && (mb_strlen($gender_code_name) > 1)) {
            throw new \InvalidArgumentException('invalid length for $gender_code_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['gender_code_name'] = $gender_code_name;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string|null $language Business partner: Language
     *
     * @return self
     */
    public function setLanguage($language)
    {
        if (is_null($language)) {
            array_push($this->openAPINullablesSetToNull, 'language');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('language', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($language) && (mb_strlen($language) > 2)) {
            throw new \InvalidArgumentException('invalid length for $language when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 2.');
        }

        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets last_change_date
     *
     * @return string|null
     */
    public function getLastChangeDate()
    {
        return $this->container['last_change_date'];
    }

    /**
     * Sets last_change_date
     *
     * @param string|null $last_change_date Date when object was last changed
     *
     * @return self
     */
    public function setLastChangeDate($last_change_date)
    {
        if (is_null($last_change_date)) {
            array_push($this->openAPINullablesSetToNull, 'last_change_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_change_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['last_change_date'] = $last_change_date;

        return $this;
    }

    /**
     * Gets last_change_time
     *
     * @return string|null
     */
    public function getLastChangeTime()
    {
        return $this->container['last_change_time'];
    }

    /**
     * Sets last_change_time
     *
     * @param string|null $last_change_time Time at which object was last changed
     *
     * @return self
     */
    public function setLastChangeTime($last_change_time)
    {
        if (is_null($last_change_time)) {
            array_push($this->openAPINullablesSetToNull, 'last_change_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_change_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['last_change_time'] = $last_change_time;

        return $this;
    }

    /**
     * Gets last_changed_by_user
     *
     * @return string|null
     */
    public function getLastChangedByUser()
    {
        return $this->container['last_changed_by_user'];
    }

    /**
     * Sets last_changed_by_user
     *
     * @param string|null $last_changed_by_user Last user to change object
     *
     * @return self
     */
    public function setLastChangedByUser($last_changed_by_user)
    {
        if (is_null($last_changed_by_user)) {
            array_push($this->openAPINullablesSetToNull, 'last_changed_by_user');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_changed_by_user', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_changed_by_user) && (mb_strlen($last_changed_by_user) > 12)) {
            throw new \InvalidArgumentException('invalid length for $last_changed_by_user when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 12.');
        }

        $this->container['last_changed_by_user'] = $last_changed_by_user;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name Last Name of Business Partner (Person)
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        if (is_null($last_name)) {
            array_push($this->openAPINullablesSetToNull, 'last_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_name) && (mb_strlen($last_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $last_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets legal_form
     *
     * @return string|null
     */
    public function getLegalForm()
    {
        return $this->container['legal_form'];
    }

    /**
     * Sets legal_form
     *
     * @param string|null $legal_form BP: Legal form of organization
     *
     * @return self
     */
    public function setLegalForm($legal_form)
    {
        if (is_null($legal_form)) {
            array_push($this->openAPINullablesSetToNull, 'legal_form');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('legal_form', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($legal_form) && (mb_strlen($legal_form) > 2)) {
            throw new \InvalidArgumentException('invalid length for $legal_form when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 2.');
        }

        $this->container['legal_form'] = $legal_form;

        return $this;
    }

    /**
     * Gets organization_bp_name1
     *
     * @return string|null
     */
    public function getOrganizationBpName1()
    {
        return $this->container['organization_bp_name1'];
    }

    /**
     * Sets organization_bp_name1
     *
     * @param string|null $organization_bp_name1 Name 1 of organization
     *
     * @return self
     */
    public function setOrganizationBpName1($organization_bp_name1)
    {
        if (is_null($organization_bp_name1)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name1) && (mb_strlen($organization_bp_name1) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name1 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name1'] = $organization_bp_name1;

        return $this;
    }

    /**
     * Gets organization_bp_name2
     *
     * @return string|null
     */
    public function getOrganizationBpName2()
    {
        return $this->container['organization_bp_name2'];
    }

    /**
     * Sets organization_bp_name2
     *
     * @param string|null $organization_bp_name2 Name 2 of organization
     *
     * @return self
     */
    public function setOrganizationBpName2($organization_bp_name2)
    {
        if (is_null($organization_bp_name2)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name2) && (mb_strlen($organization_bp_name2) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name2 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name2'] = $organization_bp_name2;

        return $this;
    }

    /**
     * Gets organization_bp_name3
     *
     * @return string|null
     */
    public function getOrganizationBpName3()
    {
        return $this->container['organization_bp_name3'];
    }

    /**
     * Sets organization_bp_name3
     *
     * @param string|null $organization_bp_name3 Name 3 of organization
     *
     * @return self
     */
    public function setOrganizationBpName3($organization_bp_name3)
    {
        if (is_null($organization_bp_name3)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name3');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name3', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name3) && (mb_strlen($organization_bp_name3) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name3 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name3'] = $organization_bp_name3;

        return $this;
    }

    /**
     * Gets organization_bp_name4
     *
     * @return string|null
     */
    public function getOrganizationBpName4()
    {
        return $this->container['organization_bp_name4'];
    }

    /**
     * Sets organization_bp_name4
     *
     * @param string|null $organization_bp_name4 Name 4 of organization
     *
     * @return self
     */
    public function setOrganizationBpName4($organization_bp_name4)
    {
        if (is_null($organization_bp_name4)) {
            array_push($this->openAPINullablesSetToNull, 'organization_bp_name4');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_bp_name4', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($organization_bp_name4) && (mb_strlen($organization_bp_name4) > 40)) {
            throw new \InvalidArgumentException('invalid length for $organization_bp_name4 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['organization_bp_name4'] = $organization_bp_name4;

        return $this;
    }

    /**
     * Gets organization_foundation_date
     *
     * @return string|null
     */
    public function getOrganizationFoundationDate()
    {
        return $this->container['organization_foundation_date'];
    }

    /**
     * Sets organization_foundation_date
     *
     * @param string|null $organization_foundation_date Date organization founded
     *
     * @return self
     */
    public function setOrganizationFoundationDate($organization_foundation_date)
    {
        if (is_null($organization_foundation_date)) {
            array_push($this->openAPINullablesSetToNull, 'organization_foundation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_foundation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['organization_foundation_date'] = $organization_foundation_date;

        return $this;
    }

    /**
     * Gets organization_liquidation_date
     *
     * @return string|null
     */
    public function getOrganizationLiquidationDate()
    {
        return $this->container['organization_liquidation_date'];
    }

    /**
     * Sets organization_liquidation_date
     *
     * @param string|null $organization_liquidation_date Liquidation date of organization
     *
     * @return self
     */
    public function setOrganizationLiquidationDate($organization_liquidation_date)
    {
        if (is_null($organization_liquidation_date)) {
            array_push($this->openAPINullablesSetToNull, 'organization_liquidation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('organization_liquidation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['organization_liquidation_date'] = $organization_liquidation_date;

        return $this;
    }

    /**
     * Gets search_term1
     *
     * @return string|null
     */
    public function getSearchTerm1()
    {
        return $this->container['search_term1'];
    }

    /**
     * Sets search_term1
     *
     * @param string|null $search_term1 Search Term 1 for Business Partner
     *
     * @return self
     */
    public function setSearchTerm1($search_term1)
    {
        if (is_null($search_term1)) {
            array_push($this->openAPINullablesSetToNull, 'search_term1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('search_term1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($search_term1) && (mb_strlen($search_term1) > 20)) {
            throw new \InvalidArgumentException('invalid length for $search_term1 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 20.');
        }

        $this->container['search_term1'] = $search_term1;

        return $this;
    }

    /**
     * Gets search_term2
     *
     * @return string|null
     */
    public function getSearchTerm2()
    {
        return $this->container['search_term2'];
    }

    /**
     * Sets search_term2
     *
     * @param string|null $search_term2 Search Term 2 for Business Partner
     *
     * @return self
     */
    public function setSearchTerm2($search_term2)
    {
        if (is_null($search_term2)) {
            array_push($this->openAPINullablesSetToNull, 'search_term2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('search_term2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($search_term2) && (mb_strlen($search_term2) > 20)) {
            throw new \InvalidArgumentException('invalid length for $search_term2 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 20.');
        }

        $this->container['search_term2'] = $search_term2;

        return $this;
    }

    /**
     * Gets additional_last_name
     *
     * @return string|null
     */
    public function getAdditionalLastName()
    {
        return $this->container['additional_last_name'];
    }

    /**
     * Sets additional_last_name
     *
     * @param string|null $additional_last_name Other Last Name of a Person
     *
     * @return self
     */
    public function setAdditionalLastName($additional_last_name)
    {
        if (is_null($additional_last_name)) {
            array_push($this->openAPINullablesSetToNull, 'additional_last_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('additional_last_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($additional_last_name) && (mb_strlen($additional_last_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $additional_last_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['additional_last_name'] = $additional_last_name;

        return $this;
    }

    /**
     * Gets birth_date
     *
     * @return string|null
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     *
     * @param string|null $birth_date Date of Birth of Business Partner
     *
     * @return self
     */
    public function setBirthDate($birth_date)
    {
        if (is_null($birth_date)) {
            array_push($this->openAPINullablesSetToNull, 'birth_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('birth_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets business_partner_birth_date_status
     *
     * @return string|null
     */
    public function getBusinessPartnerBirthDateStatus()
    {
        return $this->container['business_partner_birth_date_status'];
    }

    /**
     * Sets business_partner_birth_date_status
     *
     * @param string|null $business_partner_birth_date_status Date of Birth: Status
     *
     * @return self
     */
    public function setBusinessPartnerBirthDateStatus($business_partner_birth_date_status)
    {
        if (is_null($business_partner_birth_date_status)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_birth_date_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_birth_date_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_birth_date_status) && (mb_strlen($business_partner_birth_date_status) > 1)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_birth_date_status when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['business_partner_birth_date_status'] = $business_partner_birth_date_status;

        return $this;
    }

    /**
     * Gets business_partner_birthplace_name
     *
     * @return string|null
     */
    public function getBusinessPartnerBirthplaceName()
    {
        return $this->container['business_partner_birthplace_name'];
    }

    /**
     * Sets business_partner_birthplace_name
     *
     * @param string|null $business_partner_birthplace_name Birthplace of business partner
     *
     * @return self
     */
    public function setBusinessPartnerBirthplaceName($business_partner_birthplace_name)
    {
        if (is_null($business_partner_birthplace_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_birthplace_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_birthplace_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_birthplace_name) && (mb_strlen($business_partner_birthplace_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_birthplace_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['business_partner_birthplace_name'] = $business_partner_birthplace_name;

        return $this;
    }

    /**
     * Gets business_partner_death_date
     *
     * @return string|null
     */
    public function getBusinessPartnerDeathDate()
    {
        return $this->container['business_partner_death_date'];
    }

    /**
     * Sets business_partner_death_date
     *
     * @param string|null $business_partner_death_date Date of death of business partner
     *
     * @return self
     */
    public function setBusinessPartnerDeathDate($business_partner_death_date)
    {
        if (is_null($business_partner_death_date)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_death_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_death_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_partner_death_date'] = $business_partner_death_date;

        return $this;
    }

    /**
     * Gets business_partner_is_blocked
     *
     * @return bool|null
     */
    public function getBusinessPartnerIsBlocked()
    {
        return $this->container['business_partner_is_blocked'];
    }

    /**
     * Sets business_partner_is_blocked
     *
     * @param bool|null $business_partner_is_blocked Central Block for Business Partner
     *
     * @return self
     */
    public function setBusinessPartnerIsBlocked($business_partner_is_blocked)
    {
        if (is_null($business_partner_is_blocked)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_is_blocked');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_is_blocked', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_partner_is_blocked'] = $business_partner_is_blocked;

        return $this;
    }

    /**
     * Gets business_partner_type
     *
     * @return string|null
     */
    public function getBusinessPartnerType()
    {
        return $this->container['business_partner_type'];
    }

    /**
     * Sets business_partner_type
     *
     * @param string|null $business_partner_type Business Partner Type
     *
     * @return self
     */
    public function setBusinessPartnerType($business_partner_type)
    {
        if (is_null($business_partner_type)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_type) && (mb_strlen($business_partner_type) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_type when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_type'] = $business_partner_type;

        return $this;
    }

    /**
     * Gets e_tag
     *
     * @return string|null
     */
    public function getETag()
    {
        return $this->container['e_tag'];
    }

    /**
     * Sets e_tag
     *
     * @param string|null $e_tag e_tag
     *
     * @return self
     */
    public function setETag($e_tag)
    {
        if (is_null($e_tag)) {
            array_push($this->openAPINullablesSetToNull, 'e_tag');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('e_tag', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($e_tag) && (mb_strlen($e_tag) > 26)) {
            throw new \InvalidArgumentException('invalid length for $e_tag when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 26.');
        }

        $this->container['e_tag'] = $e_tag;

        return $this;
    }

    /**
     * Gets group_business_partner_name1
     *
     * @return string|null
     */
    public function getGroupBusinessPartnerName1()
    {
        return $this->container['group_business_partner_name1'];
    }

    /**
     * Sets group_business_partner_name1
     *
     * @param string|null $group_business_partner_name1 Name 1 (group)
     *
     * @return self
     */
    public function setGroupBusinessPartnerName1($group_business_partner_name1)
    {
        if (is_null($group_business_partner_name1)) {
            array_push($this->openAPINullablesSetToNull, 'group_business_partner_name1');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('group_business_partner_name1', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($group_business_partner_name1) && (mb_strlen($group_business_partner_name1) > 40)) {
            throw new \InvalidArgumentException('invalid length for $group_business_partner_name1 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['group_business_partner_name1'] = $group_business_partner_name1;

        return $this;
    }

    /**
     * Gets group_business_partner_name2
     *
     * @return string|null
     */
    public function getGroupBusinessPartnerName2()
    {
        return $this->container['group_business_partner_name2'];
    }

    /**
     * Sets group_business_partner_name2
     *
     * @param string|null $group_business_partner_name2 Name 2 (group)
     *
     * @return self
     */
    public function setGroupBusinessPartnerName2($group_business_partner_name2)
    {
        if (is_null($group_business_partner_name2)) {
            array_push($this->openAPINullablesSetToNull, 'group_business_partner_name2');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('group_business_partner_name2', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($group_business_partner_name2) && (mb_strlen($group_business_partner_name2) > 40)) {
            throw new \InvalidArgumentException('invalid length for $group_business_partner_name2 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['group_business_partner_name2'] = $group_business_partner_name2;

        return $this;
    }

    /**
     * Gets independent_address_id
     *
     * @return string|null
     */
    public function getIndependentAddressId()
    {
        return $this->container['independent_address_id'];
    }

    /**
     * Sets independent_address_id
     *
     * @param string|null $independent_address_id independent_address_id
     *
     * @return self
     */
    public function setIndependentAddressId($independent_address_id)
    {
        if (is_null($independent_address_id)) {
            array_push($this->openAPINullablesSetToNull, 'independent_address_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('independent_address_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($independent_address_id) && (mb_strlen($independent_address_id) > 10)) {
            throw new \InvalidArgumentException('invalid length for $independent_address_id when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['independent_address_id'] = $independent_address_id;

        return $this;
    }

    /**
     * Gets international_location_number3
     *
     * @return string|null
     */
    public function getInternationalLocationNumber3()
    {
        return $this->container['international_location_number3'];
    }

    /**
     * Sets international_location_number3
     *
     * @param string|null $international_location_number3 Check digit for the international location number
     *
     * @return self
     */
    public function setInternationalLocationNumber3($international_location_number3)
    {
        if (is_null($international_location_number3)) {
            array_push($this->openAPINullablesSetToNull, 'international_location_number3');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('international_location_number3', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($international_location_number3) && (mb_strlen($international_location_number3) > 1)) {
            throw new \InvalidArgumentException('invalid length for $international_location_number3 when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['international_location_number3'] = $international_location_number3;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string|null
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string|null $middle_name Middle Name or Second Forename of a Person
     *
     * @return self
     */
    public function setMiddleName($middle_name)
    {
        if (is_null($middle_name)) {
            array_push($this->openAPINullablesSetToNull, 'middle_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('middle_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($middle_name) && (mb_strlen($middle_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $middle_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets name_country
     *
     * @return string|null
     */
    public function getNameCountry()
    {
        return $this->container['name_country'];
    }

    /**
     * Sets name_country
     *
     * @param string|null $name_country Country/Region for Name Format Rule
     *
     * @return self
     */
    public function setNameCountry($name_country)
    {
        if (is_null($name_country)) {
            array_push($this->openAPINullablesSetToNull, 'name_country');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('name_country', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($name_country) && (mb_strlen($name_country) > 3)) {
            throw new \InvalidArgumentException('invalid length for $name_country when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 3.');
        }

        $this->container['name_country'] = $name_country;

        return $this;
    }

    /**
     * Gets name_format
     *
     * @return string|null
     */
    public function getNameFormat()
    {
        return $this->container['name_format'];
    }

    /**
     * Sets name_format
     *
     * @param string|null $name_format Name format
     *
     * @return self
     */
    public function setNameFormat($name_format)
    {
        if (is_null($name_format)) {
            array_push($this->openAPINullablesSetToNull, 'name_format');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('name_format', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($name_format) && (mb_strlen($name_format) > 2)) {
            throw new \InvalidArgumentException('invalid length for $name_format when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 2.');
        }

        $this->container['name_format'] = $name_format;

        return $this;
    }

    /**
     * Gets person_full_name
     *
     * @return string|null
     */
    public function getPersonFullName()
    {
        return $this->container['person_full_name'];
    }

    /**
     * Sets person_full_name
     *
     * @param string|null $person_full_name person_full_name
     *
     * @return self
     */
    public function setPersonFullName($person_full_name)
    {
        if (is_null($person_full_name)) {
            array_push($this->openAPINullablesSetToNull, 'person_full_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('person_full_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($person_full_name) && (mb_strlen($person_full_name) > 80)) {
            throw new \InvalidArgumentException('invalid length for $person_full_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 80.');
        }

        $this->container['person_full_name'] = $person_full_name;

        return $this;
    }

    /**
     * Gets person_number
     *
     * @return string|null
     */
    public function getPersonNumber()
    {
        return $this->container['person_number'];
    }

    /**
     * Sets person_number
     *
     * @param string|null $person_number person_number
     *
     * @return self
     */
    public function setPersonNumber($person_number)
    {
        if (is_null($person_number)) {
            array_push($this->openAPINullablesSetToNull, 'person_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('person_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($person_number) && (mb_strlen($person_number) > 10)) {
            throw new \InvalidArgumentException('invalid length for $person_number when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['person_number'] = $person_number;

        return $this;
    }

    /**
     * Gets is_marked_for_archiving
     *
     * @return bool|null
     */
    public function getIsMarkedForArchiving()
    {
        return $this->container['is_marked_for_archiving'];
    }

    /**
     * Sets is_marked_for_archiving
     *
     * @param bool|null $is_marked_for_archiving Central Archiving Flag
     *
     * @return self
     */
    public function setIsMarkedForArchiving($is_marked_for_archiving)
    {
        if (is_null($is_marked_for_archiving)) {
            array_push($this->openAPINullablesSetToNull, 'is_marked_for_archiving');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_marked_for_archiving', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_marked_for_archiving'] = $is_marked_for_archiving;

        return $this;
    }

    /**
     * Gets business_partner_idby_ext_system
     *
     * @return string|null
     */
    public function getBusinessPartnerIdbyExtSystem()
    {
        return $this->container['business_partner_idby_ext_system'];
    }

    /**
     * Sets business_partner_idby_ext_system
     *
     * @param string|null $business_partner_idby_ext_system Business Partner Number in External System
     *
     * @return self
     */
    public function setBusinessPartnerIdbyExtSystem($business_partner_idby_ext_system)
    {
        if (is_null($business_partner_idby_ext_system)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_idby_ext_system');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_idby_ext_system', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_idby_ext_system) && (mb_strlen($business_partner_idby_ext_system) > 20)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_idby_ext_system when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 20.');
        }

        $this->container['business_partner_idby_ext_system'] = $business_partner_idby_ext_system;

        return $this;
    }

    /**
     * Gets business_partner_print_format
     *
     * @return string|null
     */
    public function getBusinessPartnerPrintFormat()
    {
        return $this->container['business_partner_print_format'];
    }

    /**
     * Sets business_partner_print_format
     *
     * @param string|null $business_partner_print_format Business Partner Print Format
     *
     * @return self
     */
    public function setBusinessPartnerPrintFormat($business_partner_print_format)
    {
        if (is_null($business_partner_print_format)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_print_format');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_print_format', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_print_format) && (mb_strlen($business_partner_print_format) > 1)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_print_format when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['business_partner_print_format'] = $business_partner_print_format;

        return $this;
    }

    /**
     * Gets business_partner_occupation
     *
     * @return string|null
     */
    public function getBusinessPartnerOccupation()
    {
        return $this->container['business_partner_occupation'];
    }

    /**
     * Sets business_partner_occupation
     *
     * @param string|null $business_partner_occupation Occupation/group
     *
     * @return self
     */
    public function setBusinessPartnerOccupation($business_partner_occupation)
    {
        if (is_null($business_partner_occupation)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_occupation');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_occupation', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_occupation) && (mb_strlen($business_partner_occupation) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_occupation when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_occupation'] = $business_partner_occupation;

        return $this;
    }

    /**
     * Gets bus_part_marital_status
     *
     * @return string|null
     */
    public function getBusPartMaritalStatus()
    {
        return $this->container['bus_part_marital_status'];
    }

    /**
     * Sets bus_part_marital_status
     *
     * @param string|null $bus_part_marital_status Marital Status of Business Partner
     *
     * @return self
     */
    public function setBusPartMaritalStatus($bus_part_marital_status)
    {
        if (is_null($bus_part_marital_status)) {
            array_push($this->openAPINullablesSetToNull, 'bus_part_marital_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bus_part_marital_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bus_part_marital_status) && (mb_strlen($bus_part_marital_status) > 1)) {
            throw new \InvalidArgumentException('invalid length for $bus_part_marital_status when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 1.');
        }

        $this->container['bus_part_marital_status'] = $bus_part_marital_status;

        return $this;
    }

    /**
     * Gets bus_part_nationality
     *
     * @return string|null
     */
    public function getBusPartNationality()
    {
        return $this->container['bus_part_nationality'];
    }

    /**
     * Sets bus_part_nationality
     *
     * @param string|null $bus_part_nationality bus_part_nationality
     *
     * @return self
     */
    public function setBusPartNationality($bus_part_nationality)
    {
        if (is_null($bus_part_nationality)) {
            array_push($this->openAPINullablesSetToNull, 'bus_part_nationality');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bus_part_nationality', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bus_part_nationality) && (mb_strlen($bus_part_nationality) > 3)) {
            throw new \InvalidArgumentException('invalid length for $bus_part_nationality when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 3.');
        }

        $this->container['bus_part_nationality'] = $bus_part_nationality;

        return $this;
    }

    /**
     * Gets business_partner_birth_name
     *
     * @return string|null
     */
    public function getBusinessPartnerBirthName()
    {
        return $this->container['business_partner_birth_name'];
    }

    /**
     * Sets business_partner_birth_name
     *
     * @param string|null $business_partner_birth_name Name at birth of business partner
     *
     * @return self
     */
    public function setBusinessPartnerBirthName($business_partner_birth_name)
    {
        if (is_null($business_partner_birth_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_birth_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_birth_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_birth_name) && (mb_strlen($business_partner_birth_name) > 40)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_birth_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 40.');
        }

        $this->container['business_partner_birth_name'] = $business_partner_birth_name;

        return $this;
    }

    /**
     * Gets business_partner_supplement_name
     *
     * @return string|null
     */
    public function getBusinessPartnerSupplementName()
    {
        return $this->container['business_partner_supplement_name'];
    }

    /**
     * Sets business_partner_supplement_name
     *
     * @param string|null $business_partner_supplement_name Name supplement, e.g. noble title (key)
     *
     * @return self
     */
    public function setBusinessPartnerSupplementName($business_partner_supplement_name)
    {
        if (is_null($business_partner_supplement_name)) {
            array_push($this->openAPINullablesSetToNull, 'business_partner_supplement_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_partner_supplement_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($business_partner_supplement_name) && (mb_strlen($business_partner_supplement_name) > 4)) {
            throw new \InvalidArgumentException('invalid length for $business_partner_supplement_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['business_partner_supplement_name'] = $business_partner_supplement_name;

        return $this;
    }

    /**
     * Gets natural_person_employer_name
     *
     * @return string|null
     */
    public function getNaturalPersonEmployerName()
    {
        return $this->container['natural_person_employer_name'];
    }

    /**
     * Sets natural_person_employer_name
     *
     * @param string|null $natural_person_employer_name Name of Employer of a Natural Person
     *
     * @return self
     */
    public function setNaturalPersonEmployerName($natural_person_employer_name)
    {
        if (is_null($natural_person_employer_name)) {
            array_push($this->openAPINullablesSetToNull, 'natural_person_employer_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('natural_person_employer_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($natural_person_employer_name) && (mb_strlen($natural_person_employer_name) > 35)) {
            throw new \InvalidArgumentException('invalid length for $natural_person_employer_name when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 35.');
        }

        $this->container['natural_person_employer_name'] = $natural_person_employer_name;

        return $this;
    }

    /**
     * Gets last_name_prefix
     *
     * @return string|null
     */
    public function getLastNamePrefix()
    {
        return $this->container['last_name_prefix'];
    }

    /**
     * Sets last_name_prefix
     *
     * @param string|null $last_name_prefix Name Prefix (Key)
     *
     * @return self
     */
    public function setLastNamePrefix($last_name_prefix)
    {
        if (is_null($last_name_prefix)) {
            array_push($this->openAPINullablesSetToNull, 'last_name_prefix');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_name_prefix', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_name_prefix) && (mb_strlen($last_name_prefix) > 4)) {
            throw new \InvalidArgumentException('invalid length for $last_name_prefix when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['last_name_prefix'] = $last_name_prefix;

        return $this;
    }

    /**
     * Gets last_name_second_prefix
     *
     * @return string|null
     */
    public function getLastNameSecondPrefix()
    {
        return $this->container['last_name_second_prefix'];
    }

    /**
     * Sets last_name_second_prefix
     *
     * @param string|null $last_name_second_prefix 2nd name prefix (key)
     *
     * @return self
     */
    public function setLastNameSecondPrefix($last_name_second_prefix)
    {
        if (is_null($last_name_second_prefix)) {
            array_push($this->openAPINullablesSetToNull, 'last_name_second_prefix');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('last_name_second_prefix', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($last_name_second_prefix) && (mb_strlen($last_name_second_prefix) > 4)) {
            throw new \InvalidArgumentException('invalid length for $last_name_second_prefix when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 4.');
        }

        $this->container['last_name_second_prefix'] = $last_name_second_prefix;

        return $this;
    }

    /**
     * Gets initials
     *
     * @return string|null
     */
    public function getInitials()
    {
        return $this->container['initials'];
    }

    /**
     * Sets initials
     *
     * @param string|null $initials \"Middle Initial\" or personal initials
     *
     * @return self
     */
    public function setInitials($initials)
    {
        if (is_null($initials)) {
            array_push($this->openAPINullablesSetToNull, 'initials');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('initials', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($initials) && (mb_strlen($initials) > 10)) {
            throw new \InvalidArgumentException('invalid length for $initials when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 10.');
        }

        $this->container['initials'] = $initials;

        return $this;
    }

    /**
     * Gets bp_data_controller_is_not_required
     *
     * @return bool|null
     */
    public function getBpDataControllerIsNotRequired()
    {
        return $this->container['bp_data_controller_is_not_required'];
    }

    /**
     * Sets bp_data_controller_is_not_required
     *
     * @param bool|null $bp_data_controller_is_not_required BP: Data Controller Not Required
     *
     * @return self
     */
    public function setBpDataControllerIsNotRequired($bp_data_controller_is_not_required)
    {
        if (is_null($bp_data_controller_is_not_required)) {
            array_push($this->openAPINullablesSetToNull, 'bp_data_controller_is_not_required');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_data_controller_is_not_required', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['bp_data_controller_is_not_required'] = $bp_data_controller_is_not_required;

        return $this;
    }

    /**
     * Gets trading_partner
     *
     * @return string|null
     */
    public function getTradingPartner()
    {
        return $this->container['trading_partner'];
    }

    /**
     * Sets trading_partner
     *
     * @param string|null $trading_partner Company ID of Trading Partner
     *
     * @return self
     */
    public function setTradingPartner($trading_partner)
    {
        if (is_null($trading_partner)) {
            array_push($this->openAPINullablesSetToNull, 'trading_partner');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('trading_partner', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($trading_partner) && (mb_strlen($trading_partner) > 6)) {
            throw new \InvalidArgumentException('invalid length for $trading_partner when calling APIBUSINESSPARTNERABusinessPartnerType., must be smaller than or equal to 6.');
        }

        $this->container['trading_partner'] = $trading_partner;

        return $this;
    }

    /**
     * Gets to_address_independent_email
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentEmail|null
     */
    public function getToAddressIndependentEmail()
    {
        return $this->container['to_address_independent_email'];
    }

    /**
     * Sets to_address_independent_email
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentEmail|null $to_address_independent_email to_address_independent_email
     *
     * @return self
     */
    public function setToAddressIndependentEmail($to_address_independent_email)
    {
        if (is_null($to_address_independent_email)) {
            throw new \InvalidArgumentException('non-nullable to_address_independent_email cannot be null');
        }
        $this->container['to_address_independent_email'] = $to_address_independent_email;

        return $this;
    }

    /**
     * Gets to_address_independent_fax
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentFax|null
     */
    public function getToAddressIndependentFax()
    {
        return $this->container['to_address_independent_fax'];
    }

    /**
     * Sets to_address_independent_fax
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentFax|null $to_address_independent_fax to_address_independent_fax
     *
     * @return self
     */
    public function setToAddressIndependentFax($to_address_independent_fax)
    {
        if (is_null($to_address_independent_fax)) {
            throw new \InvalidArgumentException('non-nullable to_address_independent_fax cannot be null');
        }
        $this->container['to_address_independent_fax'] = $to_address_independent_fax;

        return $this;
    }

    /**
     * Gets to_address_independent_mobile
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentMobile|null
     */
    public function getToAddressIndependentMobile()
    {
        return $this->container['to_address_independent_mobile'];
    }

    /**
     * Sets to_address_independent_mobile
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentMobile|null $to_address_independent_mobile to_address_independent_mobile
     *
     * @return self
     */
    public function setToAddressIndependentMobile($to_address_independent_mobile)
    {
        if (is_null($to_address_independent_mobile)) {
            throw new \InvalidArgumentException('non-nullable to_address_independent_mobile cannot be null');
        }
        $this->container['to_address_independent_mobile'] = $to_address_independent_mobile;

        return $this;
    }

    /**
     * Gets to_address_independent_phone
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentPhone|null
     */
    public function getToAddressIndependentPhone()
    {
        return $this->container['to_address_independent_phone'];
    }

    /**
     * Sets to_address_independent_phone
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentPhone|null $to_address_independent_phone to_address_independent_phone
     *
     * @return self
     */
    public function setToAddressIndependentPhone($to_address_independent_phone)
    {
        if (is_null($to_address_independent_phone)) {
            throw new \InvalidArgumentException('non-nullable to_address_independent_phone cannot be null');
        }
        $this->container['to_address_independent_phone'] = $to_address_independent_phone;

        return $this;
    }

    /**
     * Gets to_address_independent_website
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentWebsite|null
     */
    public function getToAddressIndependentWebsite()
    {
        return $this->container['to_address_independent_website'];
    }

    /**
     * Sets to_address_independent_website
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToAddressIndependentWebsite|null $to_address_independent_website to_address_independent_website
     *
     * @return self
     */
    public function setToAddressIndependentWebsite($to_address_independent_website)
    {
        if (is_null($to_address_independent_website)) {
            throw new \InvalidArgumentException('non-nullable to_address_independent_website cannot be null');
        }
        $this->container['to_address_independent_website'] = $to_address_independent_website;

        return $this;
    }

    /**
     * Gets to_bp_credit_worthiness
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPCreditWorthinessType|null
     */
    public function getToBpCreditWorthiness()
    {
        return $this->container['to_bp_credit_worthiness'];
    }

    /**
     * Sets to_bp_credit_worthiness
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPCreditWorthinessType|null $to_bp_credit_worthiness to_bp_credit_worthiness
     *
     * @return self
     */
    public function setToBpCreditWorthiness($to_bp_credit_worthiness)
    {
        if (is_null($to_bp_credit_worthiness)) {
            array_push($this->openAPINullablesSetToNull, 'to_bp_credit_worthiness');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('to_bp_credit_worthiness', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['to_bp_credit_worthiness'] = $to_bp_credit_worthiness;

        return $this;
    }

    /**
     * Gets to_bp_data_controller
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPDataController|null
     */
    public function getToBpDataController()
    {
        return $this->container['to_bp_data_controller'];
    }

    /**
     * Sets to_bp_data_controller
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPDataController|null $to_bp_data_controller to_bp_data_controller
     *
     * @return self
     */
    public function setToBpDataController($to_bp_data_controller)
    {
        if (is_null($to_bp_data_controller)) {
            throw new \InvalidArgumentException('non-nullable to_bp_data_controller cannot be null');
        }
        $this->container['to_bp_data_controller'] = $to_bp_data_controller;

        return $this;
    }

    /**
     * Gets to_bp_employment
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPEmployment|null
     */
    public function getToBpEmployment()
    {
        return $this->container['to_bp_employment'];
    }

    /**
     * Sets to_bp_employment
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPEmployment|null $to_bp_employment to_bp_employment
     *
     * @return self
     */
    public function setToBpEmployment($to_bp_employment)
    {
        if (is_null($to_bp_employment)) {
            throw new \InvalidArgumentException('non-nullable to_bp_employment cannot be null');
        }
        $this->container['to_bp_employment'] = $to_bp_employment;

        return $this;
    }

    /**
     * Gets to_bp_fin_services_reporting
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPFinancialServicesReportingType|null
     */
    public function getToBpFinServicesReporting()
    {
        return $this->container['to_bp_fin_services_reporting'];
    }

    /**
     * Sets to_bp_fin_services_reporting
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPFinancialServicesReportingType|null $to_bp_fin_services_reporting to_bp_fin_services_reporting
     *
     * @return self
     */
    public function setToBpFinServicesReporting($to_bp_fin_services_reporting)
    {
        if (is_null($to_bp_fin_services_reporting)) {
            array_push($this->openAPINullablesSetToNull, 'to_bp_fin_services_reporting');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('to_bp_fin_services_reporting', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['to_bp_fin_services_reporting'] = $to_bp_fin_services_reporting;

        return $this;
    }

    /**
     * Gets to_bp_fiscal_year_information
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPFiscalYearInformation|null
     */
    public function getToBpFiscalYearInformation()
    {
        return $this->container['to_bp_fiscal_year_information'];
    }

    /**
     * Sets to_bp_fiscal_year_information
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPFiscalYearInformation|null $to_bp_fiscal_year_information to_bp_fiscal_year_information
     *
     * @return self
     */
    public function setToBpFiscalYearInformation($to_bp_fiscal_year_information)
    {
        if (is_null($to_bp_fiscal_year_information)) {
            throw new \InvalidArgumentException('non-nullable to_bp_fiscal_year_information cannot be null');
        }
        $this->container['to_bp_fiscal_year_information'] = $to_bp_fiscal_year_information;

        return $this;
    }

    /**
     * Gets to_bp_relationship
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPRelationship|null
     */
    public function getToBpRelationship()
    {
        return $this->container['to_bp_relationship'];
    }

    /**
     * Sets to_bp_relationship
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBPRelationship|null $to_bp_relationship to_bp_relationship
     *
     * @return self
     */
    public function setToBpRelationship($to_bp_relationship)
    {
        if (is_null($to_bp_relationship)) {
            throw new \InvalidArgumentException('non-nullable to_bp_relationship cannot be null');
        }
        $this->container['to_bp_relationship'] = $to_bp_relationship;

        return $this;
    }

    /**
     * Gets to_bu_pa_identification
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBuPaIdentification|null
     */
    public function getToBuPaIdentification()
    {
        return $this->container['to_bu_pa_identification'];
    }

    /**
     * Sets to_bu_pa_identification
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBuPaIdentification|null $to_bu_pa_identification to_bu_pa_identification
     *
     * @return self
     */
    public function setToBuPaIdentification($to_bu_pa_identification)
    {
        if (is_null($to_bu_pa_identification)) {
            throw new \InvalidArgumentException('non-nullable to_bu_pa_identification cannot be null');
        }
        $this->container['to_bu_pa_identification'] = $to_bu_pa_identification;

        return $this;
    }

    /**
     * Gets to_bu_pa_industry
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBuPaIndustry|null
     */
    public function getToBuPaIndustry()
    {
        return $this->container['to_bu_pa_industry'];
    }

    /**
     * Sets to_bu_pa_industry
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBuPaIndustry|null $to_bu_pa_industry to_bu_pa_industry
     *
     * @return self
     */
    public function setToBuPaIndustry($to_bu_pa_industry)
    {
        if (is_null($to_bu_pa_industry)) {
            throw new \InvalidArgumentException('non-nullable to_bu_pa_industry cannot be null');
        }
        $this->container['to_bu_pa_industry'] = $to_bu_pa_industry;

        return $this;
    }

    /**
     * Gets to_business_partner
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPFinancialServicesExtnType|null
     */
    public function getToBusinessPartner()
    {
        return $this->container['to_business_partner'];
    }

    /**
     * Sets to_business_partner
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABPFinancialServicesExtnType|null $to_business_partner to_business_partner
     *
     * @return self
     */
    public function setToBusinessPartner($to_business_partner)
    {
        if (is_null($to_business_partner)) {
            array_push($this->openAPINullablesSetToNull, 'to_business_partner');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('to_business_partner', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['to_business_partner'] = $to_business_partner;

        return $this;
    }

    /**
     * Gets to_business_partner_address
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerAddress|null
     */
    public function getToBusinessPartnerAddress()
    {
        return $this->container['to_business_partner_address'];
    }

    /**
     * Sets to_business_partner_address
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerAddress|null $to_business_partner_address to_business_partner_address
     *
     * @return self
     */
    public function setToBusinessPartnerAddress($to_business_partner_address)
    {
        if (is_null($to_business_partner_address)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_address cannot be null');
        }
        $this->container['to_business_partner_address'] = $to_business_partner_address;

        return $this;
    }

    /**
     * Gets to_business_partner_alias
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerAlias|null
     */
    public function getToBusinessPartnerAlias()
    {
        return $this->container['to_business_partner_alias'];
    }

    /**
     * Sets to_business_partner_alias
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerAlias|null $to_business_partner_alias to_business_partner_alias
     *
     * @return self
     */
    public function setToBusinessPartnerAlias($to_business_partner_alias)
    {
        if (is_null($to_business_partner_alias)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_alias cannot be null');
        }
        $this->container['to_business_partner_alias'] = $to_business_partner_alias;

        return $this;
    }

    /**
     * Gets to_business_partner_bank
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerBank|null
     */
    public function getToBusinessPartnerBank()
    {
        return $this->container['to_business_partner_bank'];
    }

    /**
     * Sets to_business_partner_bank
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerBank|null $to_business_partner_bank to_business_partner_bank
     *
     * @return self
     */
    public function setToBusinessPartnerBank($to_business_partner_bank)
    {
        if (is_null($to_business_partner_bank)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_bank cannot be null');
        }
        $this->container['to_business_partner_bank'] = $to_business_partner_bank;

        return $this;
    }

    /**
     * Gets to_business_partner_contact
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerContact|null
     */
    public function getToBusinessPartnerContact()
    {
        return $this->container['to_business_partner_contact'];
    }

    /**
     * Sets to_business_partner_contact
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerContact|null $to_business_partner_contact to_business_partner_contact
     *
     * @return self
     */
    public function setToBusinessPartnerContact($to_business_partner_contact)
    {
        if (is_null($to_business_partner_contact)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_contact cannot be null');
        }
        $this->container['to_business_partner_contact'] = $to_business_partner_contact;

        return $this;
    }

    /**
     * Gets to_business_partner_is_bank
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerIsBankType|null
     */
    public function getToBusinessPartnerIsBank()
    {
        return $this->container['to_business_partner_is_bank'];
    }

    /**
     * Sets to_business_partner_is_bank
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerIsBankType|null $to_business_partner_is_bank to_business_partner_is_bank
     *
     * @return self
     */
    public function setToBusinessPartnerIsBank($to_business_partner_is_bank)
    {
        if (is_null($to_business_partner_is_bank)) {
            array_push($this->openAPINullablesSetToNull, 'to_business_partner_is_bank');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('to_business_partner_is_bank', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['to_business_partner_is_bank'] = $to_business_partner_is_bank;

        return $this;
    }

    /**
     * Gets to_business_partner_rating
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerRating|null
     */
    public function getToBusinessPartnerRating()
    {
        return $this->container['to_business_partner_rating'];
    }

    /**
     * Sets to_business_partner_rating
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerRating|null $to_business_partner_rating to_business_partner_rating
     *
     * @return self
     */
    public function setToBusinessPartnerRating($to_business_partner_rating)
    {
        if (is_null($to_business_partner_rating)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_rating cannot be null');
        }
        $this->container['to_business_partner_rating'] = $to_business_partner_rating;

        return $this;
    }

    /**
     * Gets to_business_partner_role
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerRole|null
     */
    public function getToBusinessPartnerRole()
    {
        return $this->container['to_business_partner_role'];
    }

    /**
     * Sets to_business_partner_role
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerRole|null $to_business_partner_role to_business_partner_role
     *
     * @return self
     */
    public function setToBusinessPartnerRole($to_business_partner_role)
    {
        if (is_null($to_business_partner_role)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_role cannot be null');
        }
        $this->container['to_business_partner_role'] = $to_business_partner_role;

        return $this;
    }

    /**
     * Gets to_business_partner_tax
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerTax|null
     */
    public function getToBusinessPartnerTax()
    {
        return $this->container['to_business_partner_tax'];
    }

    /**
     * Sets to_business_partner_tax
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusinessPartnerTax|null $to_business_partner_tax to_business_partner_tax
     *
     * @return self
     */
    public function setToBusinessPartnerTax($to_business_partner_tax)
    {
        if (is_null($to_business_partner_tax)) {
            throw new \InvalidArgumentException('non-nullable to_business_partner_tax cannot be null');
        }
        $this->container['to_business_partner_tax'] = $to_business_partner_tax;

        return $this;
    }

    /**
     * Gets to_bus_part_addr_depdnt_tax_nmbr
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusPartAddrDepdntTaxNmbr|null
     */
    public function getToBusPartAddrDepdntTaxNmbr()
    {
        return $this->container['to_bus_part_addr_depdnt_tax_nmbr'];
    }

    /**
     * Sets to_bus_part_addr_depdnt_tax_nmbr
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToBusPartAddrDepdntTaxNmbr|null $to_bus_part_addr_depdnt_tax_nmbr to_bus_part_addr_depdnt_tax_nmbr
     *
     * @return self
     */
    public function setToBusPartAddrDepdntTaxNmbr($to_bus_part_addr_depdnt_tax_nmbr)
    {
        if (is_null($to_bus_part_addr_depdnt_tax_nmbr)) {
            throw new \InvalidArgumentException('non-nullable to_bus_part_addr_depdnt_tax_nmbr cannot be null');
        }
        $this->container['to_bus_part_addr_depdnt_tax_nmbr'] = $to_bus_part_addr_depdnt_tax_nmbr;

        return $this;
    }

    /**
     * Gets to_customer
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERACustomerType|null
     */
    public function getToCustomer()
    {
        return $this->container['to_customer'];
    }

    /**
     * Sets to_customer
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERACustomerType|null $to_customer to_customer
     *
     * @return self
     */
    public function setToCustomer($to_customer)
    {
        if (is_null($to_customer)) {
            array_push($this->openAPINullablesSetToNull, 'to_customer');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('to_customer', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['to_customer'] = $to_customer;

        return $this;
    }

    /**
     * Gets to_payment_card
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToPaymentCard|null
     */
    public function getToPaymentCard()
    {
        return $this->container['to_payment_card'];
    }

    /**
     * Sets to_payment_card
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERABusinessPartnerTypeToPaymentCard|null $to_payment_card to_payment_card
     *
     * @return self
     */
    public function setToPaymentCard($to_payment_card)
    {
        if (is_null($to_payment_card)) {
            throw new \InvalidArgumentException('non-nullable to_payment_card cannot be null');
        }
        $this->container['to_payment_card'] = $to_payment_card;

        return $this;
    }

    /**
     * Gets to_supplier
     *
     * @return \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERASupplierType|null
     */
    public function getToSupplier()
    {
        return $this->container['to_supplier'];
    }

    /**
     * Sets to_supplier
     *
     * @param \BeLenka\SAP\BusinessPartner\Model\APIBUSINESSPARTNERASupplierType|null $to_supplier to_supplier
     *
     * @return self
     */
    public function setToSupplier($to_supplier)
    {
        if (is_null($to_supplier)) {
            array_push($this->openAPINullablesSetToNull, 'to_supplier');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('to_supplier', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['to_supplier'] = $to_supplier;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


