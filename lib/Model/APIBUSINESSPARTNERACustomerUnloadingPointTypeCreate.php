<?php
/**
 * APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\BusinessPartner\Model;

use \ArrayAccess;
use \BeLenka\SAP\BusinessPartner\ObjectSerializer;

/**
 * APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'API_BUSINESS_PARTNER.A_CustomerUnloadingPointType-create';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'customer' => 'string',
        'unloading_point_name' => 'string',
        'customer_factory_calender_code' => 'string',
        'bp_goods_receiving_hours_code' => 'string',
        'is_dflt_bp_unloading_point' => 'bool',
        'monday_morning_opening_time' => 'string',
        'monday_morning_closing_time' => 'string',
        'monday_afternoon_opening_time' => 'string',
        'monday_afternoon_closing_time' => 'string',
        'tuesday_morning_opening_time' => 'string',
        'tuesday_morning_closing_time' => 'string',
        'tuesday_afternoon_opening_time' => 'string',
        'tuesday_afternoon_closing_time' => 'string',
        'wednesday_morning_opening_time' => 'string',
        'wednesday_morning_closing_time' => 'string',
        'wednesday_afternoon_opening_time' => 'string',
        'wednesday_afternoon_closing_time' => 'string',
        'thursday_morning_opening_time' => 'string',
        'thursday_morning_closing_time' => 'string',
        'thursday_afternoon_opening_time' => 'string',
        'thursday_afternoon_closing_time' => 'string',
        'friday_morning_opening_time' => 'string',
        'friday_morning_closing_time' => 'string',
        'friday_afternoon_opening_time' => 'string',
        'friday_afternoon_closing_time' => 'string',
        'saturday_morning_opening_time' => 'string',
        'saturday_morning_closing_time' => 'string',
        'saturday_afternoon_opening_time' => 'string',
        'saturday_afternoon_closing_time' => 'string',
        'sunday_morning_opening_time' => 'string',
        'sunday_morning_closing_time' => 'string',
        'sunday_afternoon_opening_time' => 'string',
        'sunday_afternoon_closing_time' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'customer' => null,
        'unloading_point_name' => null,
        'customer_factory_calender_code' => null,
        'bp_goods_receiving_hours_code' => null,
        'is_dflt_bp_unloading_point' => null,
        'monday_morning_opening_time' => null,
        'monday_morning_closing_time' => null,
        'monday_afternoon_opening_time' => null,
        'monday_afternoon_closing_time' => null,
        'tuesday_morning_opening_time' => null,
        'tuesday_morning_closing_time' => null,
        'tuesday_afternoon_opening_time' => null,
        'tuesday_afternoon_closing_time' => null,
        'wednesday_morning_opening_time' => null,
        'wednesday_morning_closing_time' => null,
        'wednesday_afternoon_opening_time' => null,
        'wednesday_afternoon_closing_time' => null,
        'thursday_morning_opening_time' => null,
        'thursday_morning_closing_time' => null,
        'thursday_afternoon_opening_time' => null,
        'thursday_afternoon_closing_time' => null,
        'friday_morning_opening_time' => null,
        'friday_morning_closing_time' => null,
        'friday_afternoon_opening_time' => null,
        'friday_afternoon_closing_time' => null,
        'saturday_morning_opening_time' => null,
        'saturday_morning_closing_time' => null,
        'saturday_afternoon_opening_time' => null,
        'saturday_afternoon_closing_time' => null,
        'sunday_morning_opening_time' => null,
        'sunday_morning_closing_time' => null,
        'sunday_afternoon_opening_time' => null,
        'sunday_afternoon_closing_time' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'customer' => false,
		'unloading_point_name' => false,
		'customer_factory_calender_code' => true,
		'bp_goods_receiving_hours_code' => true,
		'is_dflt_bp_unloading_point' => true,
		'monday_morning_opening_time' => true,
		'monday_morning_closing_time' => true,
		'monday_afternoon_opening_time' => true,
		'monday_afternoon_closing_time' => true,
		'tuesday_morning_opening_time' => true,
		'tuesday_morning_closing_time' => true,
		'tuesday_afternoon_opening_time' => true,
		'tuesday_afternoon_closing_time' => true,
		'wednesday_morning_opening_time' => true,
		'wednesday_morning_closing_time' => true,
		'wednesday_afternoon_opening_time' => true,
		'wednesday_afternoon_closing_time' => true,
		'thursday_morning_opening_time' => true,
		'thursday_morning_closing_time' => true,
		'thursday_afternoon_opening_time' => true,
		'thursday_afternoon_closing_time' => true,
		'friday_morning_opening_time' => true,
		'friday_morning_closing_time' => true,
		'friday_afternoon_opening_time' => true,
		'friday_afternoon_closing_time' => true,
		'saturday_morning_opening_time' => true,
		'saturday_morning_closing_time' => true,
		'saturday_afternoon_opening_time' => true,
		'saturday_afternoon_closing_time' => true,
		'sunday_morning_opening_time' => true,
		'sunday_morning_closing_time' => true,
		'sunday_afternoon_opening_time' => true,
		'sunday_afternoon_closing_time' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'customer' => 'Customer',
        'unloading_point_name' => 'UnloadingPointName',
        'customer_factory_calender_code' => 'CustomerFactoryCalenderCode',
        'bp_goods_receiving_hours_code' => 'BPGoodsReceivingHoursCode',
        'is_dflt_bp_unloading_point' => 'IsDfltBPUnloadingPoint',
        'monday_morning_opening_time' => 'MondayMorningOpeningTime',
        'monday_morning_closing_time' => 'MondayMorningClosingTime',
        'monday_afternoon_opening_time' => 'MondayAfternoonOpeningTime',
        'monday_afternoon_closing_time' => 'MondayAfternoonClosingTime',
        'tuesday_morning_opening_time' => 'TuesdayMorningOpeningTime',
        'tuesday_morning_closing_time' => 'TuesdayMorningClosingTime',
        'tuesday_afternoon_opening_time' => 'TuesdayAfternoonOpeningTime',
        'tuesday_afternoon_closing_time' => 'TuesdayAfternoonClosingTime',
        'wednesday_morning_opening_time' => 'WednesdayMorningOpeningTime',
        'wednesday_morning_closing_time' => 'WednesdayMorningClosingTime',
        'wednesday_afternoon_opening_time' => 'WednesdayAfternoonOpeningTime',
        'wednesday_afternoon_closing_time' => 'WednesdayAfternoonClosingTime',
        'thursday_morning_opening_time' => 'ThursdayMorningOpeningTime',
        'thursday_morning_closing_time' => 'ThursdayMorningClosingTime',
        'thursday_afternoon_opening_time' => 'ThursdayAfternoonOpeningTime',
        'thursday_afternoon_closing_time' => 'ThursdayAfternoonClosingTime',
        'friday_morning_opening_time' => 'FridayMorningOpeningTime',
        'friday_morning_closing_time' => 'FridayMorningClosingTime',
        'friday_afternoon_opening_time' => 'FridayAfternoonOpeningTime',
        'friday_afternoon_closing_time' => 'FridayAfternoonClosingTime',
        'saturday_morning_opening_time' => 'SaturdayMorningOpeningTime',
        'saturday_morning_closing_time' => 'SaturdayMorningClosingTime',
        'saturday_afternoon_opening_time' => 'SaturdayAfternoonOpeningTime',
        'saturday_afternoon_closing_time' => 'SaturdayAfternoonClosingTime',
        'sunday_morning_opening_time' => 'SundayMorningOpeningTime',
        'sunday_morning_closing_time' => 'SundayMorningClosingTime',
        'sunday_afternoon_opening_time' => 'SundayAfternoonOpeningTime',
        'sunday_afternoon_closing_time' => 'SundayAfternoonClosingTime'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'customer' => 'setCustomer',
        'unloading_point_name' => 'setUnloadingPointName',
        'customer_factory_calender_code' => 'setCustomerFactoryCalenderCode',
        'bp_goods_receiving_hours_code' => 'setBpGoodsReceivingHoursCode',
        'is_dflt_bp_unloading_point' => 'setIsDfltBpUnloadingPoint',
        'monday_morning_opening_time' => 'setMondayMorningOpeningTime',
        'monday_morning_closing_time' => 'setMondayMorningClosingTime',
        'monday_afternoon_opening_time' => 'setMondayAfternoonOpeningTime',
        'monday_afternoon_closing_time' => 'setMondayAfternoonClosingTime',
        'tuesday_morning_opening_time' => 'setTuesdayMorningOpeningTime',
        'tuesday_morning_closing_time' => 'setTuesdayMorningClosingTime',
        'tuesday_afternoon_opening_time' => 'setTuesdayAfternoonOpeningTime',
        'tuesday_afternoon_closing_time' => 'setTuesdayAfternoonClosingTime',
        'wednesday_morning_opening_time' => 'setWednesdayMorningOpeningTime',
        'wednesday_morning_closing_time' => 'setWednesdayMorningClosingTime',
        'wednesday_afternoon_opening_time' => 'setWednesdayAfternoonOpeningTime',
        'wednesday_afternoon_closing_time' => 'setWednesdayAfternoonClosingTime',
        'thursday_morning_opening_time' => 'setThursdayMorningOpeningTime',
        'thursday_morning_closing_time' => 'setThursdayMorningClosingTime',
        'thursday_afternoon_opening_time' => 'setThursdayAfternoonOpeningTime',
        'thursday_afternoon_closing_time' => 'setThursdayAfternoonClosingTime',
        'friday_morning_opening_time' => 'setFridayMorningOpeningTime',
        'friday_morning_closing_time' => 'setFridayMorningClosingTime',
        'friday_afternoon_opening_time' => 'setFridayAfternoonOpeningTime',
        'friday_afternoon_closing_time' => 'setFridayAfternoonClosingTime',
        'saturday_morning_opening_time' => 'setSaturdayMorningOpeningTime',
        'saturday_morning_closing_time' => 'setSaturdayMorningClosingTime',
        'saturday_afternoon_opening_time' => 'setSaturdayAfternoonOpeningTime',
        'saturday_afternoon_closing_time' => 'setSaturdayAfternoonClosingTime',
        'sunday_morning_opening_time' => 'setSundayMorningOpeningTime',
        'sunday_morning_closing_time' => 'setSundayMorningClosingTime',
        'sunday_afternoon_opening_time' => 'setSundayAfternoonOpeningTime',
        'sunday_afternoon_closing_time' => 'setSundayAfternoonClosingTime'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'customer' => 'getCustomer',
        'unloading_point_name' => 'getUnloadingPointName',
        'customer_factory_calender_code' => 'getCustomerFactoryCalenderCode',
        'bp_goods_receiving_hours_code' => 'getBpGoodsReceivingHoursCode',
        'is_dflt_bp_unloading_point' => 'getIsDfltBpUnloadingPoint',
        'monday_morning_opening_time' => 'getMondayMorningOpeningTime',
        'monday_morning_closing_time' => 'getMondayMorningClosingTime',
        'monday_afternoon_opening_time' => 'getMondayAfternoonOpeningTime',
        'monday_afternoon_closing_time' => 'getMondayAfternoonClosingTime',
        'tuesday_morning_opening_time' => 'getTuesdayMorningOpeningTime',
        'tuesday_morning_closing_time' => 'getTuesdayMorningClosingTime',
        'tuesday_afternoon_opening_time' => 'getTuesdayAfternoonOpeningTime',
        'tuesday_afternoon_closing_time' => 'getTuesdayAfternoonClosingTime',
        'wednesday_morning_opening_time' => 'getWednesdayMorningOpeningTime',
        'wednesday_morning_closing_time' => 'getWednesdayMorningClosingTime',
        'wednesday_afternoon_opening_time' => 'getWednesdayAfternoonOpeningTime',
        'wednesday_afternoon_closing_time' => 'getWednesdayAfternoonClosingTime',
        'thursday_morning_opening_time' => 'getThursdayMorningOpeningTime',
        'thursday_morning_closing_time' => 'getThursdayMorningClosingTime',
        'thursday_afternoon_opening_time' => 'getThursdayAfternoonOpeningTime',
        'thursday_afternoon_closing_time' => 'getThursdayAfternoonClosingTime',
        'friday_morning_opening_time' => 'getFridayMorningOpeningTime',
        'friday_morning_closing_time' => 'getFridayMorningClosingTime',
        'friday_afternoon_opening_time' => 'getFridayAfternoonOpeningTime',
        'friday_afternoon_closing_time' => 'getFridayAfternoonClosingTime',
        'saturday_morning_opening_time' => 'getSaturdayMorningOpeningTime',
        'saturday_morning_closing_time' => 'getSaturdayMorningClosingTime',
        'saturday_afternoon_opening_time' => 'getSaturdayAfternoonOpeningTime',
        'saturday_afternoon_closing_time' => 'getSaturdayAfternoonClosingTime',
        'sunday_morning_opening_time' => 'getSundayMorningOpeningTime',
        'sunday_morning_closing_time' => 'getSundayMorningClosingTime',
        'sunday_afternoon_opening_time' => 'getSundayAfternoonOpeningTime',
        'sunday_afternoon_closing_time' => 'getSundayAfternoonClosingTime'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('customer', $data ?? [], null);
        $this->setIfExists('unloading_point_name', $data ?? [], null);
        $this->setIfExists('customer_factory_calender_code', $data ?? [], null);
        $this->setIfExists('bp_goods_receiving_hours_code', $data ?? [], null);
        $this->setIfExists('is_dflt_bp_unloading_point', $data ?? [], null);
        $this->setIfExists('monday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('monday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('monday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('monday_afternoon_closing_time', $data ?? [], null);
        $this->setIfExists('tuesday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('tuesday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('tuesday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('tuesday_afternoon_closing_time', $data ?? [], null);
        $this->setIfExists('wednesday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('wednesday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('wednesday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('wednesday_afternoon_closing_time', $data ?? [], null);
        $this->setIfExists('thursday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('thursday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('thursday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('thursday_afternoon_closing_time', $data ?? [], null);
        $this->setIfExists('friday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('friday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('friday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('friday_afternoon_closing_time', $data ?? [], null);
        $this->setIfExists('saturday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('saturday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('saturday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('saturday_afternoon_closing_time', $data ?? [], null);
        $this->setIfExists('sunday_morning_opening_time', $data ?? [], null);
        $this->setIfExists('sunday_morning_closing_time', $data ?? [], null);
        $this->setIfExists('sunday_afternoon_opening_time', $data ?? [], null);
        $this->setIfExists('sunday_afternoon_closing_time', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['customer'] === null) {
            $invalidProperties[] = "'customer' can't be null";
        }
        if ((mb_strlen($this->container['customer']) > 10)) {
            $invalidProperties[] = "invalid value for 'customer', the character length must be smaller than or equal to 10.";
        }

        if ($this->container['unloading_point_name'] === null) {
            $invalidProperties[] = "'unloading_point_name' can't be null";
        }
        if ((mb_strlen($this->container['unloading_point_name']) > 25)) {
            $invalidProperties[] = "invalid value for 'unloading_point_name', the character length must be smaller than or equal to 25.";
        }

        if (!is_null($this->container['customer_factory_calender_code']) && (mb_strlen($this->container['customer_factory_calender_code']) > 2)) {
            $invalidProperties[] = "invalid value for 'customer_factory_calender_code', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['bp_goods_receiving_hours_code']) && (mb_strlen($this->container['bp_goods_receiving_hours_code']) > 3)) {
            $invalidProperties[] = "invalid value for 'bp_goods_receiving_hours_code', the character length must be smaller than or equal to 3.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets customer
     *
     * @return string
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param string $customer Customer Number
     *
     * @return self
     */
    public function setCustomer($customer)
    {
        if (is_null($customer)) {
            throw new \InvalidArgumentException('non-nullable customer cannot be null');
        }
        if ((mb_strlen($customer) > 10)) {
            throw new \InvalidArgumentException('invalid length for $customer when calling APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate., must be smaller than or equal to 10.');
        }

        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets unloading_point_name
     *
     * @return string
     */
    public function getUnloadingPointName()
    {
        return $this->container['unloading_point_name'];
    }

    /**
     * Sets unloading_point_name
     *
     * @param string $unloading_point_name unloading_point_name
     *
     * @return self
     */
    public function setUnloadingPointName($unloading_point_name)
    {
        if (is_null($unloading_point_name)) {
            throw new \InvalidArgumentException('non-nullable unloading_point_name cannot be null');
        }
        if ((mb_strlen($unloading_point_name) > 25)) {
            throw new \InvalidArgumentException('invalid length for $unloading_point_name when calling APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate., must be smaller than or equal to 25.');
        }

        $this->container['unloading_point_name'] = $unloading_point_name;

        return $this;
    }

    /**
     * Gets customer_factory_calender_code
     *
     * @return string|null
     */
    public function getCustomerFactoryCalenderCode()
    {
        return $this->container['customer_factory_calender_code'];
    }

    /**
     * Sets customer_factory_calender_code
     *
     * @param string|null $customer_factory_calender_code Customer's factory calendar
     *
     * @return self
     */
    public function setCustomerFactoryCalenderCode($customer_factory_calender_code)
    {
        if (is_null($customer_factory_calender_code)) {
            array_push($this->openAPINullablesSetToNull, 'customer_factory_calender_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('customer_factory_calender_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($customer_factory_calender_code) && (mb_strlen($customer_factory_calender_code) > 2)) {
            throw new \InvalidArgumentException('invalid length for $customer_factory_calender_code when calling APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['customer_factory_calender_code'] = $customer_factory_calender_code;

        return $this;
    }

    /**
     * Gets bp_goods_receiving_hours_code
     *
     * @return string|null
     */
    public function getBpGoodsReceivingHoursCode()
    {
        return $this->container['bp_goods_receiving_hours_code'];
    }

    /**
     * Sets bp_goods_receiving_hours_code
     *
     * @param string|null $bp_goods_receiving_hours_code Goods receiving hours ID (default value)
     *
     * @return self
     */
    public function setBpGoodsReceivingHoursCode($bp_goods_receiving_hours_code)
    {
        if (is_null($bp_goods_receiving_hours_code)) {
            array_push($this->openAPINullablesSetToNull, 'bp_goods_receiving_hours_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bp_goods_receiving_hours_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($bp_goods_receiving_hours_code) && (mb_strlen($bp_goods_receiving_hours_code) > 3)) {
            throw new \InvalidArgumentException('invalid length for $bp_goods_receiving_hours_code when calling APIBUSINESSPARTNERACustomerUnloadingPointTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['bp_goods_receiving_hours_code'] = $bp_goods_receiving_hours_code;

        return $this;
    }

    /**
     * Gets is_dflt_bp_unloading_point
     *
     * @return bool|null
     */
    public function getIsDfltBpUnloadingPoint()
    {
        return $this->container['is_dflt_bp_unloading_point'];
    }

    /**
     * Sets is_dflt_bp_unloading_point
     *
     * @param bool|null $is_dflt_bp_unloading_point Default unloading point
     *
     * @return self
     */
    public function setIsDfltBpUnloadingPoint($is_dflt_bp_unloading_point)
    {
        if (is_null($is_dflt_bp_unloading_point)) {
            array_push($this->openAPINullablesSetToNull, 'is_dflt_bp_unloading_point');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_dflt_bp_unloading_point', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_dflt_bp_unloading_point'] = $is_dflt_bp_unloading_point;

        return $this;
    }

    /**
     * Gets monday_morning_opening_time
     *
     * @return string|null
     */
    public function getMondayMorningOpeningTime()
    {
        return $this->container['monday_morning_opening_time'];
    }

    /**
     * Sets monday_morning_opening_time
     *
     * @param string|null $monday_morning_opening_time Goods receipt times: Monday morning from ...
     *
     * @return self
     */
    public function setMondayMorningOpeningTime($monday_morning_opening_time)
    {
        if (is_null($monday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'monday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('monday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['monday_morning_opening_time'] = $monday_morning_opening_time;

        return $this;
    }

    /**
     * Gets monday_morning_closing_time
     *
     * @return string|null
     */
    public function getMondayMorningClosingTime()
    {
        return $this->container['monday_morning_closing_time'];
    }

    /**
     * Sets monday_morning_closing_time
     *
     * @param string|null $monday_morning_closing_time Goods receiving hours: Monday morning until ...
     *
     * @return self
     */
    public function setMondayMorningClosingTime($monday_morning_closing_time)
    {
        if (is_null($monday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'monday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('monday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['monday_morning_closing_time'] = $monday_morning_closing_time;

        return $this;
    }

    /**
     * Gets monday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getMondayAfternoonOpeningTime()
    {
        return $this->container['monday_afternoon_opening_time'];
    }

    /**
     * Sets monday_afternoon_opening_time
     *
     * @param string|null $monday_afternoon_opening_time Goods receiving hours: Monday afternoon from ...
     *
     * @return self
     */
    public function setMondayAfternoonOpeningTime($monday_afternoon_opening_time)
    {
        if (is_null($monday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'monday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('monday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['monday_afternoon_opening_time'] = $monday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets monday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getMondayAfternoonClosingTime()
    {
        return $this->container['monday_afternoon_closing_time'];
    }

    /**
     * Sets monday_afternoon_closing_time
     *
     * @param string|null $monday_afternoon_closing_time Goods receiving hours: Monday afternoon until ...
     *
     * @return self
     */
    public function setMondayAfternoonClosingTime($monday_afternoon_closing_time)
    {
        if (is_null($monday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'monday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('monday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['monday_afternoon_closing_time'] = $monday_afternoon_closing_time;

        return $this;
    }

    /**
     * Gets tuesday_morning_opening_time
     *
     * @return string|null
     */
    public function getTuesdayMorningOpeningTime()
    {
        return $this->container['tuesday_morning_opening_time'];
    }

    /**
     * Sets tuesday_morning_opening_time
     *
     * @param string|null $tuesday_morning_opening_time Goods receiving hours: Tuesday morning from...
     *
     * @return self
     */
    public function setTuesdayMorningOpeningTime($tuesday_morning_opening_time)
    {
        if (is_null($tuesday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'tuesday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tuesday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tuesday_morning_opening_time'] = $tuesday_morning_opening_time;

        return $this;
    }

    /**
     * Gets tuesday_morning_closing_time
     *
     * @return string|null
     */
    public function getTuesdayMorningClosingTime()
    {
        return $this->container['tuesday_morning_closing_time'];
    }

    /**
     * Sets tuesday_morning_closing_time
     *
     * @param string|null $tuesday_morning_closing_time Goods receipt times: Tuesday morning until ...
     *
     * @return self
     */
    public function setTuesdayMorningClosingTime($tuesday_morning_closing_time)
    {
        if (is_null($tuesday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'tuesday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tuesday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tuesday_morning_closing_time'] = $tuesday_morning_closing_time;

        return $this;
    }

    /**
     * Gets tuesday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getTuesdayAfternoonOpeningTime()
    {
        return $this->container['tuesday_afternoon_opening_time'];
    }

    /**
     * Sets tuesday_afternoon_opening_time
     *
     * @param string|null $tuesday_afternoon_opening_time Goods receiving hours: Tuesday afternoon from ...
     *
     * @return self
     */
    public function setTuesdayAfternoonOpeningTime($tuesday_afternoon_opening_time)
    {
        if (is_null($tuesday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'tuesday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tuesday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tuesday_afternoon_opening_time'] = $tuesday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets tuesday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getTuesdayAfternoonClosingTime()
    {
        return $this->container['tuesday_afternoon_closing_time'];
    }

    /**
     * Sets tuesday_afternoon_closing_time
     *
     * @param string|null $tuesday_afternoon_closing_time Goods receiving hours: Tuesday afternoon until ...
     *
     * @return self
     */
    public function setTuesdayAfternoonClosingTime($tuesday_afternoon_closing_time)
    {
        if (is_null($tuesday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'tuesday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tuesday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tuesday_afternoon_closing_time'] = $tuesday_afternoon_closing_time;

        return $this;
    }

    /**
     * Gets wednesday_morning_opening_time
     *
     * @return string|null
     */
    public function getWednesdayMorningOpeningTime()
    {
        return $this->container['wednesday_morning_opening_time'];
    }

    /**
     * Sets wednesday_morning_opening_time
     *
     * @param string|null $wednesday_morning_opening_time Goods receiving hours: Wednesday morning from ...
     *
     * @return self
     */
    public function setWednesdayMorningOpeningTime($wednesday_morning_opening_time)
    {
        if (is_null($wednesday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'wednesday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('wednesday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['wednesday_morning_opening_time'] = $wednesday_morning_opening_time;

        return $this;
    }

    /**
     * Gets wednesday_morning_closing_time
     *
     * @return string|null
     */
    public function getWednesdayMorningClosingTime()
    {
        return $this->container['wednesday_morning_closing_time'];
    }

    /**
     * Sets wednesday_morning_closing_time
     *
     * @param string|null $wednesday_morning_closing_time Goods receiving hours: Wednesday morning until ...
     *
     * @return self
     */
    public function setWednesdayMorningClosingTime($wednesday_morning_closing_time)
    {
        if (is_null($wednesday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'wednesday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('wednesday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['wednesday_morning_closing_time'] = $wednesday_morning_closing_time;

        return $this;
    }

    /**
     * Gets wednesday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getWednesdayAfternoonOpeningTime()
    {
        return $this->container['wednesday_afternoon_opening_time'];
    }

    /**
     * Sets wednesday_afternoon_opening_time
     *
     * @param string|null $wednesday_afternoon_opening_time Goods receiving hours: Wednesday afternoon from ...
     *
     * @return self
     */
    public function setWednesdayAfternoonOpeningTime($wednesday_afternoon_opening_time)
    {
        if (is_null($wednesday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'wednesday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('wednesday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['wednesday_afternoon_opening_time'] = $wednesday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets wednesday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getWednesdayAfternoonClosingTime()
    {
        return $this->container['wednesday_afternoon_closing_time'];
    }

    /**
     * Sets wednesday_afternoon_closing_time
     *
     * @param string|null $wednesday_afternoon_closing_time Goods receiving hours: Wednesday afternoon until ...
     *
     * @return self
     */
    public function setWednesdayAfternoonClosingTime($wednesday_afternoon_closing_time)
    {
        if (is_null($wednesday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'wednesday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('wednesday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['wednesday_afternoon_closing_time'] = $wednesday_afternoon_closing_time;

        return $this;
    }

    /**
     * Gets thursday_morning_opening_time
     *
     * @return string|null
     */
    public function getThursdayMorningOpeningTime()
    {
        return $this->container['thursday_morning_opening_time'];
    }

    /**
     * Sets thursday_morning_opening_time
     *
     * @param string|null $thursday_morning_opening_time Goods receiving hours: Thursday morning from ...
     *
     * @return self
     */
    public function setThursdayMorningOpeningTime($thursday_morning_opening_time)
    {
        if (is_null($thursday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'thursday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('thursday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['thursday_morning_opening_time'] = $thursday_morning_opening_time;

        return $this;
    }

    /**
     * Gets thursday_morning_closing_time
     *
     * @return string|null
     */
    public function getThursdayMorningClosingTime()
    {
        return $this->container['thursday_morning_closing_time'];
    }

    /**
     * Sets thursday_morning_closing_time
     *
     * @param string|null $thursday_morning_closing_time Goods receiving hours: Thursday morning until ...
     *
     * @return self
     */
    public function setThursdayMorningClosingTime($thursday_morning_closing_time)
    {
        if (is_null($thursday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'thursday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('thursday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['thursday_morning_closing_time'] = $thursday_morning_closing_time;

        return $this;
    }

    /**
     * Gets thursday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getThursdayAfternoonOpeningTime()
    {
        return $this->container['thursday_afternoon_opening_time'];
    }

    /**
     * Sets thursday_afternoon_opening_time
     *
     * @param string|null $thursday_afternoon_opening_time Goods receiving hours: Thursday afternoon from ...
     *
     * @return self
     */
    public function setThursdayAfternoonOpeningTime($thursday_afternoon_opening_time)
    {
        if (is_null($thursday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'thursday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('thursday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['thursday_afternoon_opening_time'] = $thursday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets thursday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getThursdayAfternoonClosingTime()
    {
        return $this->container['thursday_afternoon_closing_time'];
    }

    /**
     * Sets thursday_afternoon_closing_time
     *
     * @param string|null $thursday_afternoon_closing_time Goods receiving hours: Thursday afternoon until...
     *
     * @return self
     */
    public function setThursdayAfternoonClosingTime($thursday_afternoon_closing_time)
    {
        if (is_null($thursday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'thursday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('thursday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['thursday_afternoon_closing_time'] = $thursday_afternoon_closing_time;

        return $this;
    }

    /**
     * Gets friday_morning_opening_time
     *
     * @return string|null
     */
    public function getFridayMorningOpeningTime()
    {
        return $this->container['friday_morning_opening_time'];
    }

    /**
     * Sets friday_morning_opening_time
     *
     * @param string|null $friday_morning_opening_time Goods receiving hours: Friday morning from ...
     *
     * @return self
     */
    public function setFridayMorningOpeningTime($friday_morning_opening_time)
    {
        if (is_null($friday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'friday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('friday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['friday_morning_opening_time'] = $friday_morning_opening_time;

        return $this;
    }

    /**
     * Gets friday_morning_closing_time
     *
     * @return string|null
     */
    public function getFridayMorningClosingTime()
    {
        return $this->container['friday_morning_closing_time'];
    }

    /**
     * Sets friday_morning_closing_time
     *
     * @param string|null $friday_morning_closing_time Goods receiving hours: Friday morning until ...
     *
     * @return self
     */
    public function setFridayMorningClosingTime($friday_morning_closing_time)
    {
        if (is_null($friday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'friday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('friday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['friday_morning_closing_time'] = $friday_morning_closing_time;

        return $this;
    }

    /**
     * Gets friday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getFridayAfternoonOpeningTime()
    {
        return $this->container['friday_afternoon_opening_time'];
    }

    /**
     * Sets friday_afternoon_opening_time
     *
     * @param string|null $friday_afternoon_opening_time Goods receiving hours: Friday afternoon from ...
     *
     * @return self
     */
    public function setFridayAfternoonOpeningTime($friday_afternoon_opening_time)
    {
        if (is_null($friday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'friday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('friday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['friday_afternoon_opening_time'] = $friday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets friday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getFridayAfternoonClosingTime()
    {
        return $this->container['friday_afternoon_closing_time'];
    }

    /**
     * Sets friday_afternoon_closing_time
     *
     * @param string|null $friday_afternoon_closing_time Goods receiving hours: Friday afternoon until ...
     *
     * @return self
     */
    public function setFridayAfternoonClosingTime($friday_afternoon_closing_time)
    {
        if (is_null($friday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'friday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('friday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['friday_afternoon_closing_time'] = $friday_afternoon_closing_time;

        return $this;
    }

    /**
     * Gets saturday_morning_opening_time
     *
     * @return string|null
     */
    public function getSaturdayMorningOpeningTime()
    {
        return $this->container['saturday_morning_opening_time'];
    }

    /**
     * Sets saturday_morning_opening_time
     *
     * @param string|null $saturday_morning_opening_time Goods receiving hours: Saturday morning from ...
     *
     * @return self
     */
    public function setSaturdayMorningOpeningTime($saturday_morning_opening_time)
    {
        if (is_null($saturday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'saturday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('saturday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['saturday_morning_opening_time'] = $saturday_morning_opening_time;

        return $this;
    }

    /**
     * Gets saturday_morning_closing_time
     *
     * @return string|null
     */
    public function getSaturdayMorningClosingTime()
    {
        return $this->container['saturday_morning_closing_time'];
    }

    /**
     * Sets saturday_morning_closing_time
     *
     * @param string|null $saturday_morning_closing_time Goods receiving hours: Saturday morning until ...
     *
     * @return self
     */
    public function setSaturdayMorningClosingTime($saturday_morning_closing_time)
    {
        if (is_null($saturday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'saturday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('saturday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['saturday_morning_closing_time'] = $saturday_morning_closing_time;

        return $this;
    }

    /**
     * Gets saturday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getSaturdayAfternoonOpeningTime()
    {
        return $this->container['saturday_afternoon_opening_time'];
    }

    /**
     * Sets saturday_afternoon_opening_time
     *
     * @param string|null $saturday_afternoon_opening_time Goods receiving hours: Saturday afternoon from ...
     *
     * @return self
     */
    public function setSaturdayAfternoonOpeningTime($saturday_afternoon_opening_time)
    {
        if (is_null($saturday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'saturday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('saturday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['saturday_afternoon_opening_time'] = $saturday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets saturday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getSaturdayAfternoonClosingTime()
    {
        return $this->container['saturday_afternoon_closing_time'];
    }

    /**
     * Sets saturday_afternoon_closing_time
     *
     * @param string|null $saturday_afternoon_closing_time Goods receiving hours: Saturday afternoon until ...
     *
     * @return self
     */
    public function setSaturdayAfternoonClosingTime($saturday_afternoon_closing_time)
    {
        if (is_null($saturday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'saturday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('saturday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['saturday_afternoon_closing_time'] = $saturday_afternoon_closing_time;

        return $this;
    }

    /**
     * Gets sunday_morning_opening_time
     *
     * @return string|null
     */
    public function getSundayMorningOpeningTime()
    {
        return $this->container['sunday_morning_opening_time'];
    }

    /**
     * Sets sunday_morning_opening_time
     *
     * @param string|null $sunday_morning_opening_time Goods receiving hours: Sunday morning from ...
     *
     * @return self
     */
    public function setSundayMorningOpeningTime($sunday_morning_opening_time)
    {
        if (is_null($sunday_morning_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'sunday_morning_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sunday_morning_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sunday_morning_opening_time'] = $sunday_morning_opening_time;

        return $this;
    }

    /**
     * Gets sunday_morning_closing_time
     *
     * @return string|null
     */
    public function getSundayMorningClosingTime()
    {
        return $this->container['sunday_morning_closing_time'];
    }

    /**
     * Sets sunday_morning_closing_time
     *
     * @param string|null $sunday_morning_closing_time Goods receiving hours: Sunday morning until ...
     *
     * @return self
     */
    public function setSundayMorningClosingTime($sunday_morning_closing_time)
    {
        if (is_null($sunday_morning_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'sunday_morning_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sunday_morning_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sunday_morning_closing_time'] = $sunday_morning_closing_time;

        return $this;
    }

    /**
     * Gets sunday_afternoon_opening_time
     *
     * @return string|null
     */
    public function getSundayAfternoonOpeningTime()
    {
        return $this->container['sunday_afternoon_opening_time'];
    }

    /**
     * Sets sunday_afternoon_opening_time
     *
     * @param string|null $sunday_afternoon_opening_time Goods receiving hours: Sunday afternoon from ...
     *
     * @return self
     */
    public function setSundayAfternoonOpeningTime($sunday_afternoon_opening_time)
    {
        if (is_null($sunday_afternoon_opening_time)) {
            array_push($this->openAPINullablesSetToNull, 'sunday_afternoon_opening_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sunday_afternoon_opening_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sunday_afternoon_opening_time'] = $sunday_afternoon_opening_time;

        return $this;
    }

    /**
     * Gets sunday_afternoon_closing_time
     *
     * @return string|null
     */
    public function getSundayAfternoonClosingTime()
    {
        return $this->container['sunday_afternoon_closing_time'];
    }

    /**
     * Sets sunday_afternoon_closing_time
     *
     * @param string|null $sunday_afternoon_closing_time Goods receiving hours: Sunday afternoon until ...
     *
     * @return self
     */
    public function setSundayAfternoonClosingTime($sunday_afternoon_closing_time)
    {
        if (is_null($sunday_afternoon_closing_time)) {
            array_push($this->openAPINullablesSetToNull, 'sunday_afternoon_closing_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sunday_afternoon_closing_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sunday_afternoon_closing_time'] = $sunday_afternoon_closing_time;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


