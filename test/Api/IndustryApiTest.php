<?php
/**
 * IndustryApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace BeLenka\SAP\BusinessPartner\Test\Api;

use \BeLenka\SAP\BusinessPartner\Configuration;
use \BeLenka\SAP\BusinessPartner\ApiException;
use \BeLenka\SAP\BusinessPartner\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IndustryApiTest Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IndustryApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for aBuPaIndustryGet
     *
     * Retrieves business partner industry data..
     *
     */
    public function testABuPaIndustryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDelete
     *
     * Deletes business partner industry data..
     *
     */
    public function testABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGet
     *
     * Retrieves business partner industry data by key fields..
     *
     */
    public function testABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch
     *
     * Updates business partner industry data..
     *
     */
    public function testABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aBuPaIndustryPost
     *
     * Creates industry data linked to business partner record..
     *
     */
    public function testABuPaIndustryPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aBusinessPartnerBusinessPartnerToBuPaIndustryGet
     *
     * Retrieves business partner industry data..
     *
     */
    public function testABusinessPartnerBusinessPartnerToBuPaIndustryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aBusinessPartnerBusinessPartnerToBuPaIndustryPost
     *
     * Creates industry data linked to business partner record..
     *
     */
    public function testABusinessPartnerBusinessPartnerToBuPaIndustryPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
