<?php
/**
 * APIBUSINESSPARTNERASupplierPurchasingOrgTypeCreateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BusinessPartner\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBUSINESSPARTNERASupplierPurchasingOrgTypeCreateTest Class Doc Comment
 *
 * @category    Class
 * @description APIBUSINESSPARTNERASupplierPurchasingOrgTypeCreate
 * @package     BeLenka\SAP\BusinessPartner
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBUSINESSPARTNERASupplierPurchasingOrgTypeCreateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBUSINESSPARTNERASupplierPurchasingOrgTypeCreate"
     */
    public function testAPIBUSINESSPARTNERASupplierPurchasingOrgTypeCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier"
     */
    public function testPropertySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_organization"
     */
    public function testPropertyPurchasingOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "automatic_evaluated_rcpt_settlmt"
     */
    public function testPropertyAutomaticEvaluatedRcptSettlmt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "calculation_schema_group_code"
     */
    public function testPropertyCalculationSchemaGroupCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deletion_indicator"
     */
    public function testPropertyDeletionIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "evald_receipt_settlement_is_active"
     */
    public function testPropertyEvaldReceiptSettlementIsActive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_classification"
     */
    public function testPropertyIncotermsClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_transfer_location"
     */
    public function testPropertyIncotermsTransferLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_version"
     */
    public function testPropertyIncotermsVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location1"
     */
    public function testPropertyIncotermsLocation1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location2"
     */
    public function testPropertyIncotermsLocation2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_sup_chn_loc1_addl_uuid"
     */
    public function testPropertyIncotermsSupChnLoc1AddlUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_sup_chn_loc2_addl_uuid"
     */
    public function testPropertyIncotermsSupChnLoc2AddlUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_sup_chn_dvtg_loc_addl_uuid"
     */
    public function testPropertyIncotermsSupChnDvtgLocAddlUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "intrastat_crs_border_tr_mode"
     */
    public function testPropertyIntrastatCrsBorderTrMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_is_goods_receipt_based"
     */
    public function testPropertyInvoiceIsGoodsReceiptBased()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_is_mm_service_entry_based"
     */
    public function testPropertyInvoiceIsMmServiceEntryBased()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_planned_delivery_durn"
     */
    public function testPropertyMaterialPlannedDeliveryDurn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_order_amount"
     */
    public function testPropertyMinimumOrderAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_terms"
     */
    public function testPropertyPaymentTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "planning_cycle"
     */
    public function testPropertyPlanningCycle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing_date_control"
     */
    public function testPropertyPricingDateControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_stock_and_sls_data_transf_prfl"
     */
    public function testPropertyProdStockAndSlsDataTransfPrfl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_unit_group"
     */
    public function testPropertyProductUnitGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pur_ord_auto_generation_is_allowed"
     */
    public function testPropertyPurOrdAutoGenerationIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_currency"
     */
    public function testPropertyPurchaseOrderCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_group"
     */
    public function testPropertyPurchasingGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_is_blocked_for_supplier"
     */
    public function testPropertyPurchasingIsBlockedForSupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rounding_profile"
     */
    public function testPropertyRoundingProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_condition"
     */
    public function testPropertyShippingCondition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_discount_in_kind_is_granted"
     */
    public function testPropertySuplrDiscountInKindIsGranted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_invc_reval_is_allowed"
     */
    public function testPropertySuplrInvcRevalIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_is_rlvt_for_settlmt_mgmt"
     */
    public function testPropertySuplrIsRlvtForSettlmtMgmt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_purg_org_is_rlvt_for_price_detn"
     */
    public function testPropertySuplrPurgOrgIsRlvtForPriceDetn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_abc_classification_code"
     */
    public function testPropertySupplierAbcClassificationCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_account_number"
     */
    public function testPropertySupplierAccountNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_is_returns_supplier"
     */
    public function testPropertySupplierIsReturnsSupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_phone_number"
     */
    public function testPropertySupplierPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_resp_sales_person_name"
     */
    public function testPropertySupplierRespSalesPersonName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_confirmation_control_key"
     */
    public function testPropertySupplierConfirmationControlKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_order_ackn_rqd"
     */
    public function testPropertyIsOrderAcknRqd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_group"
     */
    public function testPropertyAuthorizationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_account_group"
     */
    public function testPropertySupplierAccountGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_partner_function"
     */
    public function testPropertyToPartnerFunction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_purchasing_org_text"
     */
    public function testPropertyToPurchasingOrgText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
