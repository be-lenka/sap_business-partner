<?php
/**
 * APIBUSINESSPARTNERACustomerCompanyTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BusinessPartner\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBUSINESSPARTNERACustomerCompanyTypeTest Class Doc Comment
 *
 * @category    Class
 * @description APIBUSINESSPARTNERACustomerCompanyType
 * @package     BeLenka\SAP\BusinessPartner
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBUSINESSPARTNERACustomerCompanyTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBUSINESSPARTNERACustomerCompanyType"
     */
    public function testAPIBUSINESSPARTNERACustomerCompanyType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer"
     */
    public function testPropertyCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_code"
     */
    public function testPropertyCompanyCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "apar_tolerance_group"
     */
    public function testPropertyAparToleranceGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "account_by_customer"
     */
    public function testPropertyAccountByCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_clerk"
     */
    public function testPropertyAccountingClerk()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_clerk_fax_number"
     */
    public function testPropertyAccountingClerkFaxNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_clerk_internet_address"
     */
    public function testPropertyAccountingClerkInternetAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_clerk_phone_number"
     */
    public function testPropertyAccountingClerkPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alternative_payer_account"
     */
    public function testPropertyAlternativePayerAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_group"
     */
    public function testPropertyAuthorizationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "collective_invoice_variant"
     */
    public function testPropertyCollectiveInvoiceVariant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_account_note"
     */
    public function testPropertyCustomerAccountNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_head_office"
     */
    public function testPropertyCustomerHeadOffice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_supplier_clearing_is_used"
     */
    public function testPropertyCustomerSupplierClearingIsUsed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "house_bank"
     */
    public function testPropertyHouseBank()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interest_calculation_code"
     */
    public function testPropertyInterestCalculationCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interest_calculation_date"
     */
    public function testPropertyInterestCalculationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "intrst_calc_frequency_in_months"
     */
    public function testPropertyIntrstCalcFrequencyInMonths()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_to_be_locally_processed"
     */
    public function testPropertyIsToBeLocallyProcessed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_is_to_be_paid_separately"
     */
    public function testPropertyItemIsToBePaidSeparately()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "layout_sorting_rule"
     */
    public function testPropertyLayoutSortingRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_blocking_reason"
     */
    public function testPropertyPaymentBlockingReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_methods_list"
     */
    public function testPropertyPaymentMethodsList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_reason"
     */
    public function testPropertyPaymentReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_terms"
     */
    public function testPropertyPaymentTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payt_advice_is_sentby_edi"
     */
    public function testPropertyPaytAdviceIsSentbyEdi()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "physical_inventory_block_ind"
     */
    public function testPropertyPhysicalInventoryBlockInd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reconciliation_account"
     */
    public function testPropertyReconciliationAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "record_payment_history_indicator"
     */
    public function testPropertyRecordPaymentHistoryIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "user_at_customer"
     */
    public function testPropertyUserAtCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deletion_indicator"
     */
    public function testPropertyDeletionIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_planning_group"
     */
    public function testPropertyCashPlanningGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "known_or_negotiated_leave"
     */
    public function testPropertyKnownOrNegotiatedLeave()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "value_adjustment_key"
     */
    public function testPropertyValueAdjustmentKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_account_group"
     */
    public function testPropertyCustomerAccountGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_company_text"
     */
    public function testPropertyToCompanyText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_dunning"
     */
    public function testPropertyToCustomerDunning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_with_holding_tax"
     */
    public function testPropertyToWithHoldingTax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
