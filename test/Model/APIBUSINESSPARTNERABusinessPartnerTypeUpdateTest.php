<?php
/**
 * APIBUSINESSPARTNERABusinessPartnerTypeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BusinessPartner\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBUSINESSPARTNERABusinessPartnerTypeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description APIBUSINESSPARTNERABusinessPartnerTypeUpdate
 * @package     BeLenka\SAP\BusinessPartner
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBUSINESSPARTNERABusinessPartnerTypeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBUSINESSPARTNERABusinessPartnerTypeUpdate"
     */
    public function testAPIBUSINESSPARTNERABusinessPartnerTypeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "academic_title"
     */
    public function testPropertyAcademicTitle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_group"
     */
    public function testPropertyAuthorizationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_category"
     */
    public function testPropertyBusinessPartnerCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_grouping"
     */
    public function testPropertyBusinessPartnerGrouping()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "correspondence_language"
     */
    public function testPropertyCorrespondenceLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_name"
     */
    public function testPropertyFirstName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "form_of_address"
     */
    public function testPropertyFormOfAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry"
     */
    public function testPropertyIndustry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number1"
     */
    public function testPropertyInternationalLocationNumber1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number2"
     */
    public function testPropertyInternationalLocationNumber2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_female"
     */
    public function testPropertyIsFemale()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_male"
     */
    public function testPropertyIsMale()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_natural_person"
     */
    public function testPropertyIsNaturalPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_sex_unknown"
     */
    public function testPropertyIsSexUnknown()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gender_code_name"
     */
    public function testPropertyGenderCodeName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "language"
     */
    public function testPropertyLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_name"
     */
    public function testPropertyLastName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legal_form"
     */
    public function testPropertyLegalForm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_bp_name1"
     */
    public function testPropertyOrganizationBpName1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_bp_name2"
     */
    public function testPropertyOrganizationBpName2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_bp_name3"
     */
    public function testPropertyOrganizationBpName3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_bp_name4"
     */
    public function testPropertyOrganizationBpName4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_foundation_date"
     */
    public function testPropertyOrganizationFoundationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_liquidation_date"
     */
    public function testPropertyOrganizationLiquidationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "search_term1"
     */
    public function testPropertySearchTerm1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "search_term2"
     */
    public function testPropertySearchTerm2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_last_name"
     */
    public function testPropertyAdditionalLastName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "birth_date"
     */
    public function testPropertyBirthDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_birth_date_status"
     */
    public function testPropertyBusinessPartnerBirthDateStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_birthplace_name"
     */
    public function testPropertyBusinessPartnerBirthplaceName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_death_date"
     */
    public function testPropertyBusinessPartnerDeathDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_is_blocked"
     */
    public function testPropertyBusinessPartnerIsBlocked()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_type"
     */
    public function testPropertyBusinessPartnerType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "group_business_partner_name1"
     */
    public function testPropertyGroupBusinessPartnerName1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "group_business_partner_name2"
     */
    public function testPropertyGroupBusinessPartnerName2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number3"
     */
    public function testPropertyInternationalLocationNumber3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "middle_name"
     */
    public function testPropertyMiddleName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name_country"
     */
    public function testPropertyNameCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name_format"
     */
    public function testPropertyNameFormat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "person_full_name"
     */
    public function testPropertyPersonFullName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_marked_for_archiving"
     */
    public function testPropertyIsMarkedForArchiving()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_idby_ext_system"
     */
    public function testPropertyBusinessPartnerIdbyExtSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_print_format"
     */
    public function testPropertyBusinessPartnerPrintFormat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_occupation"
     */
    public function testPropertyBusinessPartnerOccupation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bus_part_marital_status"
     */
    public function testPropertyBusPartMaritalStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bus_part_nationality"
     */
    public function testPropertyBusPartNationality()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_birth_name"
     */
    public function testPropertyBusinessPartnerBirthName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_supplement_name"
     */
    public function testPropertyBusinessPartnerSupplementName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "natural_person_employer_name"
     */
    public function testPropertyNaturalPersonEmployerName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_name_prefix"
     */
    public function testPropertyLastNamePrefix()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_name_second_prefix"
     */
    public function testPropertyLastNameSecondPrefix()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "initials"
     */
    public function testPropertyInitials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bp_data_controller_is_not_required"
     */
    public function testPropertyBpDataControllerIsNotRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "trading_partner"
     */
    public function testPropertyTradingPartner()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
