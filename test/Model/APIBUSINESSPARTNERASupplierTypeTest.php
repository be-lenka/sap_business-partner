<?php
/**
 * APIBUSINESSPARTNERASupplierTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BusinessPartner\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBUSINESSPARTNERASupplierTypeTest Class Doc Comment
 *
 * @category    Class
 * @description APIBUSINESSPARTNERASupplierType
 * @package     BeLenka\SAP\BusinessPartner
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBUSINESSPARTNERASupplierTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBUSINESSPARTNERASupplierType"
     */
    public function testAPIBUSINESSPARTNERASupplierType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier"
     */
    public function testPropertySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alternative_payee_account_number"
     */
    public function testPropertyAlternativePayeeAccountNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_group"
     */
    public function testPropertyAuthorizationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_partner_pan_number"
     */
    public function testPropertyBusinessPartnerPanNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_by_user"
     */
    public function testPropertyCreatedByUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_date"
     */
    public function testPropertyCreationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer"
     */
    public function testPropertyCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_is_blocked_for_supplier"
     */
    public function testPropertyPaymentIsBlockedForSupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "posting_is_blocked"
     */
    public function testPropertyPostingIsBlocked()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_is_blocked"
     */
    public function testPropertyPurchasingIsBlocked()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_account_group"
     */
    public function testPropertySupplierAccountGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_full_name"
     */
    public function testPropertySupplierFullName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_name"
     */
    public function testPropertySupplierName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_registration"
     */
    public function testPropertyVatRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "birth_date"
     */
    public function testPropertyBirthDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "concatenated_international_loc_no"
     */
    public function testPropertyConcatenatedInternationalLocNo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deletion_indicator"
     */
    public function testPropertyDeletionIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fiscal_address"
     */
    public function testPropertyFiscalAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry"
     */
    public function testPropertyIndustry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number1"
     */
    public function testPropertyInternationalLocationNumber1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number2"
     */
    public function testPropertyInternationalLocationNumber2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number3"
     */
    public function testPropertyInternationalLocationNumber3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_natural_person"
     */
    public function testPropertyIsNaturalPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_reason"
     */
    public function testPropertyPaymentReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responsible_type"
     */
    public function testPropertyResponsibleType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_qlty_in_procmt_certfn_valid_to"
     */
    public function testPropertySuplrQltyInProcmtCertfnValidTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_quality_management_system"
     */
    public function testPropertySuplrQualityManagementSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_corporate_group"
     */
    public function testPropertySupplierCorporateGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_procurement_block"
     */
    public function testPropertySupplierProcurementBlock()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number1"
     */
    public function testPropertyTaxNumber1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number2"
     */
    public function testPropertyTaxNumber2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number3"
     */
    public function testPropertyTaxNumber3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number4"
     */
    public function testPropertyTaxNumber4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number5"
     */
    public function testPropertyTaxNumber5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number_responsible"
     */
    public function testPropertyTaxNumberResponsible()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number_type"
     */
    public function testPropertyTaxNumberType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_proof_of_deliv_rlvt_code"
     */
    public function testPropertySuplrProofOfDelivRlvtCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "br_tax_is_split"
     */
    public function testPropertyBrTaxIsSplit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "data_exchange_instruction_key"
     */
    public function testPropertyDataExchangeInstructionKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_supplier_company"
     */
    public function testPropertyToSupplierCompany()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_supplier_purchasing_org"
     */
    public function testPropertyToSupplierPurchasingOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_supplier_text"
     */
    public function testPropertyToSupplierText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
