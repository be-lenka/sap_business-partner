<?php
/**
 * APIBUSINESSPARTNERACustomerTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BusinessPartner
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Business Partner (A2X)
 *
 * This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BusinessPartner\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBUSINESSPARTNERACustomerTypeTest Class Doc Comment
 *
 * @category    Class
 * @description APIBUSINESSPARTNERACustomerType
 * @package     BeLenka\SAP\BusinessPartner
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBUSINESSPARTNERACustomerTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBUSINESSPARTNERACustomerType"
     */
    public function testAPIBUSINESSPARTNERACustomerType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer"
     */
    public function testPropertyCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_group"
     */
    public function testPropertyAuthorizationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_is_blocked_for_customer"
     */
    public function testPropertyBillingIsBlockedForCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_by_user"
     */
    public function testPropertyCreatedByUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_date"
     */
    public function testPropertyCreationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_account_group"
     */
    public function testPropertyCustomerAccountGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_classification"
     */
    public function testPropertyCustomerClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_full_name"
     */
    public function testPropertyCustomerFullName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bp_customer_full_name"
     */
    public function testPropertyBpCustomerFullName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_name"
     */
    public function testPropertyCustomerName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bp_customer_name"
     */
    public function testPropertyBpCustomerName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_is_blocked"
     */
    public function testPropertyDeliveryIsBlocked()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute01"
     */
    public function testPropertyFreeDefinedAttribute01()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute02"
     */
    public function testPropertyFreeDefinedAttribute02()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute03"
     */
    public function testPropertyFreeDefinedAttribute03()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute04"
     */
    public function testPropertyFreeDefinedAttribute04()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute05"
     */
    public function testPropertyFreeDefinedAttribute05()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute06"
     */
    public function testPropertyFreeDefinedAttribute06()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute07"
     */
    public function testPropertyFreeDefinedAttribute07()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute08"
     */
    public function testPropertyFreeDefinedAttribute08()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute09"
     */
    public function testPropertyFreeDefinedAttribute09()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_defined_attribute10"
     */
    public function testPropertyFreeDefinedAttribute10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nf_partner_is_natural_person"
     */
    public function testPropertyNfPartnerIsNaturalPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_is_blocked_for_customer"
     */
    public function testPropertyOrderIsBlockedForCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "posting_is_blocked"
     */
    public function testPropertyPostingIsBlocked()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier"
     */
    public function testPropertySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_corporate_group"
     */
    public function testPropertyCustomerCorporateGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fiscal_address"
     */
    public function testPropertyFiscalAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry"
     */
    public function testPropertyIndustry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_code1"
     */
    public function testPropertyIndustryCode1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_code2"
     */
    public function testPropertyIndustryCode2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_code3"
     */
    public function testPropertyIndustryCode3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_code4"
     */
    public function testPropertyIndustryCode4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_code5"
     */
    public function testPropertyIndustryCode5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number1"
     */
    public function testPropertyInternationalLocationNumber1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number2"
     */
    public function testPropertyInternationalLocationNumber2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_location_number3"
     */
    public function testPropertyInternationalLocationNumber3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nielsen_region"
     */
    public function testPropertyNielsenRegion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_reason"
     */
    public function testPropertyPaymentReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responsible_type"
     */
    public function testPropertyResponsibleType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number1"
     */
    public function testPropertyTaxNumber1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number2"
     */
    public function testPropertyTaxNumber2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number3"
     */
    public function testPropertyTaxNumber3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number4"
     */
    public function testPropertyTaxNumber4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number5"
     */
    public function testPropertyTaxNumber5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_number_type"
     */
    public function testPropertyTaxNumberType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_registration"
     */
    public function testPropertyVatRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deletion_indicator"
     */
    public function testPropertyDeletionIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "express_train_station_name"
     */
    public function testPropertyExpressTrainStationName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "train_station_name"
     */
    public function testPropertyTrainStationName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "city_code"
     */
    public function testPropertyCityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "county"
     */
    public function testPropertyCounty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_cust_addr_depdnt_ext_identifier"
     */
    public function testPropertyToCustAddrDepdntExtIdentifier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_cust_addr_depdnt_information"
     */
    public function testPropertyToCustAddrDepdntInformation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_company"
     */
    public function testPropertyToCustomerCompany()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_sales_area"
     */
    public function testPropertyToCustomerSalesArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_tax_grouping"
     */
    public function testPropertyToCustomerTaxGrouping()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_text"
     */
    public function testPropertyToCustomerText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_unloading_point"
     */
    public function testPropertyToCustomerUnloadingPoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_cust_unldg_pt_addr_depdnt_info"
     */
    public function testPropertyToCustUnldgPtAddrDepdntInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
